{"version":3,"sources":["webpack://asc/webpack/universalModuleDefinition","webpack://asc/webpack/bootstrap","webpack://asc/../node_modules/node-libs-browser/mock/process.js","webpack://asc/../node_modules/webpack/buildin/global.js","webpack://asc/../node_modules/path-browserify/index.js","webpack://asc/../node_modules/browser-process-hrtime/index.js","webpack://asc/../node_modules/minimist/index.js","webpack://asc/external {\"commonjs\":\"./assemblyscript\",\"commonjs2\":\"./assemblyscript\"}","webpack://asc/external {\"commonjs\":\"assemblyscript\",\"commonjs2\":\"assemblyscript\",\"amd\":\"assemblyscript\",\"root\":\"_\"}","webpack://asc/../node_modules/os-browserify/browser.js","webpack://asc/../node_modules/isarray/index.js","webpack://asc/../node_modules/ieee754/index.js","webpack://asc/../node_modules/base64-js/index.js","webpack://asc/../node_modules/buffer/index.js","webpack://asc/./asc.js"],"names":["root","factory","exports","module","require","e","define","amd","undefined","window","__WEBPACK_EXTERNAL_MODULE__6__","__WEBPACK_EXTERNAL_MODULE__7__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","path","cwd","nextTick","fn","setTimeout","platform","arch","execPath","title","pid","browser","env","argv","binding","Error","chdir","dir","resolve","exit","kill","umask","dlopen","uptime","memoryUsage","uvCounters","features","g","this","Function","eval","process","normalizeArray","parts","allowAboveRoot","up","length","last","splice","unshift","splitPathRe","splitPath","filename","exec","slice","filter","xs","f","res","push","resolvedPath","resolvedAbsolute","arguments","TypeError","charAt","split","join","normalize","isAbsolute","trailingSlash","substr","paths","Array","index","relative","from","to","trim","arr","start","end","fromParts","toParts","Math","min","samePartsLength","outputParts","concat","sep","delimiter","dirname","result","basename","ext","extname","str","len","global","hrtime","previousTimestamp","clocktime","performanceNow","performance","seconds","floor","nanoseconds","now","mozNow","msNow","oNow","webkitNow","Date","getTime","isNumber","x","test","args","opts","flags","bools","strings","unknownFn","allBools","Boolean","forEach","key","aliases","keys","alias","y","string","defaults","_","setArg","notFlags","val","arg","argDefined","Number","setKey","obj","isArray","aliasIsBoolean","some","indexOf","match","next","letters","broken","j","stopEarly","apply","code","endianness","hostname","location","loadavg","freemem","MAX_VALUE","totalmem","cpus","type","release","navigator","appVersion","networkInterfaces","getNetworkInterfaces","tmpdir","tmpDir","EOL","homedir","toString","read","buffer","offset","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","Infinity","pow","write","rt","abs","isNaN","log","LN2","byteLength","b64","placeHoldersCount","toByteArray","tmp","placeHolders","Arr","L","revLookup","charCodeAt","fromByteArray","uint8","extraBytes","output","len2","encodeChunk","lookup","Uint8Array","num","base64","ieee754","kMaxLength","Buffer","TYPED_ARRAY_SUPPORT","createBuffer","that","RangeError","__proto__","encodingOrOffset","allocUnsafe","ArrayBuffer","array","byteOffset","fromArrayLike","fromArrayBuffer","encoding","isEncoding","actual","fromString","isBuffer","checked","copy","data","fromObject","assertSize","size","isView","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","swap","b","bidirectionalIndexOf","arrayIndexOf","lastIndexOf","indexSize","arrLength","valLength","String","buf","readUInt16BE","foundIndex","found","hexWrite","remaining","strLen","parsed","parseInt","utf8Write","blitBuffer","asciiWrite","byteArray","asciiToBytes","latin1Write","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","base64Slice","utf8Slice","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","decodeCodePointsArray","SlowBuffer","alloc","INSPECT_MAX_BYTES","foo","subarray","typedArraySupport","poolSize","_augment","Symbol","species","fill","allocUnsafeSlow","_isBuffer","compare","a","list","pos","swap16","swap32","swap64","hexSlice","asciiSlice","latin1Slice","utf16leSlice","equals","inspect","max","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","ret","out","toHex","bytes","checkOffset","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","set","INVALID_BASE64_RE","leadSurrogate","replace","stringtrim","base64clean","src","dst","fs","os","assemblyscript","isDev","install","register","project","parseArguments","options","opt","default","boolean","checkDiagnostics","emitter","stderr","diagnostic","hasErrors","nextDiagnostic","formatDiagnostic","isTTY","isError","createStats","readTime","readCount","writeTime","writeCount","parseTime","parseCount","compileTime","compileCount","emitTime","emitCount","validateTime","validateCount","optimizeTime","optimizeCount","measure","times","printStats","stats","format","time","count","toFixed","stdout","isBundle","version","sourceMapRoot","libraryPrefix","LIBRARY_PREFIX","defaultOptimizeLevel","defaultShrinkLevel","libraryFiles","(lib)/allocator/arena","(lib)/allocator/emscripten","(lib)/allocator/none","(lib)/allocator/system","(lib)/allocator/tlsf","(lib)/array","(lib)/builtins","(lib)/error","(lib)/iterator","(lib)/map","(lib)/memory","(lib)/polyfills","(lib)/regexp","(lib)/set","(lib)/string","definitionFiles","assembly","portable","main","callback","readFile","readFileNode","writeFile","writeFileNode","listFiles","listFilesNode","readFileSync","err","stack","help","option","text","desc","map","line","baseDir","stdLibDir","libDirs","noLib","lib","parser","k","sourcePath","sourceText","parseFile","nextFile","startsWith","substring","hasBundledLibrary","libPath","libDir","libFiles","libText","compilerOptions","createOptions","setTarget","setNoTreeShaking","noTreeShaking","setNoAssert","setNoMemory","noMemory","setImportMemory","importMemory","setMemoryBase","memoryBase","setSourceMap","sourceMap","compile","dispose","validate","trapMode","runPasses","optimizeLevel","shrinkLevel","debugInfo","noDebug","optimize","setOptimizeLevel","setShrinkLevel","setDebugInfo","pass","noEmit","hasStdout","outFile","textFile","asmjsFile","binaryFile","binary","sourceMapURL","toBinary","writeStdout","JSON","parse","sourceRoot","sources","sourceContents","stringify","toText","asm","toAsmjs","contents","writeFileSync","files","sync","used","createMemoryStream","stream","chunk","toBuffer","tscOptions","alwaysStrict","noImplicitAny","noImplicitReturns","noImplicitThis","noEmitOnError","strictNullChecks","experimentalDecorators","types","allowJs"],"mappings":"CAAA,SAAAA,EAAAC,GACA,iBAAAC,SAAA,iBAAAC,OACAA,OAAAD,QAAAD,EAAAG,QAAA,+BAAuG,IAAM,OAAAA,QAAA,kBAAoC,MAAAC,KAAjJ,IACA,mBAAAC,eAAAC,IACAD,QAAA,mBAAAL,GACA,iBAAAC,QACAA,QAAA,IAAAD,EAAAG,QAAA,+BAAuG,IAAM,OAAAA,QAAA,kBAAoC,MAAAC,KAAjJ,IAEAL,EAAA,IAAAC,EAAAD,OAAAQ,GAAAR,EAAA,GARA,CASCS,OAAA,SAAAC,EAAAC,GACD,mBCTA,IAAAC,KAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAZ,QAGA,IAAAC,EAAAS,EAAAE,IACAC,EAAAD,EACAE,GAAA,EACAd,YAUA,OANAe,EAAAH,GAAAI,KAAAf,EAAAD,QAAAC,IAAAD,QAAAW,GAGAV,EAAAa,GAAA,EAGAb,EAAAD,QA2CA,OAtCAW,EAAAM,EAAAF,EAGAJ,EAAAO,EAAAR,EAGAC,EAAAQ,EAAA,SAAAnB,EAAAoB,EAAAC,GACAV,EAAAW,EAAAtB,EAAAoB,IACAG,OAAAC,eAAAxB,EAAAoB,GACAK,cAAA,EACAC,YAAA,EACAC,IAAAN,KAMAV,EAAAiB,EAAA,SAAA5B,GACAuB,OAAAC,eAAAxB,EAAA,cAAiD6B,OAAA,KAIjDlB,EAAAmB,EAAA,SAAA7B,GACA,IAAAoB,EAAApB,KAAA8B,WACA,WAA2B,OAAA9B,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAU,EAAAQ,EAAAE,EAAA,IAAAA,GACAA,GAIAV,EAAAW,EAAA,SAAAU,EAAAC,GAAsD,OAAAV,OAAAW,UAAAC,eAAAnB,KAAAgB,EAAAC,IAGtDtB,EAAAyB,EAAA,GAIAzB,IAAA0B,EAAA,sBCpDA,IAEAC,EADAC,EAhBAvC,EAAAwC,SAAA,SAAAC,GACAC,WAAAD,EAAA,IAGAzC,EAAA2C,SAAA3C,EAAA4C,KACA5C,EAAA6C,SAAA7C,EAAA8C,MAAA,UACA9C,EAAA+C,IAAA,EACA/C,EAAAgD,SAAA,EACAhD,EAAAiD,OACAjD,EAAAkD,QAEAlD,EAAAmD,QAAA,SAAA/B,GACA,UAAAgC,MAAA,8CAIAb,EAAA,IAEAvC,EAAAuC,IAAA,WAA+B,OAAAA,GAC/BvC,EAAAqD,MAAA,SAAAC,GACAhB,MAAA3B,EAAA,IACA4B,EAAAD,EAAAiB,QAAAD,EAAAf,IAIAvC,EAAAwD,KAAAxD,EAAAyD,KACAzD,EAAA0D,MAAA1D,EAAA2D,OACA3D,EAAA4D,OAAA5D,EAAA6D,YACA7D,EAAA8D,WAAA,aACA9D,EAAA+D,2BC7BA,IAAAC,EAGAA,EAAA,WACA,OAAAC,KADA,GAIA,IAEAD,KAAAE,SAAA,cAAAA,KAAA,EAAAC,MAAA,QACC,MAAAhE,GAED,iBAAAI,SAAAyD,EAAAzD,QAOAN,EAAAD,QAAAgE,oBCnBA,SAAAI,GAyBA,SAAAC,EAAAC,EAAAC,GAGA,IADA,IAAAC,EAAA,EACA3D,EAAAyD,EAAAG,OAAA,EAAgC5D,GAAA,EAAQA,IAAA,CACxC,IAAA6D,EAAAJ,EAAAzD,GACA,MAAA6D,EACAJ,EAAAK,OAAA9D,EAAA,GACK,OAAA6D,GACLJ,EAAAK,OAAA9D,EAAA,GACA2D,KACKA,IACLF,EAAAK,OAAA9D,EAAA,GACA2D,KAKA,GAAAD,EACA,KAAUC,IAAMA,EAChBF,EAAAM,QAAA,MAIA,OAAAN,EAKA,IAAAO,EACA,gEACAC,EAAA,SAAAC,GACA,OAAAF,EAAAG,KAAAD,GAAAE,MAAA,IAuJA,SAAAC,EAAAC,EAAAC,GACA,GAAAD,EAAAD,OAAA,OAAAC,EAAAD,OAAAE,GAEA,IADA,IAAAC,KACAxE,EAAA,EAAmBA,EAAAsE,EAAAV,OAAe5D,IAClCuE,EAAAD,EAAAtE,KAAAsE,IAAAE,EAAAC,KAAAH,EAAAtE,IAEA,OAAAwE,EAxJArF,EAAAuD,QAAA,WAIA,IAHA,IAAAgC,EAAA,GACAC,GAAA,EAEA3E,EAAA4E,UAAAhB,OAAA,EAAoC5D,IAAA,IAAA2E,EAA8B3E,IAAA,CAClE,IAAAyB,EAAAzB,GAAA,EAAA4E,UAAA5E,GAAAuD,EAAA7B,MAGA,oBAAAD,EACA,UAAAoD,UAAA,6CACKpD,IAILiD,EAAAjD,EAAA,IAAAiD,EACAC,EAAA,MAAAlD,EAAAqD,OAAA,IAWA,OAJAJ,EAAAlB,EAAAa,EAAAK,EAAAK,MAAA,cAAAxD,GACA,QAAAA,KACGoD,GAAAK,KAAA,MAEHL,EAAA,QAAAD,GAAA,KAKAvF,EAAA8F,UAAA,SAAAxD,GACA,IAAAyD,EAAA/F,EAAA+F,WAAAzD,GACA0D,EAAA,MAAAC,EAAA3D,GAAA,GAcA,OAXAA,EAAA+B,EAAAa,EAAA5C,EAAAsD,MAAA,cAAAxD,GACA,QAAAA,KACG2D,GAAAF,KAAA,OAEHE,IACAzD,EAAA,KAEAA,GAAA0D,IACA1D,GAAA,MAGAyD,EAAA,QAAAzD,GAIAtC,EAAA+F,WAAA,SAAAzD,GACA,YAAAA,EAAAqD,OAAA,IAIA3F,EAAA6F,KAAA,WACA,IAAAK,EAAAC,MAAAjE,UAAA+C,MAAAjE,KAAAyE,UAAA,GACA,OAAAzF,EAAA8F,UAAAZ,EAAAgB,EAAA,SAAA9D,EAAAgE,GACA,oBAAAhE,EACA,UAAAsD,UAAA,0CAEA,OAAAtD,IACGyD,KAAA,OAMH7F,EAAAqG,SAAA,SAAAC,EAAAC,GAIA,SAAAC,EAAAC,GAEA,IADA,IAAAC,EAAA,EACUA,EAAAD,EAAAhC,QACV,KAAAgC,EAAAC,GAD8BA,KAK9B,IADA,IAAAC,EAAAF,EAAAhC,OAAA,EACUkC,GAAA,GACV,KAAAF,EAAAE,GADoBA,KAIpB,OAAAD,EAAAC,KACAF,EAAAxB,MAAAyB,EAAAC,EAAAD,EAAA,GAfAJ,EAAAtG,EAAAuD,QAAA+C,GAAAL,OAAA,GACAM,EAAAvG,EAAAuD,QAAAgD,GAAAN,OAAA,GAsBA,IALA,IAAAW,EAAAJ,EAAAF,EAAAV,MAAA,MACAiB,EAAAL,EAAAD,EAAAX,MAAA,MAEAnB,EAAAqC,KAAAC,IAAAH,EAAAnC,OAAAoC,EAAApC,QACAuC,EAAAvC,EACA5D,EAAA,EAAiBA,EAAA4D,EAAY5D,IAC7B,GAAA+F,EAAA/F,KAAAgG,EAAAhG,GAAA,CACAmG,EAAAnG,EACA,MAIA,IAAAoG,KACA,IAAApG,EAAAmG,EAA+BnG,EAAA+F,EAAAnC,OAAsB5D,IACrDoG,EAAA3B,KAAA,MAKA,OAFA2B,IAAAC,OAAAL,EAAA5B,MAAA+B,KAEAnB,KAAA,MAGA7F,EAAAmH,IAAA,IACAnH,EAAAoH,UAAA,IAEApH,EAAAqH,QAAA,SAAA/E,GACA,IAAAgF,EAAAxC,EAAAxC,GACAxC,EAAAwH,EAAA,GACAhE,EAAAgE,EAAA,GAEA,OAAAxH,GAAAwD,GAKAA,IAEAA,IAAA2C,OAAA,EAAA3C,EAAAmB,OAAA,IAGA3E,EAAAwD,GARA,KAYAtD,EAAAuH,SAAA,SAAAjF,EAAAkF,GACA,IAAApC,EAAAN,EAAAxC,GAAA,GAKA,OAHAkF,GAAApC,EAAAa,QAAA,EAAAuB,EAAA/C,UAAA+C,IACApC,IAAAa,OAAA,EAAAb,EAAAX,OAAA+C,EAAA/C,SAEAW,GAIApF,EAAAyH,QAAA,SAAAnF,GACA,OAAAwC,EAAAxC,GAAA,IAaA,IAAA2D,EAAA,WAAAA,QAAA,GACA,SAAAyB,EAAAhB,EAAAiB,GAAkC,OAAAD,EAAAzB,OAAAS,EAAAiB,IAClC,SAAAD,EAAAhB,EAAAiB,GAEA,OADAjB,EAAA,IAAAA,EAAAgB,EAAAjD,OAAAiC,GACAgB,EAAAzB,OAAAS,EAAAiB,wCC7NA,SAAAvD,EAAAwD,GAAA3H,EAAAD,QAAAoE,EAAAyD,QAcA,SAAAC,GACA,IAAAC,EAAA,KAAAC,EAAAhH,KAAAiH,GACAC,EAAApB,KAAAqB,MAAAJ,GACAK,EAAAtB,KAAAqB,MAAAJ,EAAA,OACAD,IACAI,GAAAJ,EAAA,IACAM,GAAAN,EAAA,IACA,IACAI,IACAE,GAAA,MAGA,OAAAF,EAAAE,IAvBA,IAAAH,EAAAL,EAAAK,gBACAD,EACAC,EAAAI,KACAJ,EAAAK,QACAL,EAAAM,OACAN,EAAAO,MACAP,EAAAQ,WACA,WAAa,WAAAC,MAAAC,iDC4Nb,SAAAC,EAAAC,GACA,uBAAAA,MACA,iBAAAC,KAAAD,IACA,6CAAAC,KAAAD,IAzOA5I,EAAAD,QAAA,SAAA+I,EAAAC,GACAA,UAEA,IAAAC,GAAiBC,SAAWC,WAAcC,UAAA,MAE1C,mBAAAJ,EAAA,UACAC,EAAAG,UAAAJ,EAAA,SAGA,kBAAAA,EAAA,SAAAA,EAAA,QACAC,EAAAI,UAAA,KAEAnC,OAAA8B,EAAA,SAAA9D,OAAAoE,SAAAC,QAAA,SAAAC,GACAP,EAAAC,MAAAM,IAAA,IAIA,IAAAC,KACAlI,OAAAmI,KAAAV,EAAAW,WAAgCJ,QAAA,SAAAC,GAChCC,EAAAD,MAAAtC,OAAA8B,EAAAW,MAAAH,IACAC,EAAAD,GAAAD,QAAA,SAAAV,GACAY,EAAAZ,IAAAW,GAAAtC,OAAAuC,EAAAD,GAAAtE,OAAA,SAAA0E,GACA,OAAAf,IAAAe,YAKA1C,OAAA8B,EAAAa,QAAA3E,OAAAoE,SAAAC,QAAA,SAAAC,GACAP,EAAAE,QAAAK,IAAA,EACAC,EAAAD,KACAP,EAAAE,QAAAM,EAAAD,KAAA,KAIA,IAAAM,EAAAd,EAAA,YAEA9F,GAAgB6G,MAChBxI,OAAAmI,KAAAT,EAAAC,OAAAK,QAAA,SAAAC,GACAQ,EAAAR,OAAAlJ,IAAAwJ,EAAAN,IAAAM,EAAAN,MAGA,IAAAS,KAYA,SAAAD,EAAAR,EAAAU,EAAAC,GACA,IAAAA,IAAAlB,EAAAG,WANA,SAAAI,EAAAW,GACA,OAAAlB,EAAAI,UAAA,YAAAP,KAAAqB,IACAlB,EAAAE,QAAAK,IAAAP,EAAAC,MAAAM,IAAAC,EAAAD,GAIAY,CAAAZ,EAAAW,KACA,IAAAlB,EAAAG,UAAAe,GADA,CAIA,IAAAtI,GAAAoH,EAAAE,QAAAK,IAAAZ,EAAAsB,GACAG,OAAAH,KAEAI,EAAApH,EAAAsG,EAAA5D,MAAA,KAAA/D,IAEA4H,EAAAD,QAAAD,QAAA,SAAAV,GACAyB,EAAApH,EAAA2F,EAAAjD,MAAA,KAAA/D,MAIA,SAAAyI,EAAAC,EAAAb,EAAA7H,GACA,IAAAP,EAAAiJ,EACAb,EAAAzE,MAAA,MAAAsE,QAAA,SAAAC,QACAlJ,IAAAgB,EAAAkI,KAAAlI,EAAAkI,OACAlI,IAAAkI,KAGA,IAAAA,EAAAE,IAAAjF,OAAA,QACAnE,IAAAgB,EAAAkI,IAAAP,EAAAC,MAAAM,IAAA,kBAAAlI,EAAAkI,GACAlI,EAAAkI,GAAA3H,EAEAsE,MAAAqE,QAAAlJ,EAAAkI,IACAlI,EAAAkI,GAAAlE,KAAAzD,GAGAP,EAAAkI,IAAAlI,EAAAkI,GAAA3H,GAIA,SAAA4I,EAAAjB,GACA,OAAAC,EAAAD,GAAAkB,KAAA,SAAA7B,GACA,OAAAI,EAAAC,MAAAL,MA9CA,IAAAE,EAAA4B,QAAA,QACAV,EAAAlB,EAAA9D,MAAA8D,EAAA4B,QAAA,SACA5B,IAAA9D,MAAA,EAAA8D,EAAA4B,QAAA,QAgDA,QAAA9J,EAAA,EAAmBA,EAAAkI,EAAAtE,OAAiB5D,IAAA,CACpC,IAAAsJ,EAAApB,EAAAlI,GAEA,YAAAiI,KAAAqB,GAAA,CAIA,IAAAlJ,EAAAkJ,EAAAS,MAAA,yBACApB,EAAAvI,EAAA,GACAY,EAAAZ,EAAA,GACAgI,EAAAC,MAAAM,KACA3H,EAAA,UAAAA,GAEAmI,EAAAR,EAAA3H,EAAAsI,QAEA,cAAArB,KAAAqB,GAAA,CAEAH,EADAR,EAAAW,EAAAS,MAAA,kBACA,EAAAT,QAEA,WAAArB,KAAAqB,GAAA,CACAX,EAAAW,EAAAS,MAAA,mBAEAtK,KADAuK,EAAA9B,EAAAlI,EAAA,KACA,KAAAiI,KAAA+B,IACA5B,EAAAC,MAAAM,IACAP,EAAAI,UACAI,EAAAD,IAAAiB,EAAAjB,GAIA,iBAAAV,KAAA+B,IACAb,EAAAR,EAAA,SAAAqB,EAAAV,GACAtJ,KAGAmJ,EAAAR,GAAAP,EAAAE,QAAAK,IAAA,GAAAW,IARAH,EAAAR,EAAAqB,EAAAV,GACAtJ,UAUA,aAAAiI,KAAAqB,GAAA,CAIA,IAHA,IAAAW,EAAAX,EAAAlF,MAAA,MAAAW,MAAA,IAEAmF,GAAA,EACAC,EAAA,EAA2BA,EAAAF,EAAArG,OAAoBuG,IAAA,CAC/C,IAAAH,EAEA,UAFAA,EAAAV,EAAAlF,MAAA+F,EAAA,IAEA,CAKA,cAAAlC,KAAAgC,EAAAE,KAAA,IAAAlC,KAAA+B,GAAA,CACAb,EAAAc,EAAAE,GAAAH,EAAAjF,MAAA,QAAAuE,GACAY,GAAA,EACA,MAGA,cAAAjC,KAAAgC,EAAAE,KACA,0BAAAlC,KAAA+B,GAAA,CACAb,EAAAc,EAAAE,GAAAH,EAAAV,GACAY,GAAA,EACA,MAGA,GAAAD,EAAAE,EAAA,IAAAF,EAAAE,EAAA,GAAAJ,MAAA,OACAZ,EAAAc,EAAAE,GAAAb,EAAAlF,MAAA+F,EAAA,GAAAb,GACAY,GAAA,EACA,MAGAf,EAAAc,EAAAE,IAAA/B,EAAAE,QAAA2B,EAAAE,KAAA,GAAAb,QAvBAH,EAAAc,EAAAE,GAAAH,EAAAV,GA2BAX,EAAAW,EAAAlF,OAAA,MACA8F,GAAA,MAAAvB,KACAT,EAAAlI,EAAA,kBAAAiI,KAAAC,EAAAlI,EAAA,KACAoI,EAAAC,MAAAM,IACAC,EAAAD,IAAAiB,EAAAjB,GAIAT,EAAAlI,EAAA,iBAAAiI,KAAAC,EAAAlI,EAAA,KACAmJ,EAAAR,EAAA,SAAAT,EAAAlI,EAAA,GAAAsJ,GACAtJ,KAGAmJ,EAAAR,GAAAP,EAAAE,QAAAK,IAAA,GAAAW,IARAH,EAAAR,EAAAT,EAAAlI,EAAA,GAAAsJ,GACAtJ,WAiBA,GALAoI,EAAAG,YAAA,IAAAH,EAAAG,UAAAe,IACAjH,EAAA6G,EAAAzE,KACA2D,EAAAE,QAAA,IAAAP,EAAAuB,KAAAE,OAAAF,IAGAnB,EAAAiC,UAAA,CACA/H,EAAA6G,EAAAzE,KAAA4F,MAAAhI,EAAA6G,EAAAhB,EAAA9D,MAAApE,EAAA,IACA,OA2BA,OAtBAU,OAAAmI,KAAAI,GAAAP,QAAA,SAAAC,GAyBA,IAAAe,EAAAb,EACApI,EADAiJ,EAxBArH,EAwBAwG,EAxBAF,EAAA5D,MAAA,KAyBAtE,EAAAiJ,EACAb,EAAAzE,MAAA,MAAAsE,QAAA,SAAAC,GACAlI,IAAAkI,SAGAE,IAAAjF,OAAA,KACAnD,IA9BAgJ,EAAApH,EAAAsG,EAAA5D,MAAA,KAAAkE,EAAAN,KAEAC,EAAAD,QAAAD,QAAA,SAAAV,GACAyB,EAAApH,EAAA2F,EAAAjD,MAAA,KAAAkE,EAAAN,SAKAR,EAAA,OACA9F,EAAA,UAAAiD,MACA8D,EAAAV,QAAA,SAAAC,GACAtG,EAAA,MAAAoC,KAAAkE,MAIAS,EAAAV,QAAA,SAAAC,GACAtG,EAAA6G,EAAAzE,KAAAkE,KAIAtG,00FCzNAjD,EAAAD,QAAAQ,iBCAA,YAAAC,EAAA,CAA2D,IAAAN,EAAA,IAAAiD,MAAA,kCAAmF,MAA7BjD,EAAAgL,KAAA,mBAA6BhL,EAC9IF,EAAAD,QAAAS,iBCDAT,EAAAoL,WAAA,WAAkC,YAElCpL,EAAAqL,SAAA,WACA,0BAAAC,SACAA,SAAAD,SAEA,IAGArL,EAAAuL,QAAA,WAA+B,UAE/BvL,EAAA4D,OAAA,WAA8B,UAE9B5D,EAAAwL,QAAA,WACA,OAAAnB,OAAAoB,WAGAzL,EAAA0L,SAAA,WACA,OAAArB,OAAAoB,WAGAzL,EAAA2L,KAAA,WAA4B,UAE5B3L,EAAA4L,KAAA,WAA4B,iBAE5B5L,EAAA6L,QAAA,WACA,0BAAAC,UACAA,UAAAC,WAEA,IAGA/L,EAAAgM,kBACAhM,EAAAiM,qBACA,WAAe,UAEfjM,EAAA4C,KAAA,WAA4B,oBAE5B5C,EAAA2C,SAAA,WAAgC,iBAEhC3C,EAAAkM,OAAAlM,EAAAmM,OAAA,WACA,cAGAnM,EAAAoM,IAAA,KAEApM,EAAAqM,QAAA,WACA,0CC/CA,IAAAC,KAAiBA,SAEjBrM,EAAAD,QAAAmG,MAAAqE,SAAA,SAAA/D,GACA,wBAAA6F,EAAAtL,KAAAyF,mBCHAzG,EAAAuM,KAAA,SAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACA,IAAAzM,EAAAc,EACA4L,EAAA,EAAAD,EAAAD,EAAA,EACAG,GAAA,GAAAD,GAAA,EACAE,EAAAD,GAAA,EACAE,GAAA,EACAnM,EAAA6L,EAAAE,EAAA,IACAzL,EAAAuL,GAAA,IACArK,EAAAmK,EAAAC,EAAA5L,GAOA,IALAA,GAAAM,EAEAhB,EAAAkC,GAAA,IAAA2K,GAAA,EACA3K,KAAA2K,EACAA,GAAAH,EACQG,EAAA,EAAW7M,EAAA,IAAAA,EAAAqM,EAAAC,EAAA5L,MAAAM,EAAA6L,GAAA,GAKnB,IAHA/L,EAAAd,GAAA,IAAA6M,GAAA,EACA7M,KAAA6M,EACAA,GAAAL,EACQK,EAAA,EAAW/L,EAAA,IAAAA,EAAAuL,EAAAC,EAAA5L,MAAAM,EAAA6L,GAAA,GAEnB,OAAA7M,EACAA,EAAA,EAAA4M,MACG,IAAA5M,IAAA2M,EACH,OAAA7L,EAAAgM,IAAAC,KAAA7K,GAAA,KAEApB,GAAA6F,KAAAqG,IAAA,EAAAR,GACAxM,GAAA4M,EAEA,OAAA1K,GAAA,KAAApB,EAAA6F,KAAAqG,IAAA,EAAAhN,EAAAwM,IAGA3M,EAAAoN,MAAA,SAAAZ,EAAA3K,EAAA4K,EAAAC,EAAAC,EAAAC,GACA,IAAAzM,EAAAc,EAAAC,EACA2L,EAAA,EAAAD,EAAAD,EAAA,EACAG,GAAA,GAAAD,GAAA,EACAE,EAAAD,GAAA,EACAO,EAAA,KAAAV,EAAA7F,KAAAqG,IAAA,OAAArG,KAAAqG,IAAA,SACAtM,EAAA6L,EAAA,EAAAE,EAAA,EACAzL,EAAAuL,EAAA,KACArK,EAAAR,EAAA,OAAAA,GAAA,EAAAA,EAAA,MAmCA,IAjCAA,EAAAiF,KAAAwG,IAAAzL,GAEA0L,MAAA1L,QAAAqL,KACAjM,EAAAsM,MAAA1L,GAAA,IACA1B,EAAA2M,IAEA3M,EAAA2G,KAAAqB,MAAArB,KAAA0G,IAAA3L,GAAAiF,KAAA2G,KACA5L,GAAAX,EAAA4F,KAAAqG,IAAA,GAAAhN,IAAA,IACAA,IACAe,GAAA,IAGAW,GADA1B,EAAA4M,GAAA,EACAM,EAAAnM,EAEAmM,EAAAvG,KAAAqG,IAAA,IAAAJ,IAEA7L,GAAA,IACAf,IACAe,GAAA,GAGAf,EAAA4M,GAAAD,GACA7L,EAAA,EACAd,EAAA2M,GACK3M,EAAA4M,GAAA,GACL9L,GAAAY,EAAAX,EAAA,GAAA4F,KAAAqG,IAAA,EAAAR,GACAxM,GAAA4M,IAEA9L,EAAAY,EAAAiF,KAAAqG,IAAA,EAAAJ,EAAA,GAAAjG,KAAAqG,IAAA,EAAAR,GACAxM,EAAA,IAIQwM,GAAA,EAAWH,EAAAC,EAAA5L,GAAA,IAAAI,EAAAJ,GAAAM,EAAAF,GAAA,IAAA0L,GAAA,GAInB,IAFAxM,KAAAwM,EAAA1L,EACA4L,GAAAF,EACQE,EAAA,EAAUL,EAAAC,EAAA5L,GAAA,IAAAV,EAAAU,GAAAM,EAAAhB,GAAA,IAAA0M,GAAA,GAElBL,EAAAC,EAAA5L,EAAAM,IAAA,IAAAkB,iCChFArC,EAAA0N,WAiCA,SAAAC,GAEA,SAAAA,EAAAlJ,OAAA,EAAAmJ,EAAAD,IAlCA3N,EAAA6N,YAqCA,SAAAF,GACA,IAAA9M,EAAAC,EAAAgN,EAAAC,EAAAtH,EACAkB,EAAAgG,EAAAlJ,OACAsJ,EAAAH,EAAAD,GAEAlH,EAAA,IAAAuH,EAAA,EAAArG,EAAA,EAAAoG,GAGAjN,EAAAiN,EAAA,EAAApG,EAAA,EAAAA,EAEA,IAAAsG,EAAA,EAEA,IAAApN,EAAA,EAAaA,EAAAC,EAAOD,GAAA,EACpBiN,EAAAI,EAAAP,EAAAQ,WAAAtN,KAAA,GAAAqN,EAAAP,EAAAQ,WAAAtN,EAAA,QAAAqN,EAAAP,EAAAQ,WAAAtN,EAAA,OAAAqN,EAAAP,EAAAQ,WAAAtN,EAAA,IACA4F,EAAAwH,KAAAH,GAAA,OACArH,EAAAwH,KAAAH,GAAA,MACArH,EAAAwH,KAAA,IAAAH,EAGA,IAAAC,GACAD,EAAAI,EAAAP,EAAAQ,WAAAtN,KAAA,EAAAqN,EAAAP,EAAAQ,WAAAtN,EAAA,OACA4F,EAAAwH,KAAA,IAAAH,GACG,IAAAC,IACHD,EAAAI,EAAAP,EAAAQ,WAAAtN,KAAA,GAAAqN,EAAAP,EAAAQ,WAAAtN,EAAA,OAAAqN,EAAAP,EAAAQ,WAAAtN,EAAA,OACA4F,EAAAwH,KAAAH,GAAA,MACArH,EAAAwH,KAAA,IAAAH,GAGA,OAAArH,GAhEAzG,EAAAoO,cAiFA,SAAAC,GASA,IARA,IAAAP,EACAnG,EAAA0G,EAAA5J,OACA6J,EAAA3G,EAAA,EACA4G,EAAA,GACAjK,KAIAzD,EAAA,EAAA2N,EAAA7G,EAAA2G,EAA0CzN,EAAA2N,EAAU3N,GAHpD,MAIAyD,EAAAgB,KAAAmJ,EAAAJ,EAAAxN,IAJA,MAIA2N,IAAA3N,EAJA,QAQA,IAAAyN,GACAR,EAAAO,EAAA1G,EAAA,GACA4G,GAAAG,EAAAZ,GAAA,GACAS,GAAAG,EAAAZ,GAAA,MACAS,GAAA,MACG,IAAAD,IACHR,GAAAO,EAAA1G,EAAA,OAAA0G,EAAA1G,EAAA,GACA4G,GAAAG,EAAAZ,GAAA,IACAS,GAAAG,EAAAZ,GAAA,MACAS,GAAAG,EAAAZ,GAAA,MACAS,GAAA,KAKA,OAFAjK,EAAAgB,KAAAiJ,GAEAjK,EAAAuB,KAAA,KAvGA,IALA,IAAA6I,KACAR,KACAF,EAAA,oBAAAW,sBAAAxI,MAEAgF,EAAA,mEACAtK,EAAA,EAAA8G,EAAAwD,EAAA1G,OAAkC5D,EAAA8G,IAAS9G,EAC3C6N,EAAA7N,GAAAsK,EAAAtK,GACAqN,EAAA/C,EAAAgD,WAAAtN,MAQA,SAAA+M,EAAAD,GACA,IAAAhG,EAAAgG,EAAAlJ,OACA,GAAAkD,EAAA,IACA,UAAAvE,MAAA,kDAQA,YAAAuK,EAAAhG,EAAA,WAAAgG,EAAAhG,EAAA,OA2CA,SAAA8G,EAAAJ,EAAA3H,EAAAC,GAGA,IAFA,IAAAmH,EALAc,EAMAL,KACA1N,EAAA6F,EAAqB7F,EAAA8F,EAAS9F,GAAA,EAC9BiN,GAAAO,EAAAxN,IAAA,cAAAwN,EAAAxN,EAAA,kBAAAwN,EAAAxN,EAAA,IACA0N,EAAAjJ,KARAoJ,GADAE,EASAd,IARA,OAAAY,EAAAE,GAAA,OAAAF,EAAAE,GAAA,MAAAF,EAAA,GAAAE,IAUA,OAAAL,EAAA1I,KAAA,IAhEAqI,EAAA,IAAAC,WAAA,OACAD,EAAA,IAAAC,WAAA,sCCnBA,SAAAvG,GAUA,IAAAiH,EAAAlO,EAAA,IACAmO,EAAAnO,EAAA,IACA6J,EAAA7J,EAAA,IAmDA,SAAAoO,IACA,OAAAC,EAAAC,oBACA,WACA,WAGA,SAAAC,EAAAC,EAAA1K,GACA,GAAAsK,IAAAtK,EACA,UAAA2K,WAAA,8BAcA,OAZAJ,EAAAC,qBAEAE,EAAA,IAAAR,WAAAlK,IACA4K,UAAAL,EAAA9M,WAGA,OAAAiN,IACAA,EAAA,IAAAH,EAAAvK,IAEA0K,EAAA1K,UAGA0K,EAaA,SAAAH,EAAA7E,EAAAmF,EAAA7K,GACA,KAAAuK,EAAAC,qBAAAhL,gBAAA+K,GACA,WAAAA,EAAA7E,EAAAmF,EAAA7K,GAIA,oBAAA0F,EAAA,CACA,oBAAAmF,EACA,UAAAlM,MACA,qEAGA,OAAAmM,EAAAtL,KAAAkG,GAEA,OAAA7D,EAAArC,KAAAkG,EAAAmF,EAAA7K,GAWA,SAAA6B,EAAA6I,EAAAtN,EAAAyN,EAAA7K,GACA,oBAAA5C,EACA,UAAA6D,UAAA,yCAGA,0BAAA8J,aAAA3N,aAAA2N,YA6HA,SAAAL,EAAAM,EAAAC,EAAAjL,GAGA,GAFAgL,EAAA/B,WAEAgC,EAAA,GAAAD,EAAA/B,WAAAgC,EACA,UAAAN,WAAA,6BAGA,GAAAK,EAAA/B,WAAAgC,GAAAjL,GAAA,GACA,UAAA2K,WAAA,6BAIAK,OADAnP,IAAAoP,QAAApP,IAAAmE,EACA,IAAAkK,WAAAc,QACGnP,IAAAmE,EACH,IAAAkK,WAAAc,EAAAC,GAEA,IAAAf,WAAAc,EAAAC,EAAAjL,GAGAuK,EAAAC,qBAEAE,EAAAM,GACAJ,UAAAL,EAAA9M,UAGAiN,EAAAQ,EAAAR,EAAAM,GAEA,OAAAN,EAvJAS,CAAAT,EAAAtN,EAAAyN,EAAA7K,GAGA,iBAAA5C,EAwFA,SAAAsN,EAAAtF,EAAAgG,GACA,iBAAAA,GAAA,KAAAA,IACAA,EAAA,QAGA,IAAAb,EAAAc,WAAAD,GACA,UAAAnK,UAAA,8CAGA,IAAAjB,EAAA,EAAAiJ,EAAA7D,EAAAgG,GAGAE,GAFAZ,EAAAD,EAAAC,EAAA1K,IAEA2I,MAAAvD,EAAAgG,GAEAE,IAAAtL,IAIA0K,IAAAlK,MAAA,EAAA8K,IAGA,OAAAZ,EA5GAa,CAAAb,EAAAtN,EAAAyN,GAsJA,SAAAH,EAAA5E,GACA,GAAAyE,EAAAiB,SAAA1F,GAAA,CACA,IAAA5C,EAAA,EAAAuI,EAAA3F,EAAA9F,QAGA,YAFA0K,EAAAD,EAAAC,EAAAxH,IAEAlD,OACA0K,GAGA5E,EAAA4F,KAAAhB,EAAA,IAAAxH,GACAwH,GAGA,GAAA5E,EAAA,CACA,uBAAAiF,aACAjF,EAAAiC,kBAAAgD,aAAA,WAAAjF,EACA,uBAAAA,EAAA9F,SA+8CAyF,EA/8CAK,EAAA9F,SAg9CAyF,EA/8CAgF,EAAAC,EAAA,GAEAQ,EAAAR,EAAA5E,GAGA,cAAAA,EAAAqB,MAAApB,EAAAD,EAAA6F,MACA,OAAAT,EAAAR,EAAA5E,EAAA6F,MAw8CA,IAAAlG,EAp8CA,UAAAxE,UAAA,sFA9KA2K,CAAAlB,EAAAtN,GA4BA,SAAAyO,EAAAC,GACA,oBAAAA,EACA,UAAA7K,UAAA,oCACG,GAAA6K,EAAA,EACH,UAAAnB,WAAA,wCA4BA,SAAAG,EAAAJ,EAAAoB,GAGA,GAFAD,EAAAC,GACApB,EAAAD,EAAAC,EAAAoB,EAAA,MAAAL,EAAAK,KACAvB,EAAAC,oBACA,QAAApO,EAAA,EAAmBA,EAAA0P,IAAU1P,EAC7BsO,EAAAtO,GAAA,EAGA,OAAAsO,EAwCA,SAAAQ,EAAAR,EAAAM,GACA,IAAAhL,EAAAgL,EAAAhL,OAAA,MAAAyL,EAAAT,EAAAhL,QACA0K,EAAAD,EAAAC,EAAA1K,GACA,QAAA5D,EAAA,EAAiBA,EAAA4D,EAAY5D,GAAA,EAC7BsO,EAAAtO,GAAA,IAAA4O,EAAA5O,GAEA,OAAAsO,EA+DA,SAAAe,EAAAzL,GAGA,GAAAA,GAAAsK,IACA,UAAAK,WAAA,0DACAL,IAAAzC,SAAA,cAEA,SAAA7H,EAsFA,SAAAiJ,EAAA7D,EAAAgG,GACA,GAAAb,EAAAiB,SAAApG,GACA,OAAAA,EAAApF,OAEA,uBAAA+K,aAAA,mBAAAA,YAAAgB,SACAhB,YAAAgB,OAAA3G,iBAAA2F,aACA,OAAA3F,EAAA6D,WAEA,iBAAA7D,IACAA,EAAA,GAAAA,GAGA,IAAAlC,EAAAkC,EAAApF,OACA,OAAAkD,EAAA,SAIA,IADA,IAAA8I,GAAA,IAEA,OAAAZ,GACA,YACA,aACA,aACA,OAAAlI,EACA,WACA,YACA,UAAArH,EACA,OAAAoQ,EAAA7G,GAAApF,OACA,WACA,YACA,cACA,eACA,SAAAkD,EACA,UACA,OAAAA,IAAA,EACA,aACA,OAAAgJ,EAAA9G,GAAApF,OACA,QACA,GAAAgM,EAAA,OAAAC,EAAA7G,GAAApF,OACAoL,GAAA,GAAAA,GAAAe,cACAH,GAAA,GAgFA,SAAAI,EAAAC,EAAAhP,EAAAb,GACA,IAAAJ,EAAAiQ,EAAAhP,GACAgP,EAAAhP,GAAAgP,EAAA7P,GACA6P,EAAA7P,GAAAJ,EAmIA,SAAAkQ,EAAAvE,EAAAtC,EAAAwF,EAAAG,EAAAvM,GAEA,OAAAkJ,EAAA/H,OAAA,SAmBA,GAhBA,iBAAAiL,GACAG,EAAAH,EACAA,EAAA,GACGA,EAAA,WACHA,EAAA,WACGA,GAAA,aACHA,GAAA,YAEAA,KACAnC,MAAAmC,KAEAA,EAAApM,EAAA,EAAAkJ,EAAA/H,OAAA,GAIAiL,EAAA,IAAAA,EAAAlD,EAAA/H,OAAAiL,GACAA,GAAAlD,EAAA/H,OAAA,CACA,GAAAnB,EAAA,SACAoM,EAAAlD,EAAA/H,OAAA,OACG,GAAAiL,EAAA,GACH,IAAApM,EACA,SADAoM,EAAA,EAUA,GALA,iBAAAxF,IACAA,EAAA8E,EAAA1I,KAAA4D,EAAA2F,IAIAb,EAAAiB,SAAA/F,GAEA,WAAAA,EAAAzF,QACA,EAEAuM,EAAAxE,EAAAtC,EAAAwF,EAAAG,EAAAvM,GACG,oBAAA4G,EAEH,OADAA,GAAA,IACA8E,EAAAC,qBACA,mBAAAN,WAAAzM,UAAAyI,QACArH,EACAqL,WAAAzM,UAAAyI,QAAA3J,KAAAwL,EAAAtC,EAAAwF,GAEAf,WAAAzM,UAAA+O,YAAAjQ,KAAAwL,EAAAtC,EAAAwF,GAGAsB,EAAAxE,GAAAtC,GAAAwF,EAAAG,EAAAvM,GAGA,UAAAoC,UAAA,wCAGA,SAAAsL,EAAAvK,EAAAyD,EAAAwF,EAAAG,EAAAvM,GACA,IA0BAzC,EA1BAqQ,EAAA,EACAC,EAAA1K,EAAAhC,OACA2M,EAAAlH,EAAAzF,OAEA,QAAAnE,IAAAuP,IAEA,UADAA,EAAAwB,OAAAxB,GAAAe,gBACA,UAAAf,GACA,YAAAA,GAAA,aAAAA,GAAA,CACA,GAAApJ,EAAAhC,OAAA,GAAAyF,EAAAzF,OAAA,EACA,SAEAyM,EAAA,EACAC,GAAA,EACAC,GAAA,EACA1B,GAAA,EAIA,SAAAnD,EAAA+E,EAAAzQ,GACA,WAAAqQ,EACAI,EAAAzQ,GAEAyQ,EAAAC,aAAA1Q,EAAAqQ,GAKA,GAAA5N,EAAA,CACA,IAAAkO,GAAA,EACA,IAAA3Q,EAAA6O,EAAwB7O,EAAAsQ,EAAetQ,IACvC,GAAA0L,EAAA9F,EAAA5F,KAAA0L,EAAArC,GAAA,IAAAsH,EAAA,EAAA3Q,EAAA2Q,IAEA,IADA,IAAAA,MAAA3Q,GACAA,EAAA2Q,EAAA,IAAAJ,EAAA,OAAAI,EAAAN,OAEA,IAAAM,IAAA3Q,KAAA2Q,GACAA,GAAA,OAKA,IADA9B,EAAA0B,EAAAD,IAAAzB,EAAAyB,EAAAC,GACAvQ,EAAA6O,EAAwB7O,GAAA,EAAQA,IAAA,CAEhC,IADA,IAAA4Q,GAAA,EACAzG,EAAA,EAAqBA,EAAAoG,EAAepG,IACpC,GAAAuB,EAAA9F,EAAA5F,EAAAmK,KAAAuB,EAAArC,EAAAc,GAAA,CACAyG,GAAA,EACA,MAGA,GAAAA,EAAA,OAAA5Q,EAIA,SAeA,SAAA6Q,EAAAJ,EAAAzH,EAAA4C,EAAAhI,GACAgI,EAAApC,OAAAoC,IAAA,EACA,IAAAkF,EAAAL,EAAA7M,OAAAgI,EACAhI,GAGAA,EAAA4F,OAAA5F,IACAkN,IACAlN,EAAAkN,GAJAlN,EAAAkN,EASA,IAAAC,EAAA/H,EAAApF,OACA,GAAAmN,EAAA,eAAAlM,UAAA,sBAEAjB,EAAAmN,EAAA,IACAnN,EAAAmN,EAAA,GAEA,QAAA/Q,EAAA,EAAiBA,EAAA4D,IAAY5D,EAAA,CAC7B,IAAAgR,EAAAC,SAAAjI,EAAA5D,OAAA,EAAApF,EAAA,OACA,GAAA0M,MAAAsE,GAAA,OAAAhR,EACAyQ,EAAA7E,EAAA5L,GAAAgR,EAEA,OAAAhR,EAGA,SAAAkR,EAAAT,EAAAzH,EAAA4C,EAAAhI,GACA,OAAAuN,EAAAtB,EAAA7G,EAAAyH,EAAA7M,OAAAgI,GAAA6E,EAAA7E,EAAAhI,GAGA,SAAAwN,EAAAX,EAAAzH,EAAA4C,EAAAhI,GACA,OAAAuN,EAq6BA,SAAAtK,GAEA,IADA,IAAAwK,KACArR,EAAA,EAAiBA,EAAA6G,EAAAjD,SAAgB5D,EAEjCqR,EAAA5M,KAAA,IAAAoC,EAAAyG,WAAAtN,IAEA,OAAAqR,EA36BAC,CAAAtI,GAAAyH,EAAA7E,EAAAhI,GAGA,SAAA2N,EAAAd,EAAAzH,EAAA4C,EAAAhI,GACA,OAAAwN,EAAAX,EAAAzH,EAAA4C,EAAAhI,GAGA,SAAA4N,EAAAf,EAAAzH,EAAA4C,EAAAhI,GACA,OAAAuN,EAAArB,EAAA9G,GAAAyH,EAAA7E,EAAAhI,GAGA,SAAA6N,EAAAhB,EAAAzH,EAAA4C,EAAAhI,GACA,OAAAuN,EAk6BA,SAAAtK,EAAA6K,GAGA,IAFA,IAAArR,EAAAsR,EAAAC,EACAP,KACArR,EAAA,EAAiBA,EAAA6G,EAAAjD,WACjB8N,GAAA,QADiC1R,EAGjCK,EAAAwG,EAAAyG,WAAAtN,GACA2R,EAAAtR,GAAA,EACAuR,EAAAvR,EAAA,IACAgR,EAAA5M,KAAAmN,GACAP,EAAA5M,KAAAkN,GAGA,OAAAN,EA/6BAQ,CAAA7I,EAAAyH,EAAA7M,OAAAgI,GAAA6E,EAAA7E,EAAAhI,GAkFA,SAAAkO,EAAArB,EAAA5K,EAAAC,GACA,WAAAD,GAAAC,IAAA2K,EAAA7M,OACAoK,EAAAT,cAAAkD,GAEAzC,EAAAT,cAAAkD,EAAArM,MAAAyB,EAAAC,IAIA,SAAAiM,EAAAtB,EAAA5K,EAAAC,GACAA,EAAAG,KAAAC,IAAAuK,EAAA7M,OAAAkC,GAIA,IAHA,IAAAtB,KAEAxE,EAAA6F,EACA7F,EAAA8F,GAAA,CACA,IAQAkM,EAAAC,EAAAC,EAAAC,EARAC,EAAA3B,EAAAzQ,GACAqS,EAAA,KACAC,EAAAF,EAAA,MACAA,EAAA,MACAA,EAAA,MACA,EAEA,GAAApS,EAAAsS,GAAAxM,EAGA,OAAAwM,GACA,OACAF,EAAA,MACAC,EAAAD,GAEA,MACA,OAEA,WADAJ,EAAAvB,EAAAzQ,EAAA,OAEAmS,GAAA,GAAAC,IAAA,KAAAJ,GACA,MACAK,EAAAF,GAGA,MACA,OACAH,EAAAvB,EAAAzQ,EAAA,GACAiS,EAAAxB,EAAAzQ,EAAA,GACA,UAAAgS,IAAA,UAAAC,KACAE,GAAA,GAAAC,IAAA,OAAAJ,IAAA,KAAAC,GACA,OAAAE,EAAA,OAAAA,EAAA,SACAE,EAAAF,GAGA,MACA,OACAH,EAAAvB,EAAAzQ,EAAA,GACAiS,EAAAxB,EAAAzQ,EAAA,GACAkS,EAAAzB,EAAAzQ,EAAA,GACA,UAAAgS,IAAA,UAAAC,IAAA,UAAAC,KACAC,GAAA,GAAAC,IAAA,OAAAJ,IAAA,OAAAC,IAAA,KAAAC,GACA,OAAAC,EAAA,UACAE,EAAAF,GAMA,OAAAE,GAGAA,EAAA,MACAC,EAAA,GACKD,EAAA,QAELA,GAAA,MACA7N,EAAAC,KAAA4N,IAAA,eACAA,EAAA,WAAAA,GAGA7N,EAAAC,KAAA4N,GACArS,GAAAsS,EAGA,OAQA,SAAAC,GACA,IAAAzL,EAAAyL,EAAA3O,OACA,GAAAkD,GAAA0L,EACA,OAAAhC,OAAAiC,aAAApI,MAAAmG,OAAA+B,GAIA,IAAA/N,EAAA,GACAxE,EAAA,EACA,KAAAA,EAAA8G,GACAtC,GAAAgM,OAAAiC,aAAApI,MACAmG,OACA+B,EAAAnO,MAAApE,KAAAwS,IAGA,OAAAhO,EAvBAkO,CAAAlO,GA98BArF,EAAAgP,SACAhP,EAAAwT,WAoTA,SAAA/O,IACAA,OACAA,EAAA,GAEA,OAAAuK,EAAAyE,OAAAhP,IAvTAzE,EAAA0T,kBAAA,GA0BA1E,EAAAC,yBAAA3O,IAAAsH,EAAAqH,oBACArH,EAAAqH,oBAQA,WACA,IACA,IAAAxI,EAAA,IAAAkI,WAAA,GAEA,OADAlI,EAAA4I,WAAqBA,UAAAV,WAAAzM,UAAAyR,IAAA,WAAmD,YACxE,KAAAlN,EAAAkN,OACA,mBAAAlN,EAAAmN,UACA,IAAAnN,EAAAmN,SAAA,KAAAlG,WACG,MAAAvN,GACH,UAfA0T,GAKA7T,EAAA+O,eAkEAC,EAAA8E,SAAA,KAGA9E,EAAA+E,SAAA,SAAAtN,GAEA,OADAA,EAAA4I,UAAAL,EAAA9M,UACAuE,GA2BAuI,EAAA1I,KAAA,SAAAzE,EAAAyN,EAAA7K,GACA,OAAA6B,EAAA,KAAAzE,EAAAyN,EAAA7K,IAGAuK,EAAAC,sBACAD,EAAA9M,UAAAmN,UAAAV,WAAAzM,UACA8M,EAAAK,UAAAV,WACA,oBAAAqF,eAAAC,SACAjF,EAAAgF,OAAAC,WAAAjF,GAEAzN,OAAAC,eAAAwN,EAAAgF,OAAAC,SACApS,MAAA,KACAJ,cAAA,KAiCAuN,EAAAyE,MAAA,SAAAlD,EAAA2D,EAAArE,GACA,OArBA,SAAAV,EAAAoB,EAAA2D,EAAArE,GAEA,OADAS,EAAAC,GACAA,GAAA,EACArB,EAAAC,EAAAoB,QAEAjQ,IAAA4T,EAIA,iBAAArE,EACAX,EAAAC,EAAAoB,GAAA2D,OAAArE,GACAX,EAAAC,EAAAoB,GAAA2D,QAEAhF,EAAAC,EAAAoB,GAQAkD,CAAA,KAAAlD,EAAA2D,EAAArE,IAiBAb,EAAAO,YAAA,SAAAgB,GACA,OAAAhB,EAAA,KAAAgB,IAKAvB,EAAAmF,gBAAA,SAAA5D,GACA,OAAAhB,EAAA,KAAAgB,IAiHAvB,EAAAiB,SAAA,SAAAa,GACA,cAAAA,MAAAsD,YAGApF,EAAAqF,QAAA,SAAAC,EAAAxD,GACA,IAAA9B,EAAAiB,SAAAqE,KAAAtF,EAAAiB,SAAAa,GACA,UAAApL,UAAA,6BAGA,GAAA4O,IAAAxD,EAAA,SAKA,IAHA,IAAAjI,EAAAyL,EAAA7P,OACAmF,EAAAkH,EAAArM,OAEA5D,EAAA,EAAA8G,EAAAb,KAAAC,IAAA8B,EAAAe,GAAuC/I,EAAA8G,IAAS9G,EAChD,GAAAyT,EAAAzT,KAAAiQ,EAAAjQ,GAAA,CACAgI,EAAAyL,EAAAzT,GACA+I,EAAAkH,EAAAjQ,GACA,MAIA,OAAAgI,EAAAe,GAAA,EACAA,EAAAf,EAAA,EACA,GAGAmG,EAAAc,WAAA,SAAAD,GACA,OAAAwB,OAAAxB,GAAAe,eACA,UACA,WACA,YACA,YACA,aACA,aACA,aACA,WACA,YACA,cACA,eACA,SACA,QACA,WAIA5B,EAAA9H,OAAA,SAAAqN,EAAA9P,GACA,IAAA+F,EAAA+J,GACA,UAAA7O,UAAA,+CAGA,OAAA6O,EAAA9P,OACA,OAAAuK,EAAAyE,MAAA,GAGA,IAAA5S,EACA,QAAAP,IAAAmE,EAEA,IADAA,EAAA,EACA5D,EAAA,EAAeA,EAAA0T,EAAA9P,SAAiB5D,EAChC4D,GAAA8P,EAAA1T,GAAA4D,OAIA,IAAA+H,EAAAwC,EAAAO,YAAA9K,GACA+P,EAAA,EACA,IAAA3T,EAAA,EAAaA,EAAA0T,EAAA9P,SAAiB5D,EAAA,CAC9B,IAAAyQ,EAAAiD,EAAA1T,GACA,IAAAmO,EAAAiB,SAAAqB,GACA,UAAA5L,UAAA,+CAEA4L,EAAAnB,KAAA3D,EAAAgI,GACAA,GAAAlD,EAAA7M,OAEA,OAAA+H,GA8CAwC,EAAAtB,aA0EAsB,EAAA9M,UAAAkS,WAAA,EAQApF,EAAA9M,UAAAuS,OAAA,WACA,IAAA9M,EAAA1D,KAAAQ,OACA,GAAAkD,EAAA,KACA,UAAAyH,WAAA,6CAEA,QAAAvO,EAAA,EAAiBA,EAAA8G,EAAS9G,GAAA,EAC1BgQ,EAAA5M,KAAApD,IAAA,GAEA,OAAAoD,MAGA+K,EAAA9M,UAAAwS,OAAA,WACA,IAAA/M,EAAA1D,KAAAQ,OACA,GAAAkD,EAAA,KACA,UAAAyH,WAAA,6CAEA,QAAAvO,EAAA,EAAiBA,EAAA8G,EAAS9G,GAAA,EAC1BgQ,EAAA5M,KAAApD,IAAA,GACAgQ,EAAA5M,KAAApD,EAAA,EAAAA,EAAA,GAEA,OAAAoD,MAGA+K,EAAA9M,UAAAyS,OAAA,WACA,IAAAhN,EAAA1D,KAAAQ,OACA,GAAAkD,EAAA,KACA,UAAAyH,WAAA,6CAEA,QAAAvO,EAAA,EAAiBA,EAAA8G,EAAS9G,GAAA,EAC1BgQ,EAAA5M,KAAApD,IAAA,GACAgQ,EAAA5M,KAAApD,EAAA,EAAAA,EAAA,GACAgQ,EAAA5M,KAAApD,EAAA,EAAAA,EAAA,GACAgQ,EAAA5M,KAAApD,EAAA,EAAAA,EAAA,GAEA,OAAAoD,MAGA+K,EAAA9M,UAAAoK,SAAA,WACA,IAAA7H,EAAA,EAAAR,KAAAQ,OACA,WAAAA,EAAA,GACA,IAAAgB,UAAAhB,OAAAmO,EAAA3O,KAAA,EAAAQ,GAxHA,SAAAoL,EAAAnJ,EAAAC,GACA,IAAA8J,GAAA,EAcA,SALAnQ,IAAAoG,KAAA,KACAA,EAAA,GAIAA,EAAAzC,KAAAQ,OACA,SAOA,SAJAnE,IAAAqG,KAAA1C,KAAAQ,UACAkC,EAAA1C,KAAAQ,QAGAkC,GAAA,EACA,SAOA,IAHAA,KAAA,KACAD,KAAA,GAGA,SAKA,IAFAmJ,MAAA,UAGA,OAAAA,GACA,UACA,OAAA+E,EAAA3Q,KAAAyC,EAAAC,GAEA,WACA,YACA,OAAAiM,EAAA3O,KAAAyC,EAAAC,GAEA,YACA,OAAAkO,EAAA5Q,KAAAyC,EAAAC,GAEA,aACA,aACA,OAAAmO,EAAA7Q,KAAAyC,EAAAC,GAEA,aACA,OAAAgM,EAAA1O,KAAAyC,EAAAC,GAEA,WACA,YACA,cACA,eACA,OAAAoO,EAAA9Q,KAAAyC,EAAAC,GAEA,QACA,GAAA8J,EAAA,UAAA/K,UAAA,qBAAAmK,GACAA,KAAA,IAAAe,cACAH,GAAA,IAwDAvF,MAAAjH,KAAAwB,YAGAuJ,EAAA9M,UAAA8S,OAAA,SAAAlE,GACA,IAAA9B,EAAAiB,SAAAa,GAAA,UAAApL,UAAA,6BACA,OAAAzB,OAAA6M,GACA,IAAA9B,EAAAqF,QAAApQ,KAAA6M,IAGA9B,EAAA9M,UAAA+S,QAAA,WACA,IAAAvN,EAAA,GACAwN,EAAAlV,EAAA0T,kBAKA,OAJAzP,KAAAQ,OAAA,IACAiD,EAAAzD,KAAAqI,SAAA,QAAA4I,GAAAtK,MAAA,SAAkD/E,KAAA,KAClD5B,KAAAQ,OAAAyQ,IAAAxN,GAAA,UAEA,WAAAA,EAAA,KAGAsH,EAAA9M,UAAAmS,QAAA,SAAAc,EAAAzO,EAAAC,EAAAyO,EAAAC,GACA,IAAArG,EAAAiB,SAAAkF,GACA,UAAAzP,UAAA,6BAgBA,QAbApF,IAAAoG,IACAA,EAAA,QAEApG,IAAAqG,IACAA,EAAAwO,IAAA1Q,OAAA,QAEAnE,IAAA8U,IACAA,EAAA,QAEA9U,IAAA+U,IACAA,EAAApR,KAAAQ,QAGAiC,EAAA,GAAAC,EAAAwO,EAAA1Q,QAAA2Q,EAAA,GAAAC,EAAApR,KAAAQ,OACA,UAAA2K,WAAA,sBAGA,GAAAgG,GAAAC,GAAA3O,GAAAC,EACA,SAEA,GAAAyO,GAAAC,EACA,SAEA,GAAA3O,GAAAC,EACA,SAQA,GALAD,KAAA,EACAC,KAAA,EACAyO,KAAA,EACAC,KAAA,EAEApR,OAAAkR,EAAA,SASA,IAPA,IAAAtM,EAAAwM,EAAAD,EACAxL,EAAAjD,EAAAD,EACAiB,EAAAb,KAAAC,IAAA8B,EAAAe,GAEA0L,EAAArR,KAAAgB,MAAAmQ,EAAAC,GACAE,EAAAJ,EAAAlQ,MAAAyB,EAAAC,GAEA9F,EAAA,EAAiBA,EAAA8G,IAAS9G,EAC1B,GAAAyU,EAAAzU,KAAA0U,EAAA1U,GAAA,CACAgI,EAAAyM,EAAAzU,GACA+I,EAAA2L,EAAA1U,GACA,MAIA,OAAAgI,EAAAe,GAAA,EACAA,EAAAf,EAAA,EACA,GA6HAmG,EAAA9M,UAAAsT,SAAA,SAAAtL,EAAAwF,EAAAG,GACA,WAAA5L,KAAA0G,QAAAT,EAAAwF,EAAAG,IAGAb,EAAA9M,UAAAyI,QAAA,SAAAT,EAAAwF,EAAAG,GACA,OAAAkB,EAAA9M,KAAAiG,EAAAwF,EAAAG,GAAA,IAGAb,EAAA9M,UAAA+O,YAAA,SAAA/G,EAAAwF,EAAAG,GACA,OAAAkB,EAAA9M,KAAAiG,EAAAwF,EAAAG,GAAA,IAkDAb,EAAA9M,UAAAkL,MAAA,SAAAvD,EAAA4C,EAAAhI,EAAAoL,GAEA,QAAAvP,IAAAmM,EACAoD,EAAA,OACApL,EAAAR,KAAAQ,OACAgI,EAAA,OAEG,QAAAnM,IAAAmE,GAAA,iBAAAgI,EACHoD,EAAApD,EACAhI,EAAAR,KAAAQ,OACAgI,EAAA,MAEG,KAAAgJ,SAAAhJ,GAWH,UAAArJ,MACA,2EAXAqJ,GAAA,EACAgJ,SAAAhR,IACAA,GAAA,OACAnE,IAAAuP,MAAA,UAEAA,EAAApL,EACAA,OAAAnE,GASA,IAAAqR,EAAA1N,KAAAQ,OAAAgI,EAGA,SAFAnM,IAAAmE,KAAAkN,KAAAlN,EAAAkN,GAEA9H,EAAApF,OAAA,IAAAA,EAAA,GAAAgI,EAAA,IAAAA,EAAAxI,KAAAQ,OACA,UAAA2K,WAAA,0CAGAS,MAAA,QAGA,IADA,IAAAY,GAAA,IAEA,OAAAZ,GACA,UACA,OAAA6B,EAAAzN,KAAA4F,EAAA4C,EAAAhI,GAEA,WACA,YACA,OAAAsN,EAAA9N,KAAA4F,EAAA4C,EAAAhI,GAEA,YACA,OAAAwN,EAAAhO,KAAA4F,EAAA4C,EAAAhI,GAEA,aACA,aACA,OAAA2N,EAAAnO,KAAA4F,EAAA4C,EAAAhI,GAEA,aAEA,OAAA4N,EAAApO,KAAA4F,EAAA4C,EAAAhI,GAEA,WACA,YACA,cACA,eACA,OAAA6N,EAAArO,KAAA4F,EAAA4C,EAAAhI,GAEA,QACA,GAAAgM,EAAA,UAAA/K,UAAA,qBAAAmK,GACAA,GAAA,GAAAA,GAAAe,cACAH,GAAA,IAKAzB,EAAA9M,UAAAwT,OAAA,WACA,OACA9J,KAAA,SACAwE,KAAAjK,MAAAjE,UAAA+C,MAAAjE,KAAAiD,KAAA0R,MAAA1R,KAAA,KAwFA,IAAAoP,EAAA,KAoBA,SAAAwB,EAAAvD,EAAA5K,EAAAC,GACA,IAAAiP,EAAA,GACAjP,EAAAG,KAAAC,IAAAuK,EAAA7M,OAAAkC,GAEA,QAAA9F,EAAA6F,EAAqB7F,EAAA8F,IAAS9F,EAC9B+U,GAAAvE,OAAAiC,aAAA,IAAAhC,EAAAzQ,IAEA,OAAA+U,EAGA,SAAAd,EAAAxD,EAAA5K,EAAAC,GACA,IAAAiP,EAAA,GACAjP,EAAAG,KAAAC,IAAAuK,EAAA7M,OAAAkC,GAEA,QAAA9F,EAAA6F,EAAqB7F,EAAA8F,IAAS9F,EAC9B+U,GAAAvE,OAAAiC,aAAAhC,EAAAzQ,IAEA,OAAA+U,EAGA,SAAAhB,EAAAtD,EAAA5K,EAAAC,GACA,IAAAgB,EAAA2J,EAAA7M,SAEAiC,KAAA,KAAAA,EAAA,KACAC,KAAA,GAAAA,EAAAgB,KAAAhB,EAAAgB,GAGA,IADA,IAAAkO,EAAA,GACAhV,EAAA6F,EAAqB7F,EAAA8F,IAAS9F,EAC9BgV,GAAAC,EAAAxE,EAAAzQ,IAEA,OAAAgV,EAGA,SAAAd,EAAAzD,EAAA5K,EAAAC,GAGA,IAFA,IAAAoP,EAAAzE,EAAArM,MAAAyB,EAAAC,GACAtB,EAAA,GACAxE,EAAA,EAAiBA,EAAAkV,EAAAtR,OAAkB5D,GAAA,EACnCwE,GAAAgM,OAAAiC,aAAAyC,EAAAlV,GAAA,IAAAkV,EAAAlV,EAAA,IAEA,OAAAwE,EA0CA,SAAA2Q,EAAAvJ,EAAAjF,EAAA/C,GACA,GAAAgI,EAAA,MAAAA,EAAA,YAAA2C,WAAA,sBACA,GAAA3C,EAAAjF,EAAA/C,EAAA,UAAA2K,WAAA,yCA+JA,SAAA6G,EAAA3E,EAAAzP,EAAA4K,EAAAjF,EAAA0N,EAAAnO,GACA,IAAAiI,EAAAiB,SAAAqB,GAAA,UAAA5L,UAAA,+CACA,GAAA7D,EAAAqT,GAAArT,EAAAkF,EAAA,UAAAqI,WAAA,qCACA,GAAA3C,EAAAjF,EAAA8J,EAAA7M,OAAA,UAAA2K,WAAA,sBAkDA,SAAA8G,EAAA5E,EAAAzP,EAAA4K,EAAA0J,GACAtU,EAAA,IAAAA,EAAA,MAAAA,EAAA,GACA,QAAAhB,EAAA,EAAAmK,EAAAlE,KAAAC,IAAAuK,EAAA7M,OAAAgI,EAAA,GAAuD5L,EAAAmK,IAAOnK,EAC9DyQ,EAAA7E,EAAA5L,IAAAgB,EAAA,QAAAsU,EAAAtV,EAAA,EAAAA,MACA,GAAAsV,EAAAtV,EAAA,EAAAA,GA8BA,SAAAuV,EAAA9E,EAAAzP,EAAA4K,EAAA0J,GACAtU,EAAA,IAAAA,EAAA,WAAAA,EAAA,GACA,QAAAhB,EAAA,EAAAmK,EAAAlE,KAAAC,IAAAuK,EAAA7M,OAAAgI,EAAA,GAAuD5L,EAAAmK,IAAOnK,EAC9DyQ,EAAA7E,EAAA5L,GAAAgB,IAAA,GAAAsU,EAAAtV,EAAA,EAAAA,GAAA,IAmJA,SAAAwV,EAAA/E,EAAAzP,EAAA4K,EAAAjF,EAAA0N,EAAAnO,GACA,GAAA0F,EAAAjF,EAAA8J,EAAA7M,OAAA,UAAA2K,WAAA,sBACA,GAAA3C,EAAA,YAAA2C,WAAA,sBAGA,SAAAkH,EAAAhF,EAAAzP,EAAA4K,EAAA0J,EAAAI,GAKA,OAJAA,GACAF,EAAA/E,EAAAzP,EAAA4K,EAAA,GAEAqC,EAAA1B,MAAAkE,EAAAzP,EAAA4K,EAAA0J,EAAA,MACA1J,EAAA,EAWA,SAAA+J,EAAAlF,EAAAzP,EAAA4K,EAAA0J,EAAAI,GAKA,OAJAA,GACAF,EAAA/E,EAAAzP,EAAA4K,EAAA,GAEAqC,EAAA1B,MAAAkE,EAAAzP,EAAA4K,EAAA0J,EAAA,MACA1J,EAAA,EA/cAuC,EAAA9M,UAAA+C,MAAA,SAAAyB,EAAAC,GACA,IAoBA8P,EApBA9O,EAAA1D,KAAAQ,OAqBA,GApBAiC,MACAC,OAAArG,IAAAqG,EAAAgB,IAAAhB,EAEAD,EAAA,GACAA,GAAAiB,GACA,IAAAjB,EAAA,GACGA,EAAAiB,IACHjB,EAAAiB,GAGAhB,EAAA,GACAA,GAAAgB,GACA,IAAAhB,EAAA,GACGA,EAAAgB,IACHhB,EAAAgB,GAGAhB,EAAAD,IAAAC,EAAAD,GAGAsI,EAAAC,qBACAwH,EAAAxS,KAAA2P,SAAAlN,EAAAC,IACA0I,UAAAL,EAAA9M,cACG,CACH,IAAAwU,EAAA/P,EAAAD,EACA+P,EAAA,IAAAzH,EAAA0H,OAAApW,GACA,QAAAO,EAAA,EAAmBA,EAAA6V,IAAc7V,EACjC4V,EAAA5V,GAAAoD,KAAApD,EAAA6F,GAIA,OAAA+P,GAWAzH,EAAA9M,UAAAyU,WAAA,SAAAlK,EAAAiB,EAAA6I,GACA9J,GAAA,EACAiB,GAAA,EACA6I,GAAAP,EAAAvJ,EAAAiB,EAAAzJ,KAAAQ,QAKA,IAHA,IAAAyF,EAAAjG,KAAAwI,GACAmK,EAAA,EACA/V,EAAA,IACAA,EAAA6M,IAAAkJ,GAAA,MACA1M,GAAAjG,KAAAwI,EAAA5L,GAAA+V,EAGA,OAAA1M,GAGA8E,EAAA9M,UAAA2U,WAAA,SAAApK,EAAAiB,EAAA6I,GACA9J,GAAA,EACAiB,GAAA,EACA6I,GACAP,EAAAvJ,EAAAiB,EAAAzJ,KAAAQ,QAKA,IAFA,IAAAyF,EAAAjG,KAAAwI,IAAAiB,GACAkJ,EAAA,EACAlJ,EAAA,IAAAkJ,GAAA,MACA1M,GAAAjG,KAAAwI,IAAAiB,GAAAkJ,EAGA,OAAA1M,GAGA8E,EAAA9M,UAAA4U,UAAA,SAAArK,EAAA8J,GAEA,OADAA,GAAAP,EAAAvJ,EAAA,EAAAxI,KAAAQ,QACAR,KAAAwI,IAGAuC,EAAA9M,UAAA6U,aAAA,SAAAtK,EAAA8J,GAEA,OADAA,GAAAP,EAAAvJ,EAAA,EAAAxI,KAAAQ,QACAR,KAAAwI,GAAAxI,KAAAwI,EAAA,OAGAuC,EAAA9M,UAAAqP,aAAA,SAAA9E,EAAA8J,GAEA,OADAA,GAAAP,EAAAvJ,EAAA,EAAAxI,KAAAQ,QACAR,KAAAwI,IAAA,EAAAxI,KAAAwI,EAAA,IAGAuC,EAAA9M,UAAA8U,aAAA,SAAAvK,EAAA8J,GAGA,OAFAA,GAAAP,EAAAvJ,EAAA,EAAAxI,KAAAQ,SAEAR,KAAAwI,GACAxI,KAAAwI,EAAA,MACAxI,KAAAwI,EAAA,QACA,SAAAxI,KAAAwI,EAAA,IAGAuC,EAAA9M,UAAA+U,aAAA,SAAAxK,EAAA8J,GAGA,OAFAA,GAAAP,EAAAvJ,EAAA,EAAAxI,KAAAQ,QAEA,SAAAR,KAAAwI,IACAxI,KAAAwI,EAAA,OACAxI,KAAAwI,EAAA,MACAxI,KAAAwI,EAAA,KAGAuC,EAAA9M,UAAAgV,UAAA,SAAAzK,EAAAiB,EAAA6I,GACA9J,GAAA,EACAiB,GAAA,EACA6I,GAAAP,EAAAvJ,EAAAiB,EAAAzJ,KAAAQ,QAKA,IAHA,IAAAyF,EAAAjG,KAAAwI,GACAmK,EAAA,EACA/V,EAAA,IACAA,EAAA6M,IAAAkJ,GAAA,MACA1M,GAAAjG,KAAAwI,EAAA5L,GAAA+V,EAMA,OAFA1M,IAFA0M,GAAA,OAEA1M,GAAApD,KAAAqG,IAAA,IAAAO,IAEAxD,GAGA8E,EAAA9M,UAAAiV,UAAA,SAAA1K,EAAAiB,EAAA6I,GACA9J,GAAA,EACAiB,GAAA,EACA6I,GAAAP,EAAAvJ,EAAAiB,EAAAzJ,KAAAQ,QAKA,IAHA,IAAA5D,EAAA6M,EACAkJ,EAAA,EACA1M,EAAAjG,KAAAwI,IAAA5L,GACAA,EAAA,IAAA+V,GAAA,MACA1M,GAAAjG,KAAAwI,IAAA5L,GAAA+V,EAMA,OAFA1M,IAFA0M,GAAA,OAEA1M,GAAApD,KAAAqG,IAAA,IAAAO,IAEAxD,GAGA8E,EAAA9M,UAAAkV,SAAA,SAAA3K,EAAA8J,GAEA,OADAA,GAAAP,EAAAvJ,EAAA,EAAAxI,KAAAQ,QACA,IAAAR,KAAAwI,IACA,OAAAxI,KAAAwI,GAAA,GADAxI,KAAAwI,IAIAuC,EAAA9M,UAAAmV,YAAA,SAAA5K,EAAA8J,GACAA,GAAAP,EAAAvJ,EAAA,EAAAxI,KAAAQ,QACA,IAAAyF,EAAAjG,KAAAwI,GAAAxI,KAAAwI,EAAA,MACA,aAAAvC,EAAA,WAAAA,KAGA8E,EAAA9M,UAAAoV,YAAA,SAAA7K,EAAA8J,GACAA,GAAAP,EAAAvJ,EAAA,EAAAxI,KAAAQ,QACA,IAAAyF,EAAAjG,KAAAwI,EAAA,GAAAxI,KAAAwI,IAAA,EACA,aAAAvC,EAAA,WAAAA,KAGA8E,EAAA9M,UAAAqV,YAAA,SAAA9K,EAAA8J,GAGA,OAFAA,GAAAP,EAAAvJ,EAAA,EAAAxI,KAAAQ,QAEAR,KAAAwI,GACAxI,KAAAwI,EAAA,MACAxI,KAAAwI,EAAA,OACAxI,KAAAwI,EAAA,QAGAuC,EAAA9M,UAAAsV,YAAA,SAAA/K,EAAA8J,GAGA,OAFAA,GAAAP,EAAAvJ,EAAA,EAAAxI,KAAAQ,QAEAR,KAAAwI,IAAA,GACAxI,KAAAwI,EAAA,OACAxI,KAAAwI,EAAA,MACAxI,KAAAwI,EAAA,IAGAuC,EAAA9M,UAAAuV,YAAA,SAAAhL,EAAA8J,GAEA,OADAA,GAAAP,EAAAvJ,EAAA,EAAAxI,KAAAQ,QACAqK,EAAAvC,KAAAtI,KAAAwI,GAAA,SAGAuC,EAAA9M,UAAAwV,YAAA,SAAAjL,EAAA8J,GAEA,OADAA,GAAAP,EAAAvJ,EAAA,EAAAxI,KAAAQ,QACAqK,EAAAvC,KAAAtI,KAAAwI,GAAA,SAGAuC,EAAA9M,UAAAyV,aAAA,SAAAlL,EAAA8J,GAEA,OADAA,GAAAP,EAAAvJ,EAAA,EAAAxI,KAAAQ,QACAqK,EAAAvC,KAAAtI,KAAAwI,GAAA,SAGAuC,EAAA9M,UAAA0V,aAAA,SAAAnL,EAAA8J,GAEA,OADAA,GAAAP,EAAAvJ,EAAA,EAAAxI,KAAAQ,QACAqK,EAAAvC,KAAAtI,KAAAwI,GAAA,SASAuC,EAAA9M,UAAA2V,YAAA,SAAAhW,EAAA4K,EAAAiB,EAAA6I,IACA1U,KACA4K,GAAA,EACAiB,GAAA,EACA6I,IAEAN,EAAAhS,KAAApC,EAAA4K,EAAAiB,EADA5G,KAAAqG,IAAA,IAAAO,GAAA,EACA,GAGA,IAAAkJ,EAAA,EACA/V,EAAA,EAEA,IADAoD,KAAAwI,GAAA,IAAA5K,IACAhB,EAAA6M,IAAAkJ,GAAA,MACA3S,KAAAwI,EAAA5L,GAAAgB,EAAA+U,EAAA,IAGA,OAAAnK,EAAAiB,GAGAsB,EAAA9M,UAAA4V,YAAA,SAAAjW,EAAA4K,EAAAiB,EAAA6I,IACA1U,KACA4K,GAAA,EACAiB,GAAA,EACA6I,IAEAN,EAAAhS,KAAApC,EAAA4K,EAAAiB,EADA5G,KAAAqG,IAAA,IAAAO,GAAA,EACA,GAGA,IAAA7M,EAAA6M,EAAA,EACAkJ,EAAA,EAEA,IADA3S,KAAAwI,EAAA5L,GAAA,IAAAgB,IACAhB,GAAA,IAAA+V,GAAA,MACA3S,KAAAwI,EAAA5L,GAAAgB,EAAA+U,EAAA,IAGA,OAAAnK,EAAAiB,GAGAsB,EAAA9M,UAAA6V,WAAA,SAAAlW,EAAA4K,EAAA8J,GAMA,OALA1U,KACA4K,GAAA,EACA8J,GAAAN,EAAAhS,KAAApC,EAAA4K,EAAA,SACAuC,EAAAC,sBAAApN,EAAAiF,KAAAqB,MAAAtG,IACAoC,KAAAwI,GAAA,IAAA5K,EACA4K,EAAA,GAWAuC,EAAA9M,UAAA8V,cAAA,SAAAnW,EAAA4K,EAAA8J,GAUA,OATA1U,KACA4K,GAAA,EACA8J,GAAAN,EAAAhS,KAAApC,EAAA4K,EAAA,WACAuC,EAAAC,qBACAhL,KAAAwI,GAAA,IAAA5K,EACAoC,KAAAwI,EAAA,GAAA5K,IAAA,GAEAqU,EAAAjS,KAAApC,EAAA4K,GAAA,GAEAA,EAAA,GAGAuC,EAAA9M,UAAA+V,cAAA,SAAApW,EAAA4K,EAAA8J,GAUA,OATA1U,KACA4K,GAAA,EACA8J,GAAAN,EAAAhS,KAAApC,EAAA4K,EAAA,WACAuC,EAAAC,qBACAhL,KAAAwI,GAAA5K,IAAA,EACAoC,KAAAwI,EAAA,OAAA5K,GAEAqU,EAAAjS,KAAApC,EAAA4K,GAAA,GAEAA,EAAA,GAUAuC,EAAA9M,UAAAgW,cAAA,SAAArW,EAAA4K,EAAA8J,GAYA,OAXA1U,KACA4K,GAAA,EACA8J,GAAAN,EAAAhS,KAAApC,EAAA4K,EAAA,gBACAuC,EAAAC,qBACAhL,KAAAwI,EAAA,GAAA5K,IAAA,GACAoC,KAAAwI,EAAA,GAAA5K,IAAA,GACAoC,KAAAwI,EAAA,GAAA5K,IAAA,EACAoC,KAAAwI,GAAA,IAAA5K,GAEAuU,EAAAnS,KAAApC,EAAA4K,GAAA,GAEAA,EAAA,GAGAuC,EAAA9M,UAAAiW,cAAA,SAAAtW,EAAA4K,EAAA8J,GAYA,OAXA1U,KACA4K,GAAA,EACA8J,GAAAN,EAAAhS,KAAApC,EAAA4K,EAAA,gBACAuC,EAAAC,qBACAhL,KAAAwI,GAAA5K,IAAA,GACAoC,KAAAwI,EAAA,GAAA5K,IAAA,GACAoC,KAAAwI,EAAA,GAAA5K,IAAA,EACAoC,KAAAwI,EAAA,OAAA5K,GAEAuU,EAAAnS,KAAApC,EAAA4K,GAAA,GAEAA,EAAA,GAGAuC,EAAA9M,UAAAkW,WAAA,SAAAvW,EAAA4K,EAAAiB,EAAA6I,GAGA,GAFA1U,KACA4K,GAAA,GACA8J,EAAA,CACA,IAAA8B,EAAAvR,KAAAqG,IAAA,IAAAO,EAAA,GAEAuI,EAAAhS,KAAApC,EAAA4K,EAAAiB,EAAA2K,EAAA,GAAAA,GAGA,IAAAxX,EAAA,EACA+V,EAAA,EACA0B,EAAA,EAEA,IADArU,KAAAwI,GAAA,IAAA5K,IACAhB,EAAA6M,IAAAkJ,GAAA,MACA/U,EAAA,OAAAyW,GAAA,IAAArU,KAAAwI,EAAA5L,EAAA,KACAyX,EAAA,GAEArU,KAAAwI,EAAA5L,IAAAgB,EAAA+U,GAAA,GAAA0B,EAAA,IAGA,OAAA7L,EAAAiB,GAGAsB,EAAA9M,UAAAqW,WAAA,SAAA1W,EAAA4K,EAAAiB,EAAA6I,GAGA,GAFA1U,KACA4K,GAAA,GACA8J,EAAA,CACA,IAAA8B,EAAAvR,KAAAqG,IAAA,IAAAO,EAAA,GAEAuI,EAAAhS,KAAApC,EAAA4K,EAAAiB,EAAA2K,EAAA,GAAAA,GAGA,IAAAxX,EAAA6M,EAAA,EACAkJ,EAAA,EACA0B,EAAA,EAEA,IADArU,KAAAwI,EAAA5L,GAAA,IAAAgB,IACAhB,GAAA,IAAA+V,GAAA,MACA/U,EAAA,OAAAyW,GAAA,IAAArU,KAAAwI,EAAA5L,EAAA,KACAyX,EAAA,GAEArU,KAAAwI,EAAA5L,IAAAgB,EAAA+U,GAAA,GAAA0B,EAAA,IAGA,OAAA7L,EAAAiB,GAGAsB,EAAA9M,UAAAsW,UAAA,SAAA3W,EAAA4K,EAAA8J,GAOA,OANA1U,KACA4K,GAAA,EACA8J,GAAAN,EAAAhS,KAAApC,EAAA4K,EAAA,YACAuC,EAAAC,sBAAApN,EAAAiF,KAAAqB,MAAAtG,IACAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,GACAoC,KAAAwI,GAAA,IAAA5K,EACA4K,EAAA,GAGAuC,EAAA9M,UAAAuW,aAAA,SAAA5W,EAAA4K,EAAA8J,GAUA,OATA1U,KACA4K,GAAA,EACA8J,GAAAN,EAAAhS,KAAApC,EAAA4K,EAAA,gBACAuC,EAAAC,qBACAhL,KAAAwI,GAAA,IAAA5K,EACAoC,KAAAwI,EAAA,GAAA5K,IAAA,GAEAqU,EAAAjS,KAAApC,EAAA4K,GAAA,GAEAA,EAAA,GAGAuC,EAAA9M,UAAAwW,aAAA,SAAA7W,EAAA4K,EAAA8J,GAUA,OATA1U,KACA4K,GAAA,EACA8J,GAAAN,EAAAhS,KAAApC,EAAA4K,EAAA,gBACAuC,EAAAC,qBACAhL,KAAAwI,GAAA5K,IAAA,EACAoC,KAAAwI,EAAA,OAAA5K,GAEAqU,EAAAjS,KAAApC,EAAA4K,GAAA,GAEAA,EAAA,GAGAuC,EAAA9M,UAAAyW,aAAA,SAAA9W,EAAA4K,EAAA8J,GAYA,OAXA1U,KACA4K,GAAA,EACA8J,GAAAN,EAAAhS,KAAApC,EAAA4K,EAAA,0BACAuC,EAAAC,qBACAhL,KAAAwI,GAAA,IAAA5K,EACAoC,KAAAwI,EAAA,GAAA5K,IAAA,EACAoC,KAAAwI,EAAA,GAAA5K,IAAA,GACAoC,KAAAwI,EAAA,GAAA5K,IAAA,IAEAuU,EAAAnS,KAAApC,EAAA4K,GAAA,GAEAA,EAAA,GAGAuC,EAAA9M,UAAA0W,aAAA,SAAA/W,EAAA4K,EAAA8J,GAaA,OAZA1U,KACA4K,GAAA,EACA8J,GAAAN,EAAAhS,KAAApC,EAAA4K,EAAA,0BACA5K,EAAA,IAAAA,EAAA,WAAAA,EAAA,GACAmN,EAAAC,qBACAhL,KAAAwI,GAAA5K,IAAA,GACAoC,KAAAwI,EAAA,GAAA5K,IAAA,GACAoC,KAAAwI,EAAA,GAAA5K,IAAA,EACAoC,KAAAwI,EAAA,OAAA5K,GAEAuU,EAAAnS,KAAApC,EAAA4K,GAAA,GAEAA,EAAA,GAgBAuC,EAAA9M,UAAA2W,aAAA,SAAAhX,EAAA4K,EAAA8J,GACA,OAAAD,EAAArS,KAAApC,EAAA4K,GAAA,EAAA8J,IAGAvH,EAAA9M,UAAA4W,aAAA,SAAAjX,EAAA4K,EAAA8J,GACA,OAAAD,EAAArS,KAAApC,EAAA4K,GAAA,EAAA8J,IAWAvH,EAAA9M,UAAA6W,cAAA,SAAAlX,EAAA4K,EAAA8J,GACA,OAAAC,EAAAvS,KAAApC,EAAA4K,GAAA,EAAA8J,IAGAvH,EAAA9M,UAAA8W,cAAA,SAAAnX,EAAA4K,EAAA8J,GACA,OAAAC,EAAAvS,KAAApC,EAAA4K,GAAA,EAAA8J,IAIAvH,EAAA9M,UAAAiO,KAAA,SAAAgF,EAAA8D,EAAAvS,EAAAC,GAQA,GAPAD,MAAA,GACAC,GAAA,IAAAA,MAAA1C,KAAAQ,QACAwU,GAAA9D,EAAA1Q,SAAAwU,EAAA9D,EAAA1Q,QACAwU,MAAA,GACAtS,EAAA,GAAAA,EAAAD,IAAAC,EAAAD,GAGAC,IAAAD,EAAA,SACA,OAAAyO,EAAA1Q,QAAA,IAAAR,KAAAQ,OAAA,SAGA,GAAAwU,EAAA,EACA,UAAA7J,WAAA,6BAEA,GAAA1I,EAAA,GAAAA,GAAAzC,KAAAQ,OAAA,UAAA2K,WAAA,6BACA,GAAAzI,EAAA,YAAAyI,WAAA,2BAGAzI,EAAA1C,KAAAQ,SAAAkC,EAAA1C,KAAAQ,QACA0Q,EAAA1Q,OAAAwU,EAAAtS,EAAAD,IACAC,EAAAwO,EAAA1Q,OAAAwU,EAAAvS,GAGA,IACA7F,EADA8G,EAAAhB,EAAAD,EAGA,GAAAzC,OAAAkR,GAAAzO,EAAAuS,KAAAtS,EAEA,IAAA9F,EAAA8G,EAAA,EAAqB9G,GAAA,IAAQA,EAC7BsU,EAAAtU,EAAAoY,GAAAhV,KAAApD,EAAA6F,QAEG,GAAAiB,EAAA,MAAAqH,EAAAC,oBAEH,IAAApO,EAAA,EAAeA,EAAA8G,IAAS9G,EACxBsU,EAAAtU,EAAAoY,GAAAhV,KAAApD,EAAA6F,QAGAiI,WAAAzM,UAAAgX,IAAAlY,KACAmU,EACAlR,KAAA2P,SAAAlN,IAAAiB,GACAsR,GAIA,OAAAtR,GAOAqH,EAAA9M,UAAAgS,KAAA,SAAAhK,EAAAxD,EAAAC,EAAAkJ,GAEA,oBAAA3F,EAAA,CASA,GARA,iBAAAxD,GACAmJ,EAAAnJ,EACAA,EAAA,EACAC,EAAA1C,KAAAQ,QACK,iBAAAkC,IACLkJ,EAAAlJ,EACAA,EAAA1C,KAAAQ,QAEA,IAAAyF,EAAAzF,OAAA,CACA,IAAA0G,EAAAjB,EAAAiE,WAAA,GACAhD,EAAA,MACAjB,EAAAiB,GAGA,QAAA7K,IAAAuP,GAAA,iBAAAA,EACA,UAAAnK,UAAA,6BAEA,oBAAAmK,IAAAb,EAAAc,WAAAD,GACA,UAAAnK,UAAA,qBAAAmK,OAEG,iBAAA3F,IACHA,GAAA,KAIA,GAAAxD,EAAA,GAAAzC,KAAAQ,OAAAiC,GAAAzC,KAAAQ,OAAAkC,EACA,UAAAyI,WAAA,sBAGA,GAAAzI,GAAAD,EACA,OAAAzC,KAQA,IAAApD,EACA,GANA6F,KAAA,EACAC,OAAArG,IAAAqG,EAAA1C,KAAAQ,OAAAkC,IAAA,EAEAuD,MAAA,GAGA,iBAAAA,EACA,IAAArJ,EAAA6F,EAAmB7F,EAAA8F,IAAS9F,EAC5BoD,KAAApD,GAAAqJ,MAEG,CACH,IAAA6L,EAAA/G,EAAAiB,SAAA/F,GACAA,EACAwG,EAAA,IAAA1B,EAAA9E,EAAA2F,GAAAvD,YACA3E,EAAAoO,EAAAtR,OACA,IAAA5D,EAAA,EAAeA,EAAA8F,EAAAD,IAAiB7F,EAChCoD,KAAApD,EAAA6F,GAAAqP,EAAAlV,EAAA8G,GAIA,OAAA1D,MAMA,IAAAkV,EAAA,qBAmBA,SAAArD,EAAAhU,GACA,OAAAA,EAAA,OAAAA,EAAAwK,SAAA,IACAxK,EAAAwK,SAAA,IAGA,SAAAoE,EAAA7G,EAAA0I,GAEA,IAAAW,EADAX,KAAArF,IAMA,IAJA,IAAAzI,EAAAoF,EAAApF,OACA2U,EAAA,KACArD,KAEAlV,EAAA,EAAiBA,EAAA4D,IAAY5D,EAAA,CAI7B,IAHAqS,EAAArJ,EAAAsE,WAAAtN,IAGA,OAAAqS,EAAA,OAEA,IAAAkG,EAAA,CAEA,GAAAlG,EAAA,QAEAX,GAAA,OAAAwD,EAAAzQ,KAAA,aACA,SACS,GAAAzE,EAAA,IAAA4D,EAAA,EAET8N,GAAA,OAAAwD,EAAAzQ,KAAA,aACA,SAIA8T,EAAAlG,EAEA,SAIA,GAAAA,EAAA,QACAX,GAAA,OAAAwD,EAAAzQ,KAAA,aACA8T,EAAAlG,EACA,SAIAA,EAAA,OAAAkG,EAAA,UAAAlG,EAAA,YACKkG,IAEL7G,GAAA,OAAAwD,EAAAzQ,KAAA,aAMA,GAHA8T,EAAA,KAGAlG,EAAA,KACA,IAAAX,GAAA,WACAwD,EAAAzQ,KAAA4N,QACK,GAAAA,EAAA,MACL,IAAAX,GAAA,WACAwD,EAAAzQ,KACA4N,GAAA,MACA,GAAAA,EAAA,UAEK,GAAAA,EAAA,OACL,IAAAX,GAAA,WACAwD,EAAAzQ,KACA4N,GAAA,OACAA,GAAA,SACA,GAAAA,EAAA,SAEK,MAAAA,EAAA,SASL,UAAA9P,MAAA,sBARA,IAAAmP,GAAA,WACAwD,EAAAzQ,KACA4N,GAAA,OACAA,GAAA,UACAA,GAAA,SACA,GAAAA,EAAA,MAOA,OAAA6C,EA4BA,SAAApF,EAAAjJ,GACA,OAAAmH,EAAAhB,YAhIA,SAAAnG,GAIA,IAFAA,EAUA,SAAAA,GACA,OAAAA,EAAAlB,KAAAkB,EAAAlB,OACAkB,EAAA2R,QAAA,iBAZAC,CAAA5R,GAAA2R,QAAAF,EAAA,KAEA1U,OAAA,WAEA,KAAAiD,EAAAjD,OAAA,MACAiD,GAAA,IAEA,OAAAA,EAuHA6R,CAAA7R,IAGA,SAAAsK,EAAAwH,EAAAC,EAAAhN,EAAAhI,GACA,QAAA5D,EAAA,EAAiBA,EAAA4D,KACjB5D,EAAA4L,GAAAgN,EAAAhV,QAAA5D,GAAA2Y,EAAA/U,UAD6B5D,EAE7B4Y,EAAA5Y,EAAA4L,GAAA+M,EAAA3Y,GAEA,OAAAA,uCCvvDA,SAAAuD,EAAA4K,GAEA,MAAA0K,EAAA/Y,EAAA,GACA2B,EAAA3B,EAAA,GACAgZ,EAAAhZ,EAAA,GAGA,IAAAiZ,EAAAC,EACA,IACAD,EAAAjZ,EAAA,GACAkZ,GAAA,EACA,IAAOlZ,GAAA,eAAAR,EAAA,IAAAiD,MAAA,iDAAAjD,EAAAgL,KAAA,mBAAAhL,EAAA,IAAA2Z,UAA2C,MAAA3Z,KACjD,MAAAA,GACD,IACAQ,GAAA,eAAAR,EAAA,IAAAiD,MAAA,sCAAAjD,EAAAgL,KAAA,mBAAAhL,EAAA,IAAA4Z,UACAC,QAAA1X,EAAAuD,KAAA,kCAEAlF,GAAA,eAAAR,EAAA,IAAAiD,MAAA,6CAAAjD,EAAAgL,KAAA,mBAAAhL,EAAA,IACAyZ,EAAAjZ,GAAA,eAAAR,EAAA,IAAAiD,MAAA,qCAAAjD,EAAAgL,KAAA,mBAAAhL,EAAA,IACA0Z,GAAA,EACG,MAAA1Z,GAEHyZ,EAAAjZ,EAAA,GACAkZ,GAAA,GA2hBA,SAAAI,EAAA/W,GACA,MAAA8F,KAYA,OAXAzH,OAAAmI,KAAA1J,EAAAka,SAAA3Q,QAAAC,IACA,MAAA2Q,EAAAna,EAAAka,QAAA1Q,GACA2Q,EAAA1Q,WACAT,EAAAW,QAAAX,EAAAW,WAAqCH,GAAA2Q,EAAA1Q,cACrCnJ,IAAA6Z,EAAAC,WACApR,EAAAoR,UAAApR,EAAAoR,aAAyC5Q,GAAA2Q,EAAAC,SACzC,WAAAD,EAAAvO,MACA5C,EAAAa,SAAAb,EAAAa,YAAAvE,KAAAkE,GACA,YAAA2Q,EAAAvO,OACA5C,EAAAqR,UAAArR,EAAAqR,aAAA/U,KAAAkE,KAEA7I,EAAA,EAAAA,CAAAuC,EAAA8F,GAMA,SAAAsR,EAAAC,EAAAC,GAGA,IAFA,IAAAC,EACAC,GAAA,EACA,OAAAD,EAAAb,EAAAe,eAAAJ,KACAC,EAAApN,MACAwM,EAAAgB,iBAAAH,EAAAD,EAAAK,OAAA,GACAlB,EAAAvN,IAAAuN,EAAAvN,KAEAwN,EAAAkB,QAAAL,KACAC,GAAA,GAEA,OAAAA,EAMA,SAAAK,IACA,OACAC,SAAA,EACAC,UAAA,EACAC,UAAA,EACAC,WAAA,EACAC,UAAA,EACAC,WAAA,EACAC,YAAA,EACAC,aAAA,EACAC,SAAA,EACAC,UAAA,EACAC,aAAA,EACAC,cAAA,EACAC,aAAA,EACAC,cAAA,GAUA,SAAAC,EAAArZ,GACA,MAAAiE,EAAAtC,EAAAyD,SACApF,IACA,MAAAsZ,EAAA3X,EAAAyD,OAAAnB,GACA,WAAAqV,EAAA,GAAAA,EAAA,GAMA,SAAAC,EAAAC,EAAA1N,GACA,SAAA2N,EAAAC,EAAAC,GACA,OAAAD,KAAA,KAAAE,QAAA,gBAEA9N,GAAAnK,EAAAkY,QAAAlP,OACA,eAAA8O,EAAAD,EAAAjB,SAAAiB,EAAAhB,WACA,eAAAiB,EAAAD,EAAAf,UAAAe,EAAAd,YACA,eAAAe,EAAAD,EAAAb,UAAAa,EAAAZ,YACA,eAAAa,EAAAD,EAAAX,YAAAW,EAAAV,cACA,eAAAW,EAAAD,EAAAT,SAAAS,EAAAR,WACA,eAAAS,EAAAD,EAAAP,aAAAO,EAAAN,eACA,eAAAO,EAAAD,EAAAL,aAAAK,EAAAJ,gBACAhW,KAAA8T,EAAAvN,KAAAuN,EAAAvN,KAzmBApM,EAAAuc,UAAA,EAGAvc,EAAA6Z,QAGA7Z,EAAAwc,QAAAxc,EAAAuc,SAAA,QACA5b,GAAA,eAAAR,EAAA,IAAAiD,MAAA,8CAAAjD,EAAAgL,KAAA,mBAAAhL,EAAA,IAAAqc,QAGAxc,EAAAka,QAAAvZ,EAAA,GAGAX,EAAAyc,cAAA,qBAGAzc,EAAA0c,cAAA9C,EAAA+C,eAGA3c,EAAA4c,qBAAA,EAGA5c,EAAA6c,mBAAA,EAGA7c,EAAA8c,aAAA9c,EAAAuc,SAAAhb,QAAAwb,wBAAA,qlCAAAC,6BAAA,0nBAAAC,uBAAA,+QAAAC,yBAAA,yhBAAAC,uBAAA,42iBAAAC,cAAA,q7MAAAC,iBAAA,ilKAAAC,cAAA,iVAAAC,iBAAA,4GAAAC,YAAA,0yBAAAC,eAAA,2hPAAAC,kBAAA,27BAAAC,eAAA,2YAAAC,YAAA,2hEAAAC,eAAA,47XAGA7d,EAAA8d,gBAAA9d,EAAAuc,SAAAhb,QAAAwc,SAAA,w7bAAAC,SAAA,gnUAGAhe,EAAAie,KAAA,SAAA/a,EAAAgX,EAAAgE,GACA,mBAAAhE,GACAgE,EAAAhE,EACAA,MACGA,IACHA,MAEA,MAAAoC,EAAApC,EAAAoC,QAAAlY,EAAAkY,OACA9B,EAAAN,EAAAM,QAAApW,EAAAoW,OACA2D,EAAAjE,EAAAiE,UAAAC,EACAC,EAAAnE,EAAAmE,WAAAC,EACAC,EAAArE,EAAAqE,WAAAC,EACAvC,EAAA/B,EAAA+B,QAihBAjB,SAAA,EACAC,UAAA,EACAC,UAAA,EACAC,WAAA,EACAC,UAAA,EACAC,WAAA,EACAC,YAAA,EACAC,aAAA,EACAC,SAAA,EACAC,UAAA,EACAC,aAAA,EACAC,cAAA,EACAC,aAAA,EACAC,cAAA,GA3hBA,IAAAS,EACA,MAAAlZ,MAAA,sCACA,IAAAoX,EACA,MAAApX,MAAA,sCACA,IAAAsW,EAAA+E,aAAA,CACA,GAAAN,IAAAC,EACA,MAAAhb,MAAA,wCACA,GAAAib,IAAAC,EACA,MAAAlb,MAAA,yCACA,GAAAmb,IAAAC,EACA,MAAApb,MAAA,yCAGA,MAAA2F,EAAAkR,EAAA/W,GAcA,GAVAgb,MAAA,SAAAQ,GACA,IAAAvT,EAAA,EAKA,OAJAuT,IACAlE,EAAApN,MAAAsR,EAAAC,MAAAhF,EAAAvN,KACAjB,EAAA,GAEAA,IAIApC,EAAAyT,QAEA,OADAF,EAAAlP,MAAA,WAAApN,EAAAwc,SAAA3C,EAAA,WAAAF,EAAAvN,KACA8R,EAAA,MAGA,GAAAnV,EAAA6V,MAAA7V,EAAAgB,EAAAtF,OAAA,GACA,MAAAuE,KA6BA,OA5BAzH,OAAAmI,KAAA1J,EAAAka,SAAA3Q,QAAAnI,IACA,IAAAyd,EAAA7e,EAAAka,QAAA9Y,GACA0d,EAAA,IAIA,IAHAA,GAAA,KAAA1d,EACAyd,EAAApV,SAAA,IAAAoV,EAAApV,QAAA,GAAAhF,SACAqa,GAAA,MAAAD,EAAApV,QAAA,IACAqV,EAAAra,OA1BA,IA2BAqa,GAAA,IACA3Y,MAAAqE,QAAAqU,EAAAE,MACA/V,EAAA1D,KAAAwZ,EAAAD,EAAAE,KAAA,GAAAF,EAAAE,KAAA9Z,MAAA,GAAA+Z,IAAAC,IACA,QAAApe,EAAA,EAAyBA,EA9BzB,KA8BqCA,EACrCoe,EAAA,IAAAA,EACA,OAAAtF,EAAAvN,IAAA6S,IACSpZ,KAAA,KAETmD,EAAA1D,KAAAwZ,EAAAD,EAAAE,SAGAhW,EAAA6V,KAAAtC,EAAA9B,GAAApN,OACA,WAAApN,EAAAwc,SAAA3C,EAAA,WACA,0CACA,GACA,yBACA,oDACA,uDACA,GACA,YACA3S,OAAA8B,GAAAnD,KAAA8T,EAAAvN,KAAAuN,EAAAvN,KACA8R,EAAA,MAIA,MAAAgB,EAAAnW,EAAAmW,QAAA5c,EAAAiB,QAAAwF,EAAAmW,SAAA9a,EAAA7B,MAGA4c,EAAA7c,EAAAuD,KAAA,2BACAuZ,EAAArW,EAAAsW,UAAAF,GAGApW,EAAAuW,MACA,iBAAAvW,EAAAuW,MACAvW,EAAAuW,IAAAvW,EAAAuW,IAAA1Z,MAAA,MACAO,MAAAjE,UAAAoD,KAAA4F,MAAAkU,EAAArW,EAAAuW,IAAAN,IAAAxY,QAIA,IAAA+Y,EAAA,KAGA,QAAA1e,EAAA,EAAA2e,EAAAzW,EAAAgB,EAAAtF,OAAoC5D,EAAA2e,IAAO3e,EAAA,CAG3C,IAAA4e,EAFA1W,EAAAgB,EAAAlJ,GAEAwY,QAAA,WAAAA,QAAA,iBAGAqG,EAAAvB,EAAA7b,EAAAuD,KAAAqZ,EAAAO,GAAA,OACA,UAAAC,EAAA,CAEA,WADAA,EAAAvB,EAAA7b,EAAAuD,KAAAqZ,EAAAO,EAAA,cAEA,OAAAvB,EAAA9a,MAAA,eAAAqc,EAAA,oBAEAA,GAAA,iBAEAA,GAAA,MAOA,IALAxD,EAAAZ,aACAY,EAAAb,WAAAU,EAAA,KACAyD,EAAA3F,EAAA+F,UAAAD,EAAAD,GAAA,EAAAF,KAGA,OAAAE,EAAAF,EAAAK,aAAA,CAIA,GAAAH,EAAAI,WAAA7f,EAAA0c,gBACA,QAAA7b,EAAA,EAAA2e,EAAAJ,EAAA3a,OAA2C5D,EAAA2e,IAAO3e,EAClD,GAAAb,EAAA8c,aAAA3a,eAAAsd,GACAC,EAAA1f,EAAA8c,aAAA2C,QAMA,WAJAC,EAAAvB,EAAA7b,EAAAuD,KACAuZ,EAAAve,GACA4e,EAAAK,UAAA9f,EAAA0c,cAAAjY,QAAA,SAEA,CACAgb,GAAA,MACA,YAQA,WADAC,EAAAvB,EAAA7b,EAAAuD,KAAAqZ,EAAAO,EAAA,SAGA,WADAC,EAAAvB,EAAA7b,EAAAuD,KAAAqZ,EAAAO,EAAA,cACA,CACA,QAAA5e,EAAA,EAAA2e,EAAAJ,EAAA3a,OAA+C5D,EAAA2e,IAAO3e,EAAA,CACtD,MAAAyC,EAAA8b,EAAAve,GACA2I,EAAAxJ,EAAA0c,cAAA+C,EACA,GAAAzf,EAAA8c,aAAA3a,eAAAqH,GACAkW,EAAA1f,EAAA8c,aAAAtT,QAGA,WADAkW,EAAAvB,EAAA7b,EAAAuD,KAAAvC,EAAAmc,EAAA,SACA,CACAA,EAAAzf,EAAA0c,cAAA+C,EAAA,MACA,OAIA,UAAAC,EACA,OAAAxB,EACA9a,MAAA,gBAAAqc,EAAA,yBAGAA,GAAA,iBAEAA,GAAA,MAEAxD,EAAAZ,aACAY,EAAAb,WAAAU,EAAA,KACAlC,EAAA+F,UAAAD,EAAAD,GAAA,EAAAF,KAGA,GAAAjF,EAAAiF,EAAA/E,GACA,OAAA0D,EAAA9a,MAAA,gBAIA,IAAA2c,GAAA,EACAhX,EAAAsW,OACA9d,OAAAmI,KAAA1J,EAAA8c,cAAAvT,QAAAyW,IACAA,EAAA/O,YAAA,MAAAjR,EAAA0c,cAAAjY,SAEAwX,EAAAZ,aACAY,EAAAb,WAAAU,EAAA,KACAyD,EAAA3F,EAAA+F,UACA3f,EAAA8c,aAAAkD,GACAA,EAAA,OACA,EACAT,KAGAQ,GAAA,KAEA,QAAAlf,EAAA,EAAA2e,EAAAJ,EAAA3a,OAAqC5D,EAAA2e,IAAO3e,EAAA,CAC5C,OAAAA,GAAAkf,EAAA,SACA,IAAAE,EAAAb,EAAAve,GACAqf,EAAA3B,EAAA0B,GACA,QAAAjV,EAAA,EAAAlK,EAAAof,EAAAzb,OAAwCuG,EAAAlK,IAAOkK,EAAA,CAC/C,IAAAgV,EAAAE,EAAAlV,GACAmV,EAAAhC,EAAA7b,EAAAuD,KAAAoa,EAAAD,IACA,UAAAG,EACA,OAAAjC,EAAA9a,MAAA,iBAAA4c,EAAA,iBACA/D,EAAAZ,aACAY,EAAAb,WAAAU,EAAA,KACAyD,EAAA3F,EAAA+F,UACAQ,EACAngB,EAAA0c,cAAAsD,GACA,EACAT,MAOA,MAAAa,EAAAxG,EAAAyG,gBASA,IAAApgB,EARA2Z,EAAA0G,UAAAF,EAAA,GACAxG,EAAA2G,iBAAAH,IAAArX,EAAAyX,eACA5G,EAAA6G,YAAAL,IAAArX,EAAAwN,UACAqD,EAAA8G,YAAAN,IAAArX,EAAA4X,UACA/G,EAAAgH,gBAAAR,IAAArX,EAAA8X,cACAjH,EAAAkH,cAAAV,EAAArX,EAAAgY,aAAA,GACAnH,EAAAoH,aAAAZ,EAAA,MAAArX,EAAAkY,WAGAhF,EAAAV,eACA,IACAU,EAAAX,aAAAQ,EAAA,KACA7b,EAAA2Z,EAAAsH,QAAA3B,EAAAa,KAEG,MAAAjgB,GACH,OAAA+d,EAAA/d,GAEA,GAAAma,EAAAiF,EAAA/E,GAEA,OADAva,KAAAkhB,UACAjD,EAAA9a,MAAA,kBAeA,GAXA2F,EAAAqY,WACAnF,EAAAN,gBACAM,EAAAP,cAAAI,EAAA,KACA,IAAA7b,EAAAmhB,WAEA,OADAnhB,EAAAkhB,UACAjD,EAAA9a,MAAA,sBAMA,UAAA2F,EAAAsY,SACApF,EAAAJ,gBACAI,EAAAL,cAAAE,EAAA,KACA7b,EAAAqhB,WAAA,2BAEG,UAAAvY,EAAAsY,SACHpF,EAAAJ,gBACAI,EAAAL,cAAAE,EAAA,KACA7b,EAAAqhB,WAAA,wBAEG,aAAAvY,EAAAsY,SAEH,OADAphB,EAAAkhB,UACAjD,EAAA9a,MAAA,0BAGA,IAAAme,GAAA,EACAC,EAAA,EACAC,GAAA1Y,EAAA2Y,SAEA,IAAA3Y,EAAA4Y,WACA,iBAAA5Y,EAAA4Y,SACAJ,EAAAxY,EAAA4Y,SACA5Y,EAAA,GACAwY,EAAA,EACAxY,EAAA,GACAwY,EAAA,EACAxY,EAAA,GACAwY,EAAA,EACAxY,EAAA,GACAwY,EAAA,GACA,IAAAxY,EAAA4Y,UACAJ,EAAAvhB,EAAA4c,qBACA4E,EAAAxhB,EAAA6c,oBAEA0E,EAAA,GAEAxY,EAAA,EACAyY,EAAA,EACAzY,EAAA,IACAyY,EAAA,GAEA,iBAAAzY,EAAAwY,gBACAA,EAAAxY,EAAAwY,eACA,iBAAAxY,EAAAyY,YACAA,EAAAzY,EAAAyY,YACA,MAAAzY,EAAAyY,YACAA,EAAA,EACA,MAAAzY,EAAAyY,cACAA,EAAA,GAEAvhB,EAAA2hB,iBAAAL,EAAA,EAAAA,EAAA,GACAthB,EAAA4hB,eAAAL,GACAvhB,EAAA6hB,aAAAL,GAEA,IAAAH,KA4BA,GA3BAvY,EAAAuY,YACA,iBAAAvY,EAAAuY,YACAvY,EAAAuY,UAAAvY,EAAAuY,UAAA1b,MAAA,MACAmD,EAAAuY,UAAA7c,QACAsE,EAAAuY,UAAA/X,QAAAwY,IACAT,EAAA3W,QAAAoX,GAAA,GACAT,EAAAhc,KAAAyc,MAKAR,GAAA,IACAtF,EAAAJ,gBACAI,EAAAL,cAAAE,EAAA,KACA7b,EAAA0hB,cAKAL,EAAA7c,SACAwX,EAAAJ,gBACAI,EAAAL,cAAAE,EAAA,KACA7b,EAAAqhB,YAAAtC,IAAA+C,KAAAvb,aAKAuC,EAAAiZ,OAAA,CACA,IAAAC,GAAA,EAYA,GAVA,MAAAlZ,EAAAmZ,UACA,WAAApZ,KAAAC,EAAAmZ,UAAA,MAAAnZ,EAAAoZ,SACApZ,EAAAoZ,SAAApZ,EAAAmZ,QACA,QAAApZ,KAAAC,EAAAmZ,UAAA,MAAAnZ,EAAAqZ,UACArZ,EAAAqZ,UAAArZ,EAAAmZ,QACA,MAAAnZ,EAAAsZ,aACAtZ,EAAAsZ,WAAAtZ,EAAAmZ,UAIA,MAAAnZ,EAAAsZ,WAAA,CACA,IAMAC,EANAC,EAAA,MAAAxZ,EAAAkY,UACAlY,EAAAkY,UAAAxc,OACAsE,EAAAkY,UACA3e,EAAAiF,SAAAwB,EAAAsZ,YAAA,OACA,KAgBA,GAbApG,EAAAR,YACAQ,EAAAT,UAAAM,EAAA,KACAwG,EAAAriB,EAAAuiB,SAAAD,KAGAxZ,EAAAsZ,WAAA5d,OACA4Z,EAAA/b,EAAAuD,KAAAqZ,EAAAnW,EAAAsZ,YAAAC,EAAA/T,SAEAkU,EAAAH,EAAA/T,QACA0T,GAAA,GAIA,MAAAK,EAAArB,UACA,GAAAlY,EAAAsZ,WAAA5d,OAAA,CACA,IAAAwc,EAAAyB,KAAAC,MAAAL,EAAArB,WACAA,EAAA2B,WAAA5iB,EAAAyc,cACAwE,EAAA4B,QAAAtZ,QAAA,CAAAnI,EAAAgF,KACA,IAAA0Y,EAAA,KACA,GAAA1d,EAAAye,WAAA7f,EAAA0c,eACA,QAAA7b,EAAA,EAAA2e,EAAAJ,EAAA3a,OAAiD5D,EAAA2e,GAKjD,QAJAV,EAAAX,EAAA7b,EAAAuD,KACAuZ,EAAAve,GACAO,EAAA0e,UAAA9f,EAAA0c,cAAAjY,aAHwD5D,QAQxDie,EAAAX,EAAA7b,EAAAuD,KAAAqZ,EAAA9d,IACA,UAAA0d,EACA,OAAAZ,EAAA9a,MAAA,gBAAAhC,EAAA,iBACA6f,EAAA6B,iBACA7B,EAAA6B,mBACA7B,EAAA6B,eAAA1c,GAAA0Y,IAEAT,EAAA/b,EAAAuD,KACAqZ,EACA5c,EAAA+E,QAAA0B,EAAAsZ,YACA/f,EAAAiF,SAAAgb,IACAG,KAAAK,UAAA9B,SAEAzG,EAAApN,MAAA,+CAAAuM,EAAAvN,KAMA,GACA,MAAArD,EAAAoZ,UACA,MAAApZ,EAAAsZ,YACA,MAAAtZ,EAAAqZ,UAEA,CACA,IAAAtD,EACA/V,EAAAoZ,UAAApZ,EAAAoZ,SAAA1d,QACAwX,EAAAR,YACAQ,EAAAT,UAAAM,EAAA,KACAgD,EAAA7e,EAAA+iB,WAEA3E,EAAA/b,EAAAuD,KAAAqZ,EAAAnW,EAAAoZ,UAAArD,IACOmD,IACPhG,EAAAR,YACAQ,EAAAT,UAAAM,EAAA,KACAgD,EAAA7e,EAAA+iB,WAEAP,EAAA3D,GACAmD,GAAA,GAKA,SAAAlZ,EAAAqZ,UAAA,CACA,IAAAa,EACAla,EAAAqZ,UAAA3d,QACAwX,EAAAR,YACAQ,EAAAT,UAAAM,EAAA,KACAmH,EAAAhjB,EAAAijB,YAEA7E,EAAA/b,EAAAuD,KAAAqZ,EAAAnW,EAAAqZ,WAAAa,IACOhB,IACPhG,EAAAR,YACAQ,EAAAT,UAAAM,EAAA,KACAmH,EAAAhjB,EAAAijB,YAEAT,EAAAQ,GACAhB,GAAA,IAQA,OAHAhiB,EAAAkhB,UACApY,EAAA+S,SACAE,EAAAC,EAAAzB,GACA0D,EAAA,MAEA,SAAAE,EAAArZ,GACA,IACA,IAAA+Z,EAKA,OAJA7C,EAAAhB,YACAgB,EAAAjB,UAAAc,EAAA,KACAgD,EAAApF,EAAA+E,aAAA1Z,GAA0C8K,SAAA,WAE1CiP,EACK,MAAA3e,GACL,aAIA,SAAAme,EAAAvZ,EAAAoe,GACA,IAQA,OAPAlH,EAAAd,aACAc,EAAAf,WAAAY,EAAA,KACA,iBAAAqH,EACAzJ,EAAA0J,cAAAre,EAAAoe,GAAgDtT,SAAA,SAEhD6J,EAAA0J,cAAAre,EAAAoe,MAEA,EACK,MAAAhjB,GACL,UAIA,SAAAqe,EAAAnX,GACA,IAAAgc,EACA,IAIA,OAHApH,EAAAjB,UAAAc,EAAA,KACAuH,EAAA1iB,GAAA,eAAAR,EAAA,IAAAiD,MAAA,mCAAAjD,EAAAgL,KAAA,mBAAAhL,EAAA,IAAAmjB,KAAA,QAA8C/gB,IAAA8E,MAE9Cgc,EACK,MAAAljB,GACL,UAIA,SAAAsiB,EAAAU,GACAV,EAAAc,OACAtH,EAAAd,aACAsH,EAAAc,MAAA,GAEAtH,EAAAf,WAAAY,EAAA,KACA,iBAAAqH,EACA7G,EAAAlP,MAAA+V,GAAgCtT,SAAA,SAEhCyM,EAAAlP,MAAA+V,OAsBAnjB,EAAAia,iBAiBAja,EAAAsa,mBAsBAta,EAAA+a,cAEA3W,EAAAyD,SACAzD,EAAAyD,OAAAlH,EAAA,IAUAX,EAAA8b,UAkBA9b,EAAAgc,aAsBAhc,EAAAwjB,mBAnBA,SAAA/gB,GACA,IAAAghB,KAeA,OAdAA,EAAArW,MAAA,SAAAsW,GACA,iBAAAA,EACAzf,KAAAqB,KAAA0J,EAAA1I,KAAAod,EAAA,SAEAzf,KAAAqB,KAAAoe,GAEAjhB,KAAAihB,IAEAD,EAAAE,SAAA,WACA,OAAA3U,EAAA9H,OAAAjD,OAEAwf,EAAAnX,SAAA,WACA,OAAArI,KAAA0f,WAAArX,SAAA,SAEAmX,GAMAzjB,EAAA4jB,YACAC,cAAA,EACAC,eAAA,EACAC,mBAAA,EACAC,gBAAA,EACAC,eAAA,EACAC,kBAAA,EACAC,wBAAA,EACAhP,OAAA,SACAlV,OAAA,WACAof,OAAA,EACA+E,SACAC,SAAA","file":"asc.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"./assemblyscript\"), (function webpackLoadOptionalExternalModule() { try { return require(\"assemblyscript\"); } catch(e) {} }()));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([, \"assemblyscript\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"asc\"] = factory(require(\"./assemblyscript\"), (function webpackLoadOptionalExternalModule() { try { return require(\"assemblyscript\"); } catch(e) {} }()));\n\telse\n\t\troot[\"asc\"] = factory(root[undefined], root[\"_\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__6__, __WEBPACK_EXTERNAL_MODULE__7__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 15);\n","exports.nextTick = function nextTick(fn) {\n\tsetTimeout(fn, 0);\n};\n\nexports.platform = exports.arch = \nexports.execPath = exports.title = 'browser';\nexports.pid = 1;\nexports.browser = true;\nexports.env = {};\nexports.argv = [];\n\nexports.binding = function (name) {\n\tthrow new Error('No such module. (Possibly not yet loaded)')\n};\n\n(function () {\n    var cwd = '/';\n    var path;\n    exports.cwd = function () { return cwd };\n    exports.chdir = function (dir) {\n        if (!path) path = require('path');\n        cwd = path.resolve(dir, cwd);\n    };\n})();\n\nexports.exit = exports.kill = \nexports.umask = exports.dlopen = \nexports.uptime = exports.memoryUsage = \nexports.uvCounters = function() {};\nexports.features = {};\n","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\r\n} catch (e) {\r\n\t// This works if the window reference is available\r\n\tif (typeof window === \"object\") g = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// Split a filename into [root, dir, basename, ext], unix version\n// 'root' is just a slash, or nothing.\nvar splitPathRe =\n    /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\nvar splitPath = function(filename) {\n  return splitPathRe.exec(filename).slice(1);\n};\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function(path) {\n  var result = splitPath(path),\n      root = result[0],\n      dir = result[1];\n\n  if (!root && !dir) {\n    // No dirname whatsoever\n    return '.';\n  }\n\n  if (dir) {\n    // It has a dirname, strip trailing slash\n    dir = dir.substr(0, dir.length - 1);\n  }\n\n  return root + dir;\n};\n\n\nexports.basename = function(path, ext) {\n  var f = splitPath(path)[2];\n  // TODO: make this comparison case-insensitive on windows?\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\n\nexports.extname = function(path) {\n  return splitPath(path)[3];\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n","module.exports = process.hrtime || hrtime\n\n// polyfil for window.performance.now\nvar performance = global.performance || {}\nvar performanceNow =\n  performance.now        ||\n  performance.mozNow     ||\n  performance.msNow      ||\n  performance.oNow       ||\n  performance.webkitNow  ||\n  function(){ return (new Date()).getTime() }\n\n// generate timestamp or delta\n// see http://nodejs.org/api/process.html#process_process_hrtime\nfunction hrtime(previousTimestamp){\n  var clocktime = performanceNow.call(performance)*1e-3\n  var seconds = Math.floor(clocktime)\n  var nanoseconds = Math.floor((clocktime%1)*1e9)\n  if (previousTimestamp) {\n    seconds = seconds - previousTimestamp[0]\n    nanoseconds = nanoseconds - previousTimestamp[1]\n    if (nanoseconds<0) {\n      seconds--\n      nanoseconds += 1e9\n    }\n  }\n  return [seconds,nanoseconds]\n}","module.exports = function (args, opts) {\n    if (!opts) opts = {};\n    \n    var flags = { bools : {}, strings : {}, unknownFn: null };\n\n    if (typeof opts['unknown'] === 'function') {\n        flags.unknownFn = opts['unknown'];\n    }\n\n    if (typeof opts['boolean'] === 'boolean' && opts['boolean']) {\n      flags.allBools = true;\n    } else {\n      [].concat(opts['boolean']).filter(Boolean).forEach(function (key) {\n          flags.bools[key] = true;\n      });\n    }\n    \n    var aliases = {};\n    Object.keys(opts.alias || {}).forEach(function (key) {\n        aliases[key] = [].concat(opts.alias[key]);\n        aliases[key].forEach(function (x) {\n            aliases[x] = [key].concat(aliases[key].filter(function (y) {\n                return x !== y;\n            }));\n        });\n    });\n\n    [].concat(opts.string).filter(Boolean).forEach(function (key) {\n        flags.strings[key] = true;\n        if (aliases[key]) {\n            flags.strings[aliases[key]] = true;\n        }\n     });\n\n    var defaults = opts['default'] || {};\n    \n    var argv = { _ : [] };\n    Object.keys(flags.bools).forEach(function (key) {\n        setArg(key, defaults[key] === undefined ? false : defaults[key]);\n    });\n    \n    var notFlags = [];\n\n    if (args.indexOf('--') !== -1) {\n        notFlags = args.slice(args.indexOf('--')+1);\n        args = args.slice(0, args.indexOf('--'));\n    }\n\n    function argDefined(key, arg) {\n        return (flags.allBools && /^--[^=]+$/.test(arg)) ||\n            flags.strings[key] || flags.bools[key] || aliases[key];\n    }\n\n    function setArg (key, val, arg) {\n        if (arg && flags.unknownFn && !argDefined(key, arg)) {\n            if (flags.unknownFn(arg) === false) return;\n        }\n\n        var value = !flags.strings[key] && isNumber(val)\n            ? Number(val) : val\n        ;\n        setKey(argv, key.split('.'), value);\n        \n        (aliases[key] || []).forEach(function (x) {\n            setKey(argv, x.split('.'), value);\n        });\n    }\n\n    function setKey (obj, keys, value) {\n        var o = obj;\n        keys.slice(0,-1).forEach(function (key) {\n            if (o[key] === undefined) o[key] = {};\n            o = o[key];\n        });\n\n        var key = keys[keys.length - 1];\n        if (o[key] === undefined || flags.bools[key] || typeof o[key] === 'boolean') {\n            o[key] = value;\n        }\n        else if (Array.isArray(o[key])) {\n            o[key].push(value);\n        }\n        else {\n            o[key] = [ o[key], value ];\n        }\n    }\n    \n    function aliasIsBoolean(key) {\n      return aliases[key].some(function (x) {\n          return flags.bools[x];\n      });\n    }\n\n    for (var i = 0; i < args.length; i++) {\n        var arg = args[i];\n        \n        if (/^--.+=/.test(arg)) {\n            // Using [\\s\\S] instead of . because js doesn't support the\n            // 'dotall' regex modifier. See:\n            // http://stackoverflow.com/a/1068308/13216\n            var m = arg.match(/^--([^=]+)=([\\s\\S]*)$/);\n            var key = m[1];\n            var value = m[2];\n            if (flags.bools[key]) {\n                value = value !== 'false';\n            }\n            setArg(key, value, arg);\n        }\n        else if (/^--no-.+/.test(arg)) {\n            var key = arg.match(/^--no-(.+)/)[1];\n            setArg(key, false, arg);\n        }\n        else if (/^--.+/.test(arg)) {\n            var key = arg.match(/^--(.+)/)[1];\n            var next = args[i + 1];\n            if (next !== undefined && !/^-/.test(next)\n            && !flags.bools[key]\n            && !flags.allBools\n            && (aliases[key] ? !aliasIsBoolean(key) : true)) {\n                setArg(key, next, arg);\n                i++;\n            }\n            else if (/^(true|false)$/.test(next)) {\n                setArg(key, next === 'true', arg);\n                i++;\n            }\n            else {\n                setArg(key, flags.strings[key] ? '' : true, arg);\n            }\n        }\n        else if (/^-[^-]+/.test(arg)) {\n            var letters = arg.slice(1,-1).split('');\n            \n            var broken = false;\n            for (var j = 0; j < letters.length; j++) {\n                var next = arg.slice(j+2);\n                \n                if (next === '-') {\n                    setArg(letters[j], next, arg)\n                    continue;\n                }\n                \n                if (/[A-Za-z]/.test(letters[j]) && /=/.test(next)) {\n                    setArg(letters[j], next.split('=')[1], arg);\n                    broken = true;\n                    break;\n                }\n                \n                if (/[A-Za-z]/.test(letters[j])\n                && /-?\\d+(\\.\\d*)?(e-?\\d+)?$/.test(next)) {\n                    setArg(letters[j], next, arg);\n                    broken = true;\n                    break;\n                }\n                \n                if (letters[j+1] && letters[j+1].match(/\\W/)) {\n                    setArg(letters[j], arg.slice(j+2), arg);\n                    broken = true;\n                    break;\n                }\n                else {\n                    setArg(letters[j], flags.strings[letters[j]] ? '' : true, arg);\n                }\n            }\n            \n            var key = arg.slice(-1)[0];\n            if (!broken && key !== '-') {\n                if (args[i+1] && !/^(-|--)[^-]/.test(args[i+1])\n                && !flags.bools[key]\n                && (aliases[key] ? !aliasIsBoolean(key) : true)) {\n                    setArg(key, args[i+1], arg);\n                    i++;\n                }\n                else if (args[i+1] && /true|false/.test(args[i+1])) {\n                    setArg(key, args[i+1] === 'true', arg);\n                    i++;\n                }\n                else {\n                    setArg(key, flags.strings[key] ? '' : true, arg);\n                }\n            }\n        }\n        else {\n            if (!flags.unknownFn || flags.unknownFn(arg) !== false) {\n                argv._.push(\n                    flags.strings['_'] || !isNumber(arg) ? arg : Number(arg)\n                );\n            }\n            if (opts.stopEarly) {\n                argv._.push.apply(argv._, args.slice(i + 1));\n                break;\n            }\n        }\n    }\n    \n    Object.keys(defaults).forEach(function (key) {\n        if (!hasKey(argv, key.split('.'))) {\n            setKey(argv, key.split('.'), defaults[key]);\n            \n            (aliases[key] || []).forEach(function (x) {\n                setKey(argv, x.split('.'), defaults[key]);\n            });\n        }\n    });\n    \n    if (opts['--']) {\n        argv['--'] = new Array();\n        notFlags.forEach(function(key) {\n            argv['--'].push(key);\n        });\n    }\n    else {\n        notFlags.forEach(function(key) {\n            argv._.push(key);\n        });\n    }\n\n    return argv;\n};\n\nfunction hasKey (obj, keys) {\n    var o = obj;\n    keys.slice(0,-1).forEach(function (key) {\n        o = (o[key] || {});\n    });\n\n    var key = keys[keys.length - 1];\n    return key in o;\n}\n\nfunction isNumber (x) {\n    if (typeof x === 'number') return true;\n    if (/^0x[0-9a-f]+$/i.test(x)) return true;\n    return /^[-+]?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(e[-+]?\\d+)?$/.test(x);\n}\n\n","module.exports = __WEBPACK_EXTERNAL_MODULE__6__;","if(typeof __WEBPACK_EXTERNAL_MODULE__7__ === 'undefined') {var e = new Error(\"Cannot find module \\\"undefined\\\"\"); e.code = 'MODULE_NOT_FOUND'; throw e;}\nmodule.exports = __WEBPACK_EXTERNAL_MODULE__7__;","exports.endianness = function () { return 'LE' };\n\nexports.hostname = function () {\n    if (typeof location !== 'undefined') {\n        return location.hostname\n    }\n    else return '';\n};\n\nexports.loadavg = function () { return [] };\n\nexports.uptime = function () { return 0 };\n\nexports.freemem = function () {\n    return Number.MAX_VALUE;\n};\n\nexports.totalmem = function () {\n    return Number.MAX_VALUE;\n};\n\nexports.cpus = function () { return [] };\n\nexports.type = function () { return 'Browser' };\n\nexports.release = function () {\n    if (typeof navigator !== 'undefined') {\n        return navigator.appVersion;\n    }\n    return '';\n};\n\nexports.networkInterfaces\n= exports.getNetworkInterfaces\n= function () { return {} };\n\nexports.arch = function () { return 'javascript' };\n\nexports.platform = function () { return 'browser' };\n\nexports.tmpdir = exports.tmpDir = function () {\n    return '/tmp';\n};\n\nexports.EOL = '\\n';\n\nexports.homedir = function () {\n\treturn '/'\n};\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction placeHoldersCount (b64) {\n  var len = b64.length\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // the number of equal signs (place holders)\n  // if there are two placeholders, than the two characters before it\n  // represent one byte\n  // if there is only one, then the three characters before it represent 2 bytes\n  // this is just a cheap hack to not do indexOf twice\n  return b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0\n}\n\nfunction byteLength (b64) {\n  // base64 is 4/3 + up to two characters of the original data\n  return (b64.length * 3 / 4) - placeHoldersCount(b64)\n}\n\nfunction toByteArray (b64) {\n  var i, l, tmp, placeHolders, arr\n  var len = b64.length\n  placeHolders = placeHoldersCount(b64)\n\n  arr = new Arr((len * 3 / 4) - placeHolders)\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  l = placeHolders > 0 ? len - 4 : len\n\n  var L = 0\n\n  for (i = 0; i < l; i += 4) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]\n    arr[L++] = (tmp >> 16) & 0xFF\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  if (placeHolders === 2) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[L++] = tmp & 0xFF\n  } else if (placeHolders === 1) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp = ((uint8[i] << 16) & 0xFF0000) + ((uint8[i + 1] << 8) & 0xFF00) + (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var output = ''\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    output += lookup[tmp >> 2]\n    output += lookup[(tmp << 4) & 0x3F]\n    output += '=='\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])\n    output += lookup[tmp >> 10]\n    output += lookup[(tmp >> 4) & 0x3F]\n    output += lookup[(tmp << 2) & 0x3F]\n    output += '='\n  }\n\n  parts.push(output)\n\n  return parts.join('')\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","//////////////////////// Compiler frontend for node.js /////////////////////////\r\n\r\nconst fs = require(\"fs\");\r\nconst path = require(\"path\");\r\nconst os = require(\"os\");\r\n\r\n// Use distribution files if present, otherwise run the sources directly\r\nvar assemblyscript, isDev;\r\ntry {\r\n  assemblyscript = require(\"../dist/assemblyscript.js\");\r\n  isDev = false;\r\n  try { require(\"source-map-support\").install(); } catch (e) {} // optional\r\n} catch (e) {\r\n  try {\r\n    require(\"ts-node\").register({\r\n      project: path.join(__dirname, \"..\", \"src\", \"tsconfig.json\")\r\n    });\r\n    require(\"../src/glue/js\");\r\n    assemblyscript = require(\"../src\");\r\n    isDev = true;\r\n  } catch (e) {\r\n    // last resort: browser bundle under node (relative to 'dist/')\r\n    assemblyscript = require(\"./assemblyscript\");\r\n    isDev = false;\r\n  }\r\n}\r\n\r\n/** Whether this is a webpack bundle or not. */\r\nexports.isBundle = typeof BUNDLE_VERSION === \"string\";\r\n\r\n/** Whether asc runs the sources directly or not. */\r\nexports.isDev = isDev;\r\n\r\n/** AssemblyScript veresion. */\r\nexports.version = exports.isBundle ? BUNDLE_VERSION\r\n                : require(\"../package.json\").version;\r\n\r\n/** Available options. */\r\nexports.options = require(\"./asc.json\");\r\n\r\n/** Common root used in source maps. */\r\nexports.sourceMapRoot = \"assemblyscript:///\";\r\n\r\n/** Prefix used for library files. */\r\nexports.libraryPrefix = assemblyscript.LIBRARY_PREFIX;\r\n\r\n/** Default Binaryen optimization level. */\r\nexports.defaultOptimizeLevel = 2;\r\n\r\n/** Default Binaryen shrink level. */\r\nexports.defaultShrinkLevel = 1;\r\n\r\n/** Bundled library files, if any. */\r\nexports.libraryFiles = exports.isBundle ? BUNDLE_LIBRARY : {};\r\n\r\n/** Bundled definition files, if any. */\r\nexports.definitionFiles = exports.isBundle ? BUNDLE_DEFINITIONS : {};\r\n\r\n/** Runs the command line utility using the specified arguments array. */\r\nexports.main = function main(argv, options, callback) {\r\n  if (typeof options === \"function\") {\r\n    callback = options;\r\n    options = {};\r\n  } else if (!options)\r\n    options = {};\r\n\r\n  const stdout = options.stdout || process.stdout;\r\n  const stderr = options.stderr || process.stderr;\r\n  const readFile = options.readFile || readFileNode;\r\n  const writeFile = options.writeFile || writeFileNode;\r\n  const listFiles = options.listFiles || listFilesNode;\r\n  const stats = options.stats || createStats();\r\n\r\n  // All of the above must be specified in browser environments\r\n  if (!stdout)\r\n    throw Error(\"'options.stdout' must be specified\");\r\n  if (!stderr)\r\n    throw Error(\"'options.stderr' must be specified\");\r\n  if (!fs.readFileSync) {\r\n    if (readFile === readFileNode)\r\n      throw Error(\"'options.readFile' must be specified\");\r\n    if (writeFile === writeFileNode)\r\n      throw Error(\"'options.writeFile' must be specified\");\r\n    if (listFiles === listFilesNode)\r\n      throw Error(\"'options.listFiles' must be specified\");\r\n  }\r\n\r\n  const args = parseArguments(argv);\r\n  const indent = 24;\r\n\r\n  // Use default callback if none is provided\r\n  if (!callback) callback = function defaultCallback(err) {\r\n    var code = 0;\r\n    if (err) {\r\n      stderr.write(err.stack + os.EOL);\r\n      code = 1;\r\n    }\r\n    return code;\r\n  };\r\n\r\n  // Just print the version if requested\r\n  if (args.version) {\r\n    stdout.write(\"Version \" + exports.version + (isDev ? \"-dev\" : \"\") + os.EOL);\r\n    return callback(null);\r\n  }\r\n  // Print the help message if requested or no source files are provided\r\n  if (args.help || args._.length < 1) {\r\n    const opts = [];\r\n    Object.keys(exports.options).forEach(name => {\r\n      var option = exports.options[name];\r\n      var text = \" \";\r\n      text += \"--\" + name;\r\n      if (option.aliases && option.aliases[0].length === 1)\r\n        text += \", -\" + option.aliases[0];\r\n      while (text.length < indent)\r\n        text += \" \";\r\n      if (Array.isArray(option.desc)) {\r\n        opts.push(text + option.desc[0] + option.desc.slice(1).map(line => {\r\n          for (let i = 0; i < indent; ++i)\r\n            line = \" \" + line;\r\n          return os.EOL + line;\r\n        }).join(\"\"));\r\n      } else\r\n        opts.push(text + option.desc);\r\n    });\r\n\r\n    (args.help ? stdout : stderr).write([\r\n      \"Version \" + exports.version + (isDev ? \"-dev\" : \"\"),\r\n      \"Syntax:   asc [entryFile ...] [options]\",\r\n      \"\",\r\n      \"Examples: asc hello.ts\",\r\n      \"          asc hello.ts -b hello.wasm -t hello.wat\",\r\n      \"          asc hello1.ts hello2.ts -b -O > hello.wasm\",\r\n      \"\",\r\n      \"Options:\"\r\n    ].concat(opts).join(os.EOL) + os.EOL);\r\n    return callback(null);\r\n  }\r\n\r\n  // Set up base directory\r\n  const baseDir = args.baseDir ? path.resolve(args.baseDir) : process.cwd();\r\n\r\n  // Include standard library if --noLib isn't set\r\n  const stdLibDir = path.join(__dirname, \"..\", \"std\", \"assembly\");\r\n  const libDirs = args.noLib ? [] : [ stdLibDir ];\r\n\r\n  // Include custom library components (with or without stdlib)\r\n  if (args.lib) {\r\n    if (typeof args.lib === \"string\")\r\n      args.lib = args.lib.split(\",\");\r\n    Array.prototype.push.apply(libDirs, args.lib.map(trim));\r\n  }\r\n\r\n  // Begin parsing\r\n  var parser = null;\r\n\r\n  // Include entry files\r\n  for (let i = 0, k = args._.length; i < k; ++i) {\r\n    const filename = args._[i];\r\n\r\n    let sourcePath = filename.replace(/\\\\/g, \"/\").replace(/(\\.ts|\\/)$/, \"\");\r\n\r\n    // Try entryPath.ts, then entryPath/index.ts\r\n    let sourceText = readFile(path.join(baseDir, sourcePath) + \".ts\");\r\n    if (sourceText === null) {\r\n      sourceText = readFile(path.join(baseDir, sourcePath, \"index.ts\"));\r\n      if (sourceText === null)\r\n        return callback(Error(\"Entry file '\" + sourcePath + \".ts' not found.\"));\r\n      else\r\n        sourcePath += \"/index.ts\";\r\n    } else\r\n      sourcePath += \".ts\";\r\n\r\n    stats.parseCount++;\r\n    stats.parseTime += measure(() => {\r\n      parser = assemblyscript.parseFile(sourceText, sourcePath, true, parser);\r\n    });\r\n\r\n    while ((sourcePath = parser.nextFile()) != null) {\r\n      let found = false;\r\n\r\n      // Load library file if explicitly requested\r\n      if (sourcePath.startsWith(exports.libraryPrefix)) {\r\n        for (let i = 0, k = libDirs.length; i < k; ++i) {\r\n          if (exports.libraryFiles.hasOwnProperty(sourcePath))\r\n            sourceText = exports.libraryFiles[sourcePath];\r\n          else {\r\n            sourceText = readFile(path.join(\r\n              libDirs[i],\r\n              sourcePath.substring(exports.libraryPrefix.length) + \".ts\")\r\n            );\r\n            if (sourceText !== null) {\r\n              sourcePath += \".ts\";\r\n              break;\r\n            }\r\n          }\r\n        }\r\n\r\n      // Otherwise try nextFile.ts, nextFile/index.ts, (lib)/nextFile.ts\r\n      } else {\r\n        sourceText = readFile(path.join(baseDir, sourcePath + \".ts\"));\r\n        if (sourceText === null) {\r\n          sourceText = readFile(path.join(baseDir, sourcePath, \"index.ts\"));\r\n          if (sourceText === null) {\r\n            for (let i = 0, k = libDirs.length; i < k; ++i) {\r\n              const dir = libDirs[i];\r\n              const key = exports.libraryPrefix + sourcePath;\r\n              if (exports.libraryFiles.hasOwnProperty(key))\r\n                sourceText = exports.libraryFiles[key];\r\n              else {\r\n                sourceText = readFile(path.join(dir, sourcePath + \".ts\"));\r\n                if (sourceText !== null) {\r\n                  sourcePath = exports.libraryPrefix + sourcePath + \".ts\";\r\n                  break;\r\n                }\r\n              }\r\n            }\r\n            if (sourceText === null)\r\n              return callback(\r\n                Error(\"Import file '\" + sourcePath + \".ts' not found.\")\r\n              );\r\n          } else\r\n            sourcePath += \"/index.ts\";\r\n        } else\r\n          sourcePath += \".ts\";\r\n      }\r\n      stats.parseCount++;\r\n      stats.parseTime += measure(() => {\r\n        assemblyscript.parseFile(sourceText, sourcePath, false, parser);\r\n      });\r\n    }\r\n    if (checkDiagnostics(parser, stderr))\r\n      return callback(Error(\"Parse error\"));\r\n  }\r\n\r\n  // Include (other) library components\r\n  var hasBundledLibrary = false;\r\n  if (!args.noLib)\r\n    Object.keys(exports.libraryFiles).forEach(libPath => {\r\n      if (libPath.lastIndexOf(\"/\") >= exports.libraryPrefix.length)\r\n        return;\r\n      stats.parseCount++;\r\n      stats.parseTime += measure(() => {\r\n        parser = assemblyscript.parseFile(\r\n          exports.libraryFiles[libPath],\r\n          libPath + \".ts\",\r\n          false,\r\n          parser\r\n        );\r\n      });\r\n      hasBundledLibrary = true;\r\n    });\r\n  for (let i = 0, k = libDirs.length; i < k; ++i) {\r\n    if (i === 0 && hasBundledLibrary) continue;\r\n    let libDir = libDirs[i];\r\n    let libFiles = listFiles(libDir);\r\n    for (let j = 0, l = libFiles.length; j < l; ++j) {\r\n      let libPath = libFiles[j];\r\n      let libText = readFile(path.join(libDir, libPath));\r\n      if (libText === null)\r\n        return callback(Error(\"Library file '\" + libPath + \"' not found.\"));\r\n      stats.parseCount++;\r\n      stats.parseTime += measure(() => {\r\n        parser = assemblyscript.parseFile(\r\n          libText,\r\n          exports.libraryPrefix + libPath,\r\n          false,\r\n          parser\r\n        );\r\n      });\r\n    }\r\n  }\r\n\r\n  // Begin compilation\r\n  const compilerOptions = assemblyscript.createOptions();\r\n  assemblyscript.setTarget(compilerOptions, 0);\r\n  assemblyscript.setNoTreeShaking(compilerOptions, !!args.noTreeShaking);\r\n  assemblyscript.setNoAssert(compilerOptions, !!args.noAssert);\r\n  assemblyscript.setNoMemory(compilerOptions, !!args.noMemory);\r\n  assemblyscript.setImportMemory(compilerOptions, !!args.importMemory);\r\n  assemblyscript.setMemoryBase(compilerOptions, args.memoryBase >>> 0);\r\n  assemblyscript.setSourceMap(compilerOptions, args.sourceMap != null);\r\n\r\n  var module;\r\n  stats.compileCount++;\r\n  try {\r\n    stats.compileTime += measure(() => {\r\n      module = assemblyscript.compile(parser, compilerOptions);\r\n    });\r\n  } catch (e) {\r\n    return callback(e);\r\n  }\r\n  if (checkDiagnostics(parser, stderr)) {\r\n    if (module) module.dispose();\r\n    return callback(Error(\"Compile error\"));\r\n  }\r\n\r\n  // Validate the module if requested\r\n  if (args.validate) {\r\n    stats.validateCount++;\r\n    stats.validateTime += measure(() => {\r\n      if (!module.validate()) {\r\n        module.dispose();\r\n        return callback(Error(\"Validate error\"));\r\n      }\r\n    });\r\n  }\r\n\r\n  // Set Binaryen-specific options\r\n  if (args.trapMode === \"clamp\") {\r\n    stats.optimizeCount++;\r\n    stats.optimizeTime += measure(() => {\r\n      module.runPasses([ \"trap-mode-clamp\" ]);\r\n    });\r\n  } else if (args.trapMode === \"js\") {\r\n    stats.optimizeCount++;\r\n    stats.optimizeTime += measure(() => {\r\n      module.runPasses([ \"trap-mode-js\" ]);\r\n    });\r\n  } else if (args.trapMode !== \"allow\") {\r\n    module.dispose();\r\n    return callback(Error(\"Unsupported trap mode\"));\r\n  }\r\n\r\n  var optimizeLevel = -1;\r\n  var shrinkLevel = 0;\r\n  var debugInfo = !args.noDebug;\r\n\r\n  if (args.optimize !== false) {\r\n    if (typeof args.optimize === \"number\")\r\n      optimizeLevel = args.optimize;\r\n    else if (args[\"0\"])\r\n      optimizeLevel = 0;\r\n    else if (args[\"1\"])\r\n      optimizeLevel = 1;\r\n    else if (args[\"2\"])\r\n      optimizeLevel = 2;\r\n    else if (args[\"3\"])\r\n      optimizeLevel = 3;\r\n    else if (args.optimize === true) {\r\n      optimizeLevel = exports.defaultOptimizeLevel;\r\n      shrinkLevel = exports.defaultShrinkLevel;\r\n    } else\r\n      optimizeLevel = 0;\r\n  }\r\n  if (args[\"s\"])\r\n    shrinkLevel = 1;\r\n  else if (args[\"z\"])\r\n    shrinkLevel = 2;\r\n\r\n  if (typeof args.optimizeLevel === \"number\")\r\n    optimizeLevel = args.optimizeLevel;\r\n  if (typeof args.shrinkLevel === \"number\")\r\n    shrinkLevel = args.shrinkLevel;\r\n  else if (args.shrinkLevel === \"s\")\r\n    shrinkLevel = 1;\r\n  else if (args.shrinkLevel === \"z\")\r\n    shrinkLevel = 2;\r\n\r\n  module.setOptimizeLevel(optimizeLevel > 0 ? optimizeLevel : 0);\r\n  module.setShrinkLevel(shrinkLevel);\r\n  module.setDebugInfo(debugInfo);\r\n\r\n  var runPasses = [];\r\n  if (args.runPasses) {\r\n    if (typeof args.runPasses === \"string\")\r\n      args.runPasses = args.runPasses.split(\",\");\r\n    if (args.runPasses.length)\r\n      args.runPasses.forEach(pass => {\r\n        if (runPasses.indexOf(pass) < 0)\r\n          runPasses.push(pass);\r\n      });\r\n  }\r\n\r\n  // Optimize the module if requested\r\n  if (optimizeLevel >= 0) {\r\n    stats.optimizeCount++;\r\n    stats.optimizeTime += measure(() => {\r\n      module.optimize();\r\n    });\r\n  }\r\n\r\n  // Run additional passes if requested\r\n  if (runPasses.length) {\r\n    stats.optimizeCount++;\r\n    stats.optimizeTime += measure(() => {\r\n      module.runPasses(runPasses.map(pass => pass.trim()));\r\n    });\r\n  }\r\n\r\n  // Prepare output\r\n  if (!args.noEmit) {\r\n    let hasStdout = false;\r\n\r\n    if (args.outFile != null) {\r\n      if (/\\.was?t$/.test(args.outFile) && args.textFile == null)\r\n        args.textFile = args.outFile;\r\n      else if (/\\.js$/.test(args.outFile) && args.asmjsFile == null)\r\n        args.asmjsFile = args.outFile;\r\n      else if (args.binaryFile == null)\r\n        args.binaryFile = args.outFile;\r\n    }\r\n\r\n    // Write binary\r\n    if (args.binaryFile != null) {\r\n      let sourceMapURL = args.sourceMap != null\r\n        ? args.sourceMap.length\r\n          ? args.sourceMap\r\n          : path.basename(args.binaryFile) + \".map\"\r\n        : null;\r\n\r\n      let binary;\r\n      stats.emitCount++;\r\n      stats.emitTime += measure(() => {\r\n        binary = module.toBinary(sourceMapURL)\r\n      });\r\n\r\n      if (args.binaryFile.length) {\r\n        writeFile(path.join(baseDir, args.binaryFile), binary.output);\r\n      } else {\r\n        writeStdout(binary.output);\r\n        hasStdout = true;\r\n      }\r\n\r\n      // Post-process source map\r\n      if (binary.sourceMap != null) {\r\n        if (args.binaryFile.length) {\r\n          let sourceMap = JSON.parse(binary.sourceMap);\r\n          sourceMap.sourceRoot = exports.sourceMapRoot;\r\n          sourceMap.sources.forEach((name, index) => {\r\n            let text = null;\r\n            if (name.startsWith(exports.libraryPrefix)) {\r\n              for (let i = 0, k = libDirs.length; i < k; ++i) {\r\n                text = readFile(path.join(\r\n                  libDirs[i],\r\n                  name.substring(exports.libraryPrefix.length))\r\n                );\r\n                if (text !== null) break;\r\n              }\r\n            } else\r\n              text = readFile(path.join(baseDir, name));\r\n            if (text === null)\r\n              return callback(Error(\"Source file '\" + name + \"' not found.\"));\r\n            if (!sourceMap.sourceContents)\r\n              sourceMap.sourceContents = [];\r\n            sourceMap.sourceContents[index] = text;\r\n          });\r\n          writeFile(path.join(\r\n            baseDir,\r\n            path.dirname(args.binaryFile),\r\n            path.basename(sourceMapURL)\r\n          ), JSON.stringify(sourceMap));\r\n        } else {\r\n          stderr.write(\"Skipped source map (stdout already occupied)\" + os.EOL);\r\n        }\r\n      }\r\n    }\r\n\r\n    // Write text\r\n    if (\r\n      args.textFile != null || (\r\n        args.binaryFile == null &&\r\n        args.asmjsFile == null\r\n      )\r\n    ) {\r\n      let text;\r\n      if (args.textFile && args.textFile.length) {\r\n        stats.emitCount++;\r\n        stats.emitTime += measure(() => {\r\n          text = module.toText();\r\n        });\r\n        writeFile(path.join(baseDir, args.textFile), text);\r\n      } else if (!hasStdout) {\r\n        stats.emitCount++;\r\n        stats.emitTime += measure(() => {\r\n          text = module.toText()\r\n        });\r\n        writeStdout(text);\r\n        hasStdout = true;\r\n      }\r\n    }\r\n\r\n    // Write asm.js\r\n    if (args.asmjsFile != null) {\r\n      let asm;\r\n      if (args.asmjsFile.length) {\r\n        stats.emitCount++;\r\n        stats.emitTime += measure(() => {\r\n          asm = module.toAsmjs();\r\n        });\r\n        writeFile(path.join(baseDir, args.asmjsFile), asm);\r\n      } else if (!hasStdout) {\r\n        stats.emitCount++;\r\n        stats.emitTime += measure(() => {\r\n          asm = module.toAsmjs();\r\n        });\r\n        writeStdout(asm);\r\n        hasStdout = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  module.dispose();\r\n  if (args.measure)\r\n    printStats(stats, stderr);\r\n  return callback(null);\r\n\r\n  function readFileNode(filename) {\r\n    try {\r\n      var text;\r\n      stats.readCount++;\r\n      stats.readTime += measure(() => {\r\n        text = fs.readFileSync(filename, { encoding: \"utf8\" });\r\n      });\r\n      return text;\r\n    } catch (e) {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  function writeFileNode(filename, contents) {\r\n    try {\r\n      stats.writeCount++;\r\n      stats.writeTime += measure(() => {\r\n        if (typeof contents === \"string\")\r\n          fs.writeFileSync(filename, contents, { encoding: \"utf8\" } );\r\n        else\r\n          fs.writeFileSync(filename, contents);\r\n      });\r\n      return true;\r\n    } catch (e) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  function listFilesNode(dirname) {\r\n    var files;\r\n    try {\r\n      stats.readTime += measure(() => {\r\n        files = require(\"glob\").sync(\"*.ts\", { cwd: dirname });\r\n      });\r\n      return files;\r\n    } catch (e) {\r\n      return [];\r\n    }\r\n  }\r\n\r\n  function writeStdout(contents) {\r\n    if (!writeStdout.used) {\r\n      stats.writeCount++;\r\n      writeStdout.used = true;\r\n    }\r\n    stats.writeTime += measure(() => {\r\n      if (typeof contents === \"string\")\r\n        stdout.write(contents, { encoding: \"utf8\" });\r\n      else\r\n        stdout.write(contents);\r\n    });\r\n  }\r\n}\r\n\r\n/** Parses the specified command line arguments. */\r\nfunction parseArguments(argv) {\r\n  const opts = {};\r\n  Object.keys(exports.options).forEach(key => {\r\n    const opt = exports.options[key];\r\n    if (opt.aliases)\r\n      (opts.alias || (opts.alias = {}))[key] = opt.aliases;\r\n    if (opt.default !== undefined)\r\n      (opts.default || (opts.default = {}))[key] = opt.default;\r\n    if (opt.type === \"string\")\r\n      (opts.string || (opts.string = [])).push(key);\r\n    else if (opt.type === \"boolean\")\r\n      (opts.boolean || (opts.boolean = [])).push(key);\r\n  });\r\n  return require(\"minimist\")(argv, opts);\r\n}\r\n\r\nexports.parseArguments = parseArguments;\r\n\r\n/** Checks diagnostics emitted so far for errors. */\r\nfunction checkDiagnostics(emitter, stderr) {\r\n  var diagnostic;\r\n  var hasErrors = false;\r\n  while ((diagnostic = assemblyscript.nextDiagnostic(emitter)) != null) {\r\n    stderr.write(\r\n      assemblyscript.formatDiagnostic(diagnostic, stderr.isTTY, true) +\r\n      os.EOL + os.EOL\r\n    );\r\n    if (assemblyscript.isError(diagnostic))\r\n      hasErrors = true;\r\n  }\r\n  return hasErrors;\r\n}\r\n\r\nexports.checkDiagnostics = checkDiagnostics;\r\n\r\n/** Creates an empty set of stats. */\r\nfunction createStats() {\r\n  return {\r\n    readTime: 0,\r\n    readCount: 0,\r\n    writeTime: 0,\r\n    writeCount: 0,\r\n    parseTime: 0,\r\n    parseCount: 0,\r\n    compileTime: 0,\r\n    compileCount: 0,\r\n    emitTime: 0,\r\n    emitCount: 0,\r\n    validateTime: 0,\r\n    validateCount: 0,\r\n    optimizeTime: 0,\r\n    optimizeCount: 0\r\n  };\r\n}\r\n\r\nexports.createStats = createStats;\r\n\r\nif (!process.hrtime)\r\n  process.hrtime = require(\"browser-process-hrtime\");\r\n\r\n/** Measures the execution time of the specified function.  */\r\nfunction measure(fn) {\r\n  const start = process.hrtime();\r\n  fn();\r\n  const times = process.hrtime(start);\r\n  return times[0] * 1e9 + times[1];\r\n}\r\n\r\nexports.measure = measure;\r\n\r\n/** Formats and prints out the contents of a set of stats. */\r\nfunction printStats(stats, output) {\r\n  function format(time, count) {\r\n    return time ? (time / 1e6).toFixed(3) + \" ms\" : \"N/A\";\r\n  }\r\n  (output || process.stdout).write([\r\n    \"I/O Read  : \" + format(stats.readTime, stats.readCount),\r\n    \"I/O Write : \" + format(stats.writeTime, stats.writeCount),\r\n    \"Parse     : \" + format(stats.parseTime, stats.parseCount),\r\n    \"Compile   : \" + format(stats.compileTime, stats.compileCount),\r\n    \"Emit      : \" + format(stats.emitTime, stats.emitCount),\r\n    \"Validate  : \" + format(stats.validateTime, stats.validateCount),\r\n    \"Optimize  : \" + format(stats.optimizeTime, stats.optimizeCount)\r\n  ].join(os.EOL) + os.EOL);\r\n}\r\n\r\nexports.printStats = printStats;\r\n\r\n/** Creates a memory stream that can be used in place of stdout/stderr. */\r\nfunction createMemoryStream(fn) {\r\n  var stream = [];\r\n  stream.write = function(chunk) {\r\n    if (typeof chunk === \"string\") {\r\n      this.push(Buffer.from(chunk, \"utf8\"));\r\n    } else {\r\n      this.push(chunk);\r\n    }\r\n    if (fn) fn(chunk);\r\n  };\r\n  stream.toBuffer = function() {\r\n    return Buffer.concat(this);\r\n  };\r\n  stream.toString = function() {\r\n    return this.toBuffer().toString(\"utf8\");\r\n  };\r\n  return stream;\r\n}\r\n\r\nexports.createMemoryStream = createMemoryStream;\r\n\r\n/** Compatible TypeScript compiler options. */\r\nexports.tscOptions = {\r\n  alwaysStrict: true,\r\n  noImplicitAny: true,\r\n  noImplicitReturns: true,\r\n  noImplicitThis: true,\r\n  noEmitOnError: true,\r\n  strictNullChecks: true,\r\n  experimentalDecorators: true,\r\n  target: \"esnext\",\r\n  module: \"commonjs\",\r\n  noLib: true,\r\n  types: [],\r\n  allowJs: false\r\n};\r\n"],"sourceRoot":""}
{"version":3,"sources":["webpack://asc/webpack/universalModuleDefinition","webpack://asc/webpack/bootstrap","webpack://asc/../node_modules/node-libs-browser/mock/process.js","webpack://asc/../node_modules/webpack/buildin/global.js","webpack://asc/../node_modules/path-browserify/index.js","webpack://asc/../node_modules/browser-process-hrtime/index.js","webpack://asc/../node_modules/minimist/index.js","webpack://asc/. sync","webpack://asc/external \"assemblyscript\"","webpack://asc/./util/colors.js","webpack://asc/../node_modules/@protobufjs/utf8/index.js","webpack://asc/./asc.js"],"names":["root","factory","exports","module","require","e","define","amd","self","this","__WEBPACK_EXTERNAL_MODULE__7__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","path","cwd","nextTick","fn","setTimeout","platform","arch","execPath","title","pid","browser","env","argv","binding","Error","chdir","dir","resolve","exit","kill","umask","dlopen","uptime","memoryUsage","uvCounters","features","g","Function","eval","window","process","normalizeArray","parts","allowAboveRoot","up","length","last","splice","unshift","splitPathRe","splitPath","filename","exec","slice","filter","xs","f","res","push","resolvedPath","resolvedAbsolute","arguments","TypeError","charAt","split","join","normalize","isAbsolute","trailingSlash","substr","paths","Array","index","relative","from","to","trim","arr","start","end","fromParts","toParts","Math","min","samePartsLength","outputParts","concat","sep","delimiter","dirname","result","basename","ext","extname","str","len","global","hrtime","previousTimestamp","clocktime","performanceNow","performance","seconds","floor","nanoseconds","now","mozNow","msNow","oNow","webkitNow","Date","getTime","isNumber","x","test","args","opts","flags","bools","strings","unknownFn","allBools","Boolean","forEach","key","aliases","keys","alias","y","string","defaults","_","setArg","undefined","notFlags","val","arg","argDefined","Number","setKey","obj","isArray","aliasIsBoolean","some","indexOf","match","next","letters","broken","j","stopEarly","apply","webpackEmptyContext","req","code","id","proc","isCI","stream","base","colors","supported","isTTY","gray","text","GRAY","RESET","red","RED","green","GREEN","yellow","YELLOW","blue","BLUE","magenta","MAGENTA","cyan","CYAN","white","WHITE","stdout","stderr","utf8","charCodeAt","read","buffer","t","chunk","String","fromCharCode","write","offset","c1","c2","fs","EOL","assemblyscript","isDev","parseArguments","options","opt","default","type","boolean","checkDiagnostics","emitter","diagnostic","hasErrors","nextDiagnostic","formatDiagnostic","isError","createStats","readTime","readCount","writeTime","writeCount","parseTime","parseCount","compileTime","compileCount","emitTime","emitCount","validateTime","validateCount","optimizeTime","optimizeCount","measure","times","formatTime","time","toFixed","printStats","stats","output","format","count","install","register","project","isBundle","version","sourceMapRoot","libraryPrefix","LIBRARY_PREFIX","defaultOptimizeLevel","defaultShrinkLevel","libraryFiles","allocator/arena","allocator/buddy","allocator/emscripten","allocator/system","allocator/tlsf","array","arraybuffer","builtins","collector/itcm","error","internal/allocator","internal/array","internal/arraybuffer","internal/hash","internal/string","internal/typedarray","iterator","map","math","memory","polyfills","regexp","set","typedarray","libDir","bundled","sync","file","replace","readFileSync","definitionFiles","assembly","portable","stdDir","compileString","sources","input.ts","create","createMemoryStream","binary","main","readFile","writeFile","contents","listFiles","callback","readFileNode","writeFileNode","listFilesNode","noColors","err","stack","help","option","description","line","out","color","baseDir","transforms","transform","parser","noLib","libPath","parseFile","customLibDirs","lib","k","libFiles","endsWith","libText","sourcePath","sourceText","nextFile","startsWith","plainName","substring","indexName","applyTransform","program","finishParsing","compilerOptions","createOptions","setTarget","setNoTreeShaking","noTreeShaking","setNoAssert","noAssert","setNoMemory","noMemory","setImportMemory","importMemory","setImportTable","importTable","setMemoryBase","memoryBase","setSourceMap","sourceMap","setGlobalAlias","use","part","enable","flag","toUpperCase","enableFeature","compileProgram","dispose","validate","trapMode","runPasses","optimizeLevel","shrinkLevel","debugInfo","noDebug","optimize","setOptimizeLevel","setShrinkLevel","setDebugInfo","pass","noEmit","hasStdout","hasOutput","outFile","textFile","asmjsFile","binaryFile","wasm","sourceMapURL","toBinary","writeStdout","JSON","parse","sourceRoot","stdName","sourceContents","stringify","asm","toAsmjs","idlFile","idl","buildIDL","tsdFile","tsd","buildTSD","wat","toText","encoding","writeFileSync","files","used","allocBuffer","Buffer","allocUnsafe","Uint8Array","reset","toBuffer","toString","tscOptions","alwaysStrict","noImplicitAny","noImplicitReturns","noImplicitThis","noEmitOnError","strictNullChecks","experimentalDecorators","target","types","allowJs"],"mappings":"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","file":"asc.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory((function webpackLoadOptionalExternalModule() { try { return require(\"assemblyscript\"); } catch(e) {} }()));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"assemblyscript\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"asc\"] = factory((function webpackLoadOptionalExternalModule() { try { return require(\"assemblyscript\"); } catch(e) {} }()));\n\telse\n\t\troot[\"asc\"] = factory(root[\"assemblyscript\"]);\n})(typeof self !== 'undefined' ? self : this, function(__WEBPACK_EXTERNAL_MODULE__7__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 12);\n","exports.nextTick = function nextTick(fn) {\n\tsetTimeout(fn, 0);\n};\n\nexports.platform = exports.arch = \nexports.execPath = exports.title = 'browser';\nexports.pid = 1;\nexports.browser = true;\nexports.env = {};\nexports.argv = [];\n\nexports.binding = function (name) {\n\tthrow new Error('No such module. (Possibly not yet loaded)')\n};\n\n(function () {\n    var cwd = '/';\n    var path;\n    exports.cwd = function () { return cwd };\n    exports.chdir = function (dir) {\n        if (!path) path = require('path');\n        cwd = path.resolve(dir, cwd);\n    };\n})();\n\nexports.exit = exports.kill = \nexports.umask = exports.dlopen = \nexports.uptime = exports.memoryUsage = \nexports.uvCounters = function() {};\nexports.features = {};\n","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\r\n} catch (e) {\r\n\t// This works if the window reference is available\r\n\tif (typeof window === \"object\") g = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// Split a filename into [root, dir, basename, ext], unix version\n// 'root' is just a slash, or nothing.\nvar splitPathRe =\n    /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\nvar splitPath = function(filename) {\n  return splitPathRe.exec(filename).slice(1);\n};\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function(path) {\n  var result = splitPath(path),\n      root = result[0],\n      dir = result[1];\n\n  if (!root && !dir) {\n    // No dirname whatsoever\n    return '.';\n  }\n\n  if (dir) {\n    // It has a dirname, strip trailing slash\n    dir = dir.substr(0, dir.length - 1);\n  }\n\n  return root + dir;\n};\n\n\nexports.basename = function(path, ext) {\n  var f = splitPath(path)[2];\n  // TODO: make this comparison case-insensitive on windows?\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\n\nexports.extname = function(path) {\n  return splitPath(path)[3];\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n","module.exports = process.hrtime || hrtime\n\n// polyfil for window.performance.now\nvar performance = global.performance || {}\nvar performanceNow =\n  performance.now        ||\n  performance.mozNow     ||\n  performance.msNow      ||\n  performance.oNow       ||\n  performance.webkitNow  ||\n  function(){ return (new Date()).getTime() }\n\n// generate timestamp or delta\n// see http://nodejs.org/api/process.html#process_process_hrtime\nfunction hrtime(previousTimestamp){\n  var clocktime = performanceNow.call(performance)*1e-3\n  var seconds = Math.floor(clocktime)\n  var nanoseconds = Math.floor((clocktime%1)*1e9)\n  if (previousTimestamp) {\n    seconds = seconds - previousTimestamp[0]\n    nanoseconds = nanoseconds - previousTimestamp[1]\n    if (nanoseconds<0) {\n      seconds--\n      nanoseconds += 1e9\n    }\n  }\n  return [seconds,nanoseconds]\n}","module.exports = function (args, opts) {\n    if (!opts) opts = {};\n    \n    var flags = { bools : {}, strings : {}, unknownFn: null };\n\n    if (typeof opts['unknown'] === 'function') {\n        flags.unknownFn = opts['unknown'];\n    }\n\n    if (typeof opts['boolean'] === 'boolean' && opts['boolean']) {\n      flags.allBools = true;\n    } else {\n      [].concat(opts['boolean']).filter(Boolean).forEach(function (key) {\n          flags.bools[key] = true;\n      });\n    }\n    \n    var aliases = {};\n    Object.keys(opts.alias || {}).forEach(function (key) {\n        aliases[key] = [].concat(opts.alias[key]);\n        aliases[key].forEach(function (x) {\n            aliases[x] = [key].concat(aliases[key].filter(function (y) {\n                return x !== y;\n            }));\n        });\n    });\n\n    [].concat(opts.string).filter(Boolean).forEach(function (key) {\n        flags.strings[key] = true;\n        if (aliases[key]) {\n            flags.strings[aliases[key]] = true;\n        }\n     });\n\n    var defaults = opts['default'] || {};\n    \n    var argv = { _ : [] };\n    Object.keys(flags.bools).forEach(function (key) {\n        setArg(key, defaults[key] === undefined ? false : defaults[key]);\n    });\n    \n    var notFlags = [];\n\n    if (args.indexOf('--') !== -1) {\n        notFlags = args.slice(args.indexOf('--')+1);\n        args = args.slice(0, args.indexOf('--'));\n    }\n\n    function argDefined(key, arg) {\n        return (flags.allBools && /^--[^=]+$/.test(arg)) ||\n            flags.strings[key] || flags.bools[key] || aliases[key];\n    }\n\n    function setArg (key, val, arg) {\n        if (arg && flags.unknownFn && !argDefined(key, arg)) {\n            if (flags.unknownFn(arg) === false) return;\n        }\n\n        var value = !flags.strings[key] && isNumber(val)\n            ? Number(val) : val\n        ;\n        setKey(argv, key.split('.'), value);\n        \n        (aliases[key] || []).forEach(function (x) {\n            setKey(argv, x.split('.'), value);\n        });\n    }\n\n    function setKey (obj, keys, value) {\n        var o = obj;\n        keys.slice(0,-1).forEach(function (key) {\n            if (o[key] === undefined) o[key] = {};\n            o = o[key];\n        });\n\n        var key = keys[keys.length - 1];\n        if (o[key] === undefined || flags.bools[key] || typeof o[key] === 'boolean') {\n            o[key] = value;\n        }\n        else if (Array.isArray(o[key])) {\n            o[key].push(value);\n        }\n        else {\n            o[key] = [ o[key], value ];\n        }\n    }\n    \n    function aliasIsBoolean(key) {\n      return aliases[key].some(function (x) {\n          return flags.bools[x];\n      });\n    }\n\n    for (var i = 0; i < args.length; i++) {\n        var arg = args[i];\n        \n        if (/^--.+=/.test(arg)) {\n            // Using [\\s\\S] instead of . because js doesn't support the\n            // 'dotall' regex modifier. See:\n            // http://stackoverflow.com/a/1068308/13216\n            var m = arg.match(/^--([^=]+)=([\\s\\S]*)$/);\n            var key = m[1];\n            var value = m[2];\n            if (flags.bools[key]) {\n                value = value !== 'false';\n            }\n            setArg(key, value, arg);\n        }\n        else if (/^--no-.+/.test(arg)) {\n            var key = arg.match(/^--no-(.+)/)[1];\n            setArg(key, false, arg);\n        }\n        else if (/^--.+/.test(arg)) {\n            var key = arg.match(/^--(.+)/)[1];\n            var next = args[i + 1];\n            if (next !== undefined && !/^-/.test(next)\n            && !flags.bools[key]\n            && !flags.allBools\n            && (aliases[key] ? !aliasIsBoolean(key) : true)) {\n                setArg(key, next, arg);\n                i++;\n            }\n            else if (/^(true|false)$/.test(next)) {\n                setArg(key, next === 'true', arg);\n                i++;\n            }\n            else {\n                setArg(key, flags.strings[key] ? '' : true, arg);\n            }\n        }\n        else if (/^-[^-]+/.test(arg)) {\n            var letters = arg.slice(1,-1).split('');\n            \n            var broken = false;\n            for (var j = 0; j < letters.length; j++) {\n                var next = arg.slice(j+2);\n                \n                if (next === '-') {\n                    setArg(letters[j], next, arg)\n                    continue;\n                }\n                \n                if (/[A-Za-z]/.test(letters[j]) && /=/.test(next)) {\n                    setArg(letters[j], next.split('=')[1], arg);\n                    broken = true;\n                    break;\n                }\n                \n                if (/[A-Za-z]/.test(letters[j])\n                && /-?\\d+(\\.\\d*)?(e-?\\d+)?$/.test(next)) {\n                    setArg(letters[j], next, arg);\n                    broken = true;\n                    break;\n                }\n                \n                if (letters[j+1] && letters[j+1].match(/\\W/)) {\n                    setArg(letters[j], arg.slice(j+2), arg);\n                    broken = true;\n                    break;\n                }\n                else {\n                    setArg(letters[j], flags.strings[letters[j]] ? '' : true, arg);\n                }\n            }\n            \n            var key = arg.slice(-1)[0];\n            if (!broken && key !== '-') {\n                if (args[i+1] && !/^(-|--)[^-]/.test(args[i+1])\n                && !flags.bools[key]\n                && (aliases[key] ? !aliasIsBoolean(key) : true)) {\n                    setArg(key, args[i+1], arg);\n                    i++;\n                }\n                else if (args[i+1] && /true|false/.test(args[i+1])) {\n                    setArg(key, args[i+1] === 'true', arg);\n                    i++;\n                }\n                else {\n                    setArg(key, flags.strings[key] ? '' : true, arg);\n                }\n            }\n        }\n        else {\n            if (!flags.unknownFn || flags.unknownFn(arg) !== false) {\n                argv._.push(\n                    flags.strings['_'] || !isNumber(arg) ? arg : Number(arg)\n                );\n            }\n            if (opts.stopEarly) {\n                argv._.push.apply(argv._, args.slice(i + 1));\n                break;\n            }\n        }\n    }\n    \n    Object.keys(defaults).forEach(function (key) {\n        if (!hasKey(argv, key.split('.'))) {\n            setKey(argv, key.split('.'), defaults[key]);\n            \n            (aliases[key] || []).forEach(function (x) {\n                setKey(argv, x.split('.'), defaults[key]);\n            });\n        }\n    });\n    \n    if (opts['--']) {\n        argv['--'] = new Array();\n        notFlags.forEach(function(key) {\n            argv['--'].push(key);\n        });\n    }\n    else {\n        notFlags.forEach(function(key) {\n            argv._.push(key);\n        });\n    }\n\n    return argv;\n};\n\nfunction hasKey (obj, keys) {\n    var o = obj;\n    keys.slice(0,-1).forEach(function (key) {\n        o = (o[key] || {});\n    });\n\n    var key = keys[keys.length - 1];\n    return key in o;\n}\n\nfunction isNumber (x) {\n    if (typeof x === 'number') return true;\n    if (/^0x[0-9a-f]+$/i.test(x)) return true;\n    return /^[-+]?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(e[-+]?\\d+)?$/.test(x);\n}\n\n","function webpackEmptyContext(req) {\n\tvar e = new Error('Cannot find module \"' + req + '\".');\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 5;","if(typeof __WEBPACK_EXTERNAL_MODULE__7__ === 'undefined') {var e = new Error(\"Cannot find module \\\"assemblyscript\\\"\"); e.code = 'MODULE_NOT_FOUND'; throw e;}\nmodule.exports = __WEBPACK_EXTERNAL_MODULE__7__;","var proc = typeof process !== \"undefined\" && process || {};\r\nvar isCI = proc.env && \"CI\" in proc.env;\r\n\r\nfunction from(stream, base) {\r\n  var colors = base || {};\r\n  colors.supported = (stream && !!stream.isTTY) || isCI;\r\n  colors.gray = text => colors.supported ? exports.GRAY + text + exports.RESET : text;\r\n  colors.red = text => colors.supported ? exports.RED + text + exports.RESET : text;\r\n  colors.green = text => colors.supported ? exports.GREEN + text + exports.RESET : text;\r\n  colors.yellow = text => colors.supported ? exports.YELLOW + text + exports.RESET : text;\r\n  colors.blue = text => colors.supported ? exports.BLUE + text + exports.RESET : text;\r\n  colors.magenta = text => colors.supported ? exports.MAGENTA + text + exports.RESET : text;\r\n  colors.cyan = text => colors.supported ? exports.CYAN + text + exports.RESET : text;\r\n  colors.white = text => colors.supported ? exports.WHITE + text + exports.RESET : text;\r\n  return colors;\r\n}\r\n\r\nexports.stdout = from(proc.stdout, exports);\r\nexports.stderr = from(proc.stderr);\r\nexports.from = from;\r\n\r\nexports.GRAY = \"\\u001b[90m\";\r\nexports.RED = \"\\u001b[91m\";\r\nexports.GREEN = \"\\u001b[92m\";\r\nexports.YELLOW = \"\\u001b[93m\";\r\nexports.BLUE = \"\\u001b[94m\";\r\nexports.MAGENTA = \"\\u001b[95m\";\r\nexports.CYAN = \"\\u001b[96m\";\r\nexports.WHITE = \"\\u001b[97m\";\r\nexports.RESET = \"\\u001b[0m\";\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal UTF8 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar utf8 = exports;\r\n\r\n/**\r\n * Calculates the UTF8 byte length of a string.\r\n * @param {string} string String\r\n * @returns {number} Byte length\r\n */\r\nutf8.length = function utf8_length(string) {\r\n    var len = 0,\r\n        c = 0;\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c = string.charCodeAt(i);\r\n        if (c < 128)\r\n            len += 1;\r\n        else if (c < 2048)\r\n            len += 2;\r\n        else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {\r\n            ++i;\r\n            len += 4;\r\n        } else\r\n            len += 3;\r\n    }\r\n    return len;\r\n};\r\n\r\n/**\r\n * Reads UTF8 bytes as a string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} String read\r\n */\r\nutf8.read = function utf8_read(buffer, start, end) {\r\n    var len = end - start;\r\n    if (len < 1)\r\n        return \"\";\r\n    var parts = null,\r\n        chunk = [],\r\n        i = 0, // char offset\r\n        t;     // temporary\r\n    while (start < end) {\r\n        t = buffer[start++];\r\n        if (t < 128)\r\n            chunk[i++] = t;\r\n        else if (t > 191 && t < 224)\r\n            chunk[i++] = (t & 31) << 6 | buffer[start++] & 63;\r\n        else if (t > 239 && t < 365) {\r\n            t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000;\r\n            chunk[i++] = 0xD800 + (t >> 10);\r\n            chunk[i++] = 0xDC00 + (t & 1023);\r\n        } else\r\n            chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63;\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\n/**\r\n * Writes a string as UTF8 bytes.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Bytes written\r\n */\r\nutf8.write = function utf8_write(string, buffer, offset) {\r\n    var start = offset,\r\n        c1, // character 1\r\n        c2; // character 2\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c1 = string.charCodeAt(i);\r\n        if (c1 < 128) {\r\n            buffer[offset++] = c1;\r\n        } else if (c1 < 2048) {\r\n            buffer[offset++] = c1 >> 6       | 192;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {\r\n            c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF);\r\n            ++i;\r\n            buffer[offset++] = c1 >> 18      | 240;\r\n            buffer[offset++] = c1 >> 12 & 63 | 128;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else {\r\n            buffer[offset++] = c1 >> 12      | 224;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        }\r\n    }\r\n    return offset - start;\r\n};\r\n","/**\r\n * Compiler frontend for node.js\r\n *\r\n * Uses the low-level API exported from src/index.ts so it works with the compiler compiled to\r\n * JavaScript as well as the compiler compiled to WebAssembly (eventually). Runs the sources\r\n * directly through ts-node if distribution files are not present (indicated by a `-dev` version).\r\n *\r\n * Can also be packaged as a bundle suitable for in-browser use with the standard library injected\r\n * in the build step. See dist/asc.js for the bundle and webpack.config.js for building details.\r\n *\r\n * @module cli/asc\r\n */\r\n\r\nconst fs = require(\"fs\");\r\nconst path = require(\"path\");\r\nconst utf8 = require(\"@protobufjs/utf8\");\r\nconst colors = require(\"./util/colors\");\r\nconst EOL = process.platform === \"win32\" ? \"\\r\\n\" : \"\\n\";\r\n\r\n// Use distribution files if present, otherwise run the sources directly\r\nvar assemblyscript, isDev;\r\n(() => {\r\n  try {\r\n    assemblyscript = require(\"../dist/assemblyscript.js\");\r\n    isDev = false;\r\n    try { require(\"source-map-support\").install(); } catch (e) {/* optional */}\r\n  } catch (e) {\r\n    try {\r\n      require(\"ts-node\").register({ project: path.join(__dirname, \"..\", \"src\", \"tsconfig.json\") });\r\n      require(\"../src/glue/js\");\r\n      assemblyscript = require(\"../src\");\r\n      isDev = true;\r\n    } catch (e) {\r\n      // last resort: same directory CommonJS\r\n      assemblyscript = eval(\"require('./assemblyscript')\");\r\n      isDev = false;\r\n    }\r\n  }\r\n})();\r\n\r\n/** Whether this is a webpack bundle or not. */\r\nexports.isBundle = typeof BUNDLE_VERSION === \"string\";\r\n\r\n/** Whether asc runs the sources directly or not. */\r\nexports.isDev = isDev;\r\n\r\n/** AssemblyScript version. */\r\nexports.version = exports.isBundle ? BUNDLE_VERSION : require(\"../package.json\").version;\r\n\r\n/** Available CLI options. */\r\nexports.options = require(\"./asc.json\");\r\n\r\n/** Common root used in source maps. */\r\nexports.sourceMapRoot = \"assemblyscript:///\";\r\n\r\n/** Prefix used for library files. */\r\nexports.libraryPrefix = assemblyscript.LIBRARY_PREFIX;\r\n\r\n/** Default Binaryen optimization level. */\r\nexports.defaultOptimizeLevel = 2;\r\n\r\n/** Default Binaryen shrink level. */\r\nexports.defaultShrinkLevel = 1;\r\n\r\n/** Bundled library files. */\r\nexports.libraryFiles = exports.isBundle ? BUNDLE_LIBRARY : (() => { // set up if not a bundle\r\n  const libDir = path.join(__dirname, \"..\", \"std\", \"assembly\");\r\n  const libFiles = require(\"glob\").sync(\"**/*.ts\", { cwd: libDir });\r\n  const bundled = {};\r\n  libFiles.forEach(file => bundled[file.replace(/\\.ts$/, \"\")] = fs.readFileSync(path.join(libDir, file), \"utf8\" ));\r\n  return bundled;\r\n})();\r\n\r\n/** Bundled definition files. */\r\nexports.definitionFiles = exports.isBundle ? BUNDLE_DEFINITIONS : (() => { // set up if not a bundle\r\n  const stdDir = path.join(__dirname, \"..\", \"std\");\r\n  return {\r\n    \"assembly\": fs.readFileSync(path.join(stdDir, \"assembly.d.ts\"), \"utf8\"),\r\n    \"portable\": fs.readFileSync(path.join(stdDir, \"portable.d.ts\"), \"utf8\")\r\n  };\r\n})();\r\n\r\n/** Convenience function that parses and compiles source strings directly. */\r\nexports.compileString = (sources, options) => {\r\n  if (typeof sources === \"string\") sources = { \"input.ts\": sources };\r\n  const output = Object.create({\r\n    stdout: createMemoryStream(),\r\n    stderr: createMemoryStream(),\r\n    binary: null,\r\n    text: null\r\n  });\r\n  exports.main([\r\n    \"--binaryFile\", \"binary\",\r\n    \"--textFile\", \"text\",\r\n    ...Object.keys(options || {}).map(arg => `--${arg}=${options[arg]}`),\r\n    ...Object.keys(sources),\r\n  ], {\r\n    stdout: output.stdout,\r\n    stderr: output.stderr,\r\n    readFile: name => sources.hasOwnProperty(name) ? sources[name] : null,\r\n    writeFile: (name, contents) => output[name] = contents,\r\n    listFiles: () => []\r\n  });\r\n  return output;\r\n}\r\n\r\n/** Runs the command line utility using the specified arguments array. */\r\nexports.main = function main(argv, options, callback) {\r\n  if (typeof options === \"function\") {\r\n    callback = options;\r\n    options = {};\r\n  } else if (!options) {\r\n    options = {};\r\n  }\r\n\r\n  const stdout = options.stdout || process.stdout;\r\n  const stderr = options.stderr || process.stderr;\r\n  const readFile = options.readFile || readFileNode;\r\n  const writeFile = options.writeFile || writeFileNode;\r\n  const listFiles = options.listFiles || listFilesNode;\r\n  const stats = options.stats || createStats();\r\n\r\n  // Output must be specified if not present in the environment\r\n  if (!stdout) throw Error(\"'options.stdout' must be specified\");\r\n  if (!stderr) throw Error(\"'options.stderr' must be specified\");\r\n\r\n  const args = parseArguments(argv);\r\n  const indent = 24;\r\n\r\n  if (args.noColors) {\r\n    colors.stdout.supported =\r\n    colors.stderr.supported = false;\r\n  } else {\r\n    colors.stdout = colors.from(stdout);\r\n    colors.stderr = colors.from(stderr);\r\n  }\r\n\r\n  // Use default callback if none is provided\r\n  if (!callback) callback = function defaultCallback(err) {\r\n    var code = 0;\r\n    if (err) {\r\n      stderr.write(colors.stderr.red(\"ERROR: \") + err.stack.replace(/^ERROR: /i, \"\") + EOL);\r\n      code = 1;\r\n    }\r\n    return code;\r\n  };\r\n\r\n  // Just print the version if requested\r\n  if (args.version) {\r\n    stdout.write(\"Version \" + exports.version + (isDev ? \"-dev\" : \"\") + EOL);\r\n    return callback(null);\r\n  }\r\n  // Print the help message if requested or no source files are provided\r\n  if (args.help || args._.length < 1) {\r\n    const opts = [];\r\n    Object.keys(exports.options).forEach(name => {\r\n      var option = exports.options[name];\r\n      var text = \"  \";\r\n      text += \"--\" + name;\r\n      if (option.aliases && option.aliases[0].length === 1) {\r\n        text += \", -\" + option.aliases[0];\r\n      }\r\n      while (text.length < indent) {\r\n        text += \" \";\r\n      }\r\n      if (Array.isArray(option.description)) {\r\n        opts.push(text + option.description[0] + option.description.slice(1).map(line => {\r\n          for (let i = 0; i < indent; ++i) {\r\n            line = \" \" + line;\r\n          }\r\n          return EOL + line;\r\n        }).join(\"\"));\r\n      } else {\r\n        opts.push(text + option.description);\r\n      }\r\n    });\r\n\r\n    var out = args.help ? stdout : stderr;\r\n    var color = args.help ? colors.stdout : colors.stderr;\r\n    out.write([\r\n      color.white(\"Syntax\"),\r\n      \"  \" + color.cyan(\"asc\") + \" [entryFile ...] [options]\",\r\n      \"\",\r\n      color.white(\"Examples\"),\r\n      \"  \" + color.cyan(\"asc\") + \" hello.ts\",\r\n      \"  \" + color.cyan(\"asc\") + \" hello.ts -b hello.wasm -t hello.wat\",\r\n      \"  \" + color.cyan(\"asc\") + \" hello1.ts hello2.ts -b -O > hello.wasm\",\r\n      \"\",\r\n      color.white(\"Options\"),\r\n    ].concat(opts).join(EOL) + EOL);\r\n    return callback(null);\r\n  }\r\n\r\n  // I/O must be specified if not present in the environment\r\n  if (!fs.readFileSync) {\r\n    if (readFile === readFileNode) throw Error(\"'options.readFile' must be specified\");\r\n    if (writeFile === writeFileNode) throw Error(\"'options.writeFile' must be specified\");\r\n    if (listFiles === listFilesNode) throw Error(\"'options.listFiles' must be specified\");\r\n  }\r\n\r\n  // Set up base directory\r\n  const baseDir = args.baseDir ? path.resolve(args.baseDir) : \".\";\r\n\r\n  // Set up transforms\r\n  const transforms = [];\r\n  if (args.transform) {\r\n    if (typeof args.transform === \"string\") args.transform = args.transform.split(\",\");\r\n    args.transform.forEach(transform =>\r\n      transforms.push(\r\n        require(\r\n          path.isAbsolute(transform = transform.trim())\r\n            ? transform\r\n            : path.join(process.cwd(), transform)\r\n        )\r\n      )\r\n    );\r\n  }\r\n  function applyTransform(name, ...args) {\r\n    transforms.forEach(transform => {\r\n      if (typeof transform[name] === \"function\") transform[name](...args);\r\n    });\r\n  }\r\n\r\n  // Begin parsing\r\n  var parser = null;\r\n\r\n  // Include library files\r\n  if (!args.noLib) { // bundled\r\n    Object.keys(exports.libraryFiles).forEach(libPath => {\r\n      if (libPath.indexOf(\"/\") >= 0) return; // in sub-directory: imported on demand\r\n      stats.parseCount++;\r\n      stats.parseTime += measure(() => {\r\n        parser = assemblyscript.parseFile(\r\n          exports.libraryFiles[libPath],\r\n          exports.libraryPrefix + libPath + \".ts\",\r\n          false,\r\n          parser\r\n        );\r\n      });\r\n    });\r\n  }\r\n  const customLibDirs = [];\r\n  if (args.lib) {\r\n    if (typeof args.lib === \"string\") args.lib = args.lib.split(\",\");\r\n    Array.prototype.push.apply(customLibDirs, args.lib.map(lib => lib.trim()));\r\n    for (let i = 0, k = customLibDirs.length; i < k; ++i) { // custom\r\n      let libDir = customLibDirs[i];\r\n      let libFiles;\r\n      if (libDir.endsWith(\".ts\")) {\r\n        libFiles = [ path.basename(libDir) ];\r\n        libDir = path.dirname(libDir);\r\n      } else {\r\n        libFiles = listFiles(libDir);\r\n      }\r\n      for (let j = 0, l = libFiles.length; j < l; ++j) {\r\n        let libPath = libFiles[j];\r\n        let libText = readFile(path.join(libDir, libPath));\r\n        if (libText === null) return callback(Error(\"Library file '\" + libPath + \"' not found.\"));\r\n        stats.parseCount++;\r\n        stats.parseTime += measure(() => {\r\n          parser = assemblyscript.parseFile(\r\n            libText,\r\n            exports.libraryPrefix + libPath,\r\n            false,\r\n            parser\r\n          );\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  // Include entry files\r\n  for (let i = 0, k = args._.length; i < k; ++i) {\r\n    const filename = args._[i];\r\n\r\n    let sourcePath = filename.replace(/\\\\/g, \"/\").replace(/(\\.ts|\\/)$/, \"\");\r\n\r\n    // Try entryPath.ts, then entryPath/index.ts\r\n    let sourceText = readFile(path.join(baseDir, sourcePath) + \".ts\");\r\n    if (sourceText === null) {\r\n      sourceText = readFile(path.join(baseDir, sourcePath, \"index.ts\"));\r\n      if (sourceText === null) {\r\n        return callback(Error(\"Entry file '\" + sourcePath + \".ts' not found.\"));\r\n      } else {\r\n        sourcePath += \"/index.ts\";\r\n      }\r\n    } else {\r\n      sourcePath += \".ts\";\r\n    }\r\n\r\n    stats.parseCount++;\r\n    stats.parseTime += measure(() => {\r\n      parser = assemblyscript.parseFile(sourceText, sourcePath, true, parser);\r\n    });\r\n\r\n    // Process backlog\r\n    while ((sourcePath = parser.nextFile()) != null) {\r\n      let found = false;\r\n\r\n      // Load library file if explicitly requested\r\n      if (sourcePath.startsWith(exports.libraryPrefix)) {\r\n        const plainName = sourcePath.substring(exports.libraryPrefix.length);\r\n        const indexName = sourcePath.substring(exports.libraryPrefix.length) + \"/index\";\r\n        if (exports.libraryFiles.hasOwnProperty(plainName)) {\r\n          sourceText = exports.libraryFiles[plainName];\r\n          sourcePath = exports.libraryPrefix + plainName + \".ts\";\r\n        } else if (exports.libraryFiles.hasOwnProperty(indexName)) {\r\n          sourceText = exports.libraryFiles[indexName];\r\n          sourcePath = exports.libraryPrefix + indexName + \".ts\";\r\n        } else {\r\n          for (let i = 0, k = customLibDirs.length; i < k; ++i) {\r\n            const dir = customLibDirs[i];\r\n            sourceText = readFile(path.join(dir, plainName + \".ts\"));\r\n            if (sourceText !== null) {\r\n              sourcePath = exports.libraryPrefix + plainName + \".ts\";\r\n              break;\r\n            } else {\r\n              sourceText = readFile(path.join(dir, indexName + \".ts\"));\r\n              if (sourceText !== null) {\r\n                sourcePath = exports.libraryPrefix + indexName + \".ts\";\r\n                break;\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n      // Otherwise try nextFile.ts, nextFile/index.ts, ~lib/nextFile.ts, ~lib/nextFile/index.ts\r\n      } else {\r\n        const plainName = sourcePath;\r\n        const indexName = sourcePath + \"/index\";\r\n        sourceText = readFile(path.join(baseDir, plainName + \".ts\"));\r\n        if (sourceText !== null) {\r\n          sourcePath = plainName + \".ts\";\r\n        } else {\r\n          sourceText = readFile(path.join(baseDir, indexName + \".ts\"));\r\n          if (sourceText !== null) {\r\n            sourcePath = indexName + \".ts\";\r\n          } else if (!plainName.startsWith(\".\")) {\r\n            if (exports.libraryFiles.hasOwnProperty(plainName)) {\r\n              sourceText = exports.libraryFiles[plainName];\r\n              sourcePath = exports.libraryPrefix + plainName + \".ts\";\r\n            } else if (exports.libraryFiles.hasOwnProperty(indexName)) {\r\n              sourceText = exports.libraryFiles[indexName];\r\n              sourcePath = exports.libraryPrefix + indexName + \".ts\";\r\n            } else {\r\n              for (let i = 0, k = customLibDirs.length; i < k; ++i) {\r\n                const dir = customLibDirs[i];\r\n                sourceText = readFile(path.join(dir, plainName + \".ts\"));\r\n                if (sourceText !== null) {\r\n                  sourcePath = exports.libraryPrefix + plainName + \".ts\";\r\n                  break;\r\n                } else {\r\n                  sourceText = readFile(path.join(dir, indexName + \".ts\"));\r\n                  if (sourceText !== null) {\r\n                    sourcePath = exports.libraryPrefix + indexName + \".ts\";\r\n                    break;\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      if (sourceText == null) {\r\n        return callback(Error(\"Import file '\" + sourcePath + \".ts' not found.\"));\r\n      }\r\n      stats.parseCount++;\r\n      stats.parseTime += measure(() => {\r\n        assemblyscript.parseFile(sourceText, sourcePath, false, parser);\r\n      });\r\n    }\r\n    if (checkDiagnostics(parser, stderr)) {\r\n      return callback(Error(\"Parse error\"));\r\n    }\r\n  }\r\n\r\n  applyTransform(\"afterParse\", parser);\r\n\r\n  // Finish parsing\r\n  const program = assemblyscript.finishParsing(parser);\r\n\r\n  // Begin compilation\r\n  const compilerOptions = assemblyscript.createOptions();\r\n  assemblyscript.setTarget(compilerOptions, 0);\r\n  assemblyscript.setNoTreeShaking(compilerOptions, !!args.noTreeShaking);\r\n  assemblyscript.setNoAssert(compilerOptions, !!args.noAssert);\r\n  assemblyscript.setNoMemory(compilerOptions, !!args.noMemory);\r\n  assemblyscript.setImportMemory(compilerOptions, !!args.importMemory);\r\n  assemblyscript.setImportTable(compilerOptions, !!args.importTable);\r\n  assemblyscript.setMemoryBase(compilerOptions, args.memoryBase >>> 0);\r\n  assemblyscript.setSourceMap(compilerOptions, args.sourceMap != null);\r\n\r\n  // Initialize default aliases\r\n  assemblyscript.setGlobalAlias(compilerOptions, \"Math\", \"NativeMath\");\r\n  assemblyscript.setGlobalAlias(compilerOptions, \"Mathf\", \"NativeMathf\");\r\n  assemblyscript.setGlobalAlias(compilerOptions, \"abort\", \"~lib/env/abort\"); // to disable: --use abort=\r\n\r\n  // Add or override aliases if specified\r\n  var aliases = args.use;\r\n  if (aliases != null) {\r\n    if (typeof aliases === \"string\") aliases = aliases.split(\",\");\r\n    for (let i = 0, k = aliases.length; i < k; ++i) {\r\n      let part = aliases[i];\r\n      let p = part.indexOf(\"=\");\r\n      if (p < 0) return callback(Error(\"Global alias '\" + part + \"' is invalid.\"));\r\n      let name = part.substring(0, p).trim();\r\n      let alias = part.substring(p + 1).trim();\r\n      if (!name.length) return callback(Error(\"Global alias '\" + part + \"' is invalid.\"));\r\n      assemblyscript.setGlobalAlias(compilerOptions, name, alias);\r\n    }\r\n  }\r\n\r\n  // Enable additional features if specified\r\n  var features = args.enable;\r\n  if (features != null) {\r\n    if (typeof features === \"string\") features = features.split(\",\");\r\n    for (let i = 0, k = features.length; i < k; ++i) {\r\n      let name = features[i].trim();\r\n      let flag = assemblyscript[\"FEATURE_\" + name.replace(/\\-/g, \"_\").toUpperCase()];\r\n      if (!flag) return callback(Error(\"Feature '\" + name + \"' is unknown.\"));\r\n      assemblyscript.enableFeature(compilerOptions, flag);\r\n    }\r\n  }\r\n\r\n  var module;\r\n  stats.compileCount++;\r\n  (() => {\r\n    try {\r\n      stats.compileTime += measure(() => {\r\n        module = assemblyscript.compileProgram(program, compilerOptions);\r\n      });\r\n    } catch (e) {\r\n      return callback(e);\r\n    }\r\n  })();\r\n  if (checkDiagnostics(parser, stderr)) {\r\n    if (module) module.dispose();\r\n    return callback(Error(\"Compile error\"));\r\n  }\r\n\r\n  // Validate the module if requested\r\n  if (args.validate) {\r\n    stats.validateCount++;\r\n    stats.validateTime += measure(() => {\r\n      if (!module.validate()) {\r\n        module.dispose();\r\n        return callback(Error(\"Validate error\"));\r\n      }\r\n    });\r\n  }\r\n\r\n  // Set Binaryen-specific options\r\n  if (args.trapMode === \"clamp\") {\r\n    stats.optimizeCount++;\r\n    stats.optimizeTime += measure(() => {\r\n      module.runPasses([ \"trap-mode-clamp\" ]);\r\n    });\r\n  } else if (args.trapMode === \"js\") {\r\n    stats.optimizeCount++;\r\n    stats.optimizeTime += measure(() => {\r\n      module.runPasses([ \"trap-mode-js\" ]);\r\n    });\r\n  } else if (args.trapMode !== \"allow\") {\r\n    module.dispose();\r\n    return callback(Error(\"Unsupported trap mode\"));\r\n  }\r\n\r\n  var optimizeLevel = -1;\r\n  var shrinkLevel = 0;\r\n  var debugInfo = !args.noDebug;\r\n\r\n  if (args.optimize !== false) {\r\n    if (typeof args.optimize === \"number\") {\r\n      optimizeLevel = args.optimize;\r\n    } else if (args[\"0\"]) {\r\n      optimizeLevel = 0;\r\n    } else if (args[\"1\"]) {\r\n      optimizeLevel = 1;\r\n    } else if (args[\"2\"]) {\r\n      optimizeLevel = 2;\r\n    } else if (args[\"3\"]) {\r\n      optimizeLevel = 3;\r\n    } else if (args.optimize === true) {\r\n      optimizeLevel = exports.defaultOptimizeLevel;\r\n      shrinkLevel = exports.defaultShrinkLevel;\r\n    } else\r\n      optimizeLevel = 0;\r\n  }\r\n\r\n  if (args[\"s\"]) {\r\n    shrinkLevel = 1;\r\n  } else if (args[\"z\"]) {\r\n    shrinkLevel = 2;\r\n  }\r\n\r\n  if (typeof args.optimizeLevel === \"number\") {\r\n    optimizeLevel = args.optimizeLevel;\r\n  }\r\n\r\n  if (typeof args.shrinkLevel === \"number\") {\r\n    shrinkLevel = args.shrinkLevel;\r\n  } else if (args.shrinkLevel === \"s\") {\r\n    shrinkLevel = 1;\r\n  } else if (args.shrinkLevel === \"z\") {\r\n    shrinkLevel = 2;\r\n  }\r\n\r\n  // Implicitly run costly non-LLVM optimizations on -O3 or -Oz\r\n  // see: https://github.com/WebAssembly/binaryen/pull/1596\r\n  if (optimizeLevel >= 3 || shrinkLevel >= 2) optimizeLevel = 4;\r\n\r\n  module.setOptimizeLevel(optimizeLevel > 0 ? optimizeLevel : 0);\r\n  module.setShrinkLevel(shrinkLevel);\r\n  module.setDebugInfo(debugInfo);\r\n\r\n  var runPasses = [];\r\n  if (args.runPasses) {\r\n    if (typeof args.runPasses === \"string\") {\r\n      args.runPasses = args.runPasses.split(\",\");\r\n    }\r\n    if (args.runPasses.length) {\r\n      args.runPasses.forEach(pass => {\r\n        if (runPasses.indexOf(pass) < 0)\r\n          runPasses.push(pass);\r\n      });\r\n    }\r\n  }\r\n\r\n  // Optimize the module if requested\r\n  if (optimizeLevel >= 0) {\r\n    stats.optimizeCount++;\r\n    stats.optimizeTime += measure(() => {\r\n      module.optimize();\r\n    });\r\n  }\r\n\r\n  // Run additional passes if requested\r\n  if (runPasses.length) {\r\n    stats.optimizeCount++;\r\n    stats.optimizeTime += measure(() => {\r\n      module.runPasses(runPasses.map(pass => pass.trim()));\r\n    });\r\n  }\r\n\r\n  // Prepare output\r\n  if (!args.noEmit) {\r\n    let hasStdout = false;\r\n    let hasOutput = false;\r\n\r\n    if (args.outFile != null) {\r\n      if (/\\.was?t$/.test(args.outFile) && args.textFile == null) {\r\n        args.textFile = args.outFile;\r\n      } else if (/\\.js$/.test(args.outFile) && args.asmjsFile == null) {\r\n        args.asmjsFile = args.outFile;\r\n      } else if (args.binaryFile == null) {\r\n        args.binaryFile = args.outFile;\r\n      }\r\n    }\r\n\r\n    // Write binary\r\n    if (args.binaryFile != null) {\r\n      let sourceMapURL = args.sourceMap != null\r\n        ? args.sourceMap.length\r\n          ? args.sourceMap\r\n          : path.basename(args.binaryFile) + \".map\"\r\n        : null;\r\n\r\n      let wasm;\r\n      stats.emitCount++;\r\n      stats.emitTime += measure(() => {\r\n        wasm = module.toBinary(sourceMapURL)\r\n      });\r\n\r\n      if (args.binaryFile.length) {\r\n        writeFile(path.join(baseDir, args.binaryFile), wasm.output);\r\n      } else {\r\n        writeStdout(wasm.output);\r\n        hasStdout = true;\r\n      }\r\n      hasOutput = true;\r\n\r\n      // Post-process source map\r\n      if (wasm.sourceMap != null) {\r\n        if (args.binaryFile.length) {\r\n          let sourceMap = JSON.parse(wasm.sourceMap);\r\n          sourceMap.sourceRoot = exports.sourceMapRoot;\r\n          sourceMap.sources.forEach((name, index) => {\r\n            let text = null;\r\n            if (name.startsWith(exports.libraryPrefix)) {\r\n              let stdName = name.substring(exports.libraryPrefix.length).replace(/\\.ts$/, \"\");\r\n              if (exports.libraryFiles.hasOwnProperty(stdName)) {\r\n                text = exports.libraryFiles[stdName];\r\n              } else {\r\n                for (let i = 0, k = customLibDirs.length; i < k; ++i) {\r\n                  text = readFile(path.join(\r\n                    customLibDirs[i],\r\n                    name.substring(exports.libraryPrefix.length))\r\n                  );\r\n                  if (text !== null) break;\r\n                }\r\n              }\r\n            } else {\r\n              text = readFile(path.join(baseDir, name));\r\n            }\r\n            if (text === null) {\r\n              return callback(Error(\"Source file '\" + name + \"' not found.\"));\r\n            }\r\n            if (!sourceMap.sourceContents) sourceMap.sourceContents = [];\r\n            sourceMap.sourceContents[index] = text;\r\n          });\r\n          writeFile(path.join(\r\n            baseDir,\r\n            path.dirname(args.binaryFile),\r\n            path.basename(sourceMapURL)\r\n          ), JSON.stringify(sourceMap));\r\n        } else {\r\n          stderr.write(\"Skipped source map (stdout already occupied)\" + EOL);\r\n        }\r\n      }\r\n    }\r\n\r\n    // Write asm.js\r\n    if (args.asmjsFile != null) {\r\n      let asm;\r\n      if (args.asmjsFile.length) {\r\n        stats.emitCount++;\r\n        stats.emitTime += measure(() => {\r\n          asm = module.toAsmjs();\r\n        });\r\n        writeFile(path.join(baseDir, args.asmjsFile), asm);\r\n      } else if (!hasStdout) {\r\n        stats.emitCount++;\r\n        stats.emitTime += measure(() => {\r\n          asm = module.toAsmjs();\r\n        });\r\n        writeStdout(asm);\r\n        hasStdout = true;\r\n      }\r\n      hasOutput = true;\r\n    }\r\n\r\n    // Write WebIDL\r\n    if (args.idlFile != null) {\r\n      let idl;\r\n      if (args.idlFile.length) {\r\n        stats.emitCount++;\r\n        stats.emitTime += measure(() => {\r\n          idl = assemblyscript.buildIDL(program);\r\n        });\r\n        writeFile(path.join(baseDir, args.idlFile), idl);\r\n      } else if (!hasStdout) {\r\n        stats.emitCount++;\r\n        stats.emitTime += measure(() => {\r\n          idl = assemblyscript.buildIDL(program);\r\n        });\r\n        writeStdout(idl);\r\n        hasStdout = true;\r\n      }\r\n      hasOutput = true;\r\n    }\r\n\r\n    // Write TypeScript definition\r\n    if (args.tsdFile != null) {\r\n      let tsd;\r\n      if (args.tsdFile.length) {\r\n        stats.emitCount++;\r\n        stats.emitTime += measure(() => {\r\n          tsd = assemblyscript.buildTSD(program);\r\n        });\r\n        writeFile(path.join(baseDir, args.tsdFile), tsd);\r\n      } else if (!hasStdout) {\r\n        stats.emitCount++;\r\n        stats.emitTime += measure(() => {\r\n          tsd = assemblyscript.buildTSD(program);\r\n        });\r\n        writeStdout(tsd);\r\n        hasStdout = true;\r\n      }\r\n      hasOutput = true;\r\n    }\r\n\r\n    // Write text (must be last)\r\n    if (args.textFile != null || !hasOutput) {\r\n      let wat;\r\n      if (args.textFile && args.textFile.length) {\r\n        stats.emitCount++;\r\n        stats.emitTime += measure(() => {\r\n          wat = module.toText();\r\n        });\r\n        writeFile(path.join(baseDir, args.textFile), wat);\r\n      } else if (!hasStdout) {\r\n        stats.emitCount++;\r\n        stats.emitTime += measure(() => {\r\n          wat = module.toText()\r\n        });\r\n        writeStdout(wat);\r\n      }\r\n    }\r\n  }\r\n\r\n  module.dispose();\r\n  if (args.measure) {\r\n    printStats(stats, stderr);\r\n  }\r\n  return callback(null);\r\n\r\n  function readFileNode(filename) {\r\n    try {\r\n      let text;\r\n      stats.readCount++;\r\n      stats.readTime += measure(() => {\r\n        text = fs.readFileSync(filename, { encoding: \"utf8\" });\r\n      });\r\n      return text;\r\n    } catch (e) {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  function writeFileNode(filename, contents) {\r\n    try {\r\n      stats.writeCount++;\r\n      stats.writeTime += measure(() => {\r\n        if (typeof contents === \"string\") {\r\n          fs.writeFileSync(filename, contents, { encoding: \"utf8\" } );\r\n        } else {\r\n          fs.writeFileSync(filename, contents);\r\n        }\r\n      });\r\n      return true;\r\n    } catch (e) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  function listFilesNode(dirname) {\r\n    var files;\r\n    try {\r\n      stats.readTime += measure(() => {\r\n        files = require(\"glob\").sync(\"*.ts\", { cwd: dirname });\r\n      });\r\n      return files;\r\n    } catch (e) {\r\n      return [];\r\n    }\r\n  }\r\n\r\n  function writeStdout(contents) {\r\n    if (!writeStdout.used) {\r\n      stats.writeCount++;\r\n      writeStdout.used = true;\r\n    }\r\n    stats.writeTime += measure(() => {\r\n      if (typeof contents === \"string\") {\r\n        stdout.write(contents, { encoding: \"utf8\" });\r\n      } else {\r\n        stdout.write(contents);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n/** Parses the specified command line arguments. */\r\nfunction parseArguments(argv) {\r\n  const opts = {};\r\n  Object.keys(exports.options).forEach(key => {\r\n    const opt = exports.options[key];\r\n    if (opt.aliases) {\r\n      (opts.alias || (opts.alias = {}))[key] = opt.aliases;\r\n    }\r\n    if (opt.default !== undefined) {\r\n      (opts.default || (opts.default = {}))[key] = opt.default;\r\n    }\r\n    if (opt.type === \"string\") {\r\n      (opts.string || (opts.string = [])).push(key);\r\n    } else if (opt.type === \"boolean\") {\r\n      (opts.boolean || (opts.boolean = [])).push(key);\r\n    }\r\n  });\r\n  return require(\"minimist\")(argv, opts);\r\n}\r\n\r\n/** Checks diagnostics emitted so far for errors. */\r\nfunction checkDiagnostics(emitter, stderr) {\r\n  var diagnostic;\r\n  var hasErrors = false;\r\n  while ((diagnostic = assemblyscript.nextDiagnostic(emitter)) != null) {\r\n    if (stderr) {\r\n      stderr.write(\r\n        assemblyscript.formatDiagnostic(diagnostic, stderr.isTTY, true) +\r\n        EOL + EOL\r\n      );\r\n    }\r\n    if (assemblyscript.isError(diagnostic)) hasErrors = true;\r\n  }\r\n  return hasErrors;\r\n}\r\n\r\nexports.checkDiagnostics = checkDiagnostics;\r\n\r\n/** Creates an empty set of stats. */\r\nfunction createStats() {\r\n  return {\r\n    readTime: 0,\r\n    readCount: 0,\r\n    writeTime: 0,\r\n    writeCount: 0,\r\n    parseTime: 0,\r\n    parseCount: 0,\r\n    compileTime: 0,\r\n    compileCount: 0,\r\n    emitTime: 0,\r\n    emitCount: 0,\r\n    validateTime: 0,\r\n    validateCount: 0,\r\n    optimizeTime: 0,\r\n    optimizeCount: 0\r\n  };\r\n}\r\n\r\nexports.createStats = createStats;\r\n\r\nif (!process.hrtime) process.hrtime = require(\"browser-process-hrtime\");\r\n\r\n/** Measures the execution time of the specified function.  */\r\nfunction measure(fn) {\r\n  const start = process.hrtime();\r\n  fn();\r\n  const times = process.hrtime(start);\r\n  return times[0] * 1e9 + times[1];\r\n}\r\n\r\nexports.measure = measure;\r\n\r\n/** Formats a high resolution time to a human readable string. */\r\nfunction formatTime(time) {\r\n  return time ? (time / 1e6).toFixed(3) + \" ms\" : \"N/A\";\r\n}\r\n\r\nexports.formatTime = formatTime;\r\n\r\n/** Formats and prints out the contents of a set of stats. */\r\nfunction printStats(stats, output) {\r\n  function format(time, count) {\r\n    return formatTime(time);\r\n  }\r\n  (output || process.stdout).write([\r\n    \"I/O Read  : \" + format(stats.readTime, stats.readCount),\r\n    \"I/O Write : \" + format(stats.writeTime, stats.writeCount),\r\n    \"Parse     : \" + format(stats.parseTime, stats.parseCount),\r\n    \"Compile   : \" + format(stats.compileTime, stats.compileCount),\r\n    \"Emit      : \" + format(stats.emitTime, stats.emitCount),\r\n    \"Validate  : \" + format(stats.validateTime, stats.validateCount),\r\n    \"Optimize  : \" + format(stats.optimizeTime, stats.optimizeCount)\r\n  ].join(EOL) + EOL);\r\n}\r\n\r\nexports.printStats = printStats;\r\n\r\nvar allocBuffer = typeof global !== \"undefined\" && global.Buffer\r\n  ? global.Buffer.allocUnsafe || function(len) { return new global.Buffer(len); }\r\n  : function(len) { return new Uint8Array(len) };\r\n\r\n/** Creates a memory stream that can be used in place of stdout/stderr. */\r\nfunction createMemoryStream(fn) {\r\n  var stream = [];\r\n  stream.write = function(chunk) {\r\n    if (fn) fn(chunk);\r\n    if (typeof chunk === \"string\") {\r\n      let buffer = allocBuffer(utf8.length(chunk));\r\n      utf8.write(chunk, buffer, 0);\r\n      chunk = buffer;\r\n    }\r\n    this.push(chunk);\r\n  };\r\n  stream.reset = function() {\r\n    stream.length = 0;\r\n  };\r\n  stream.toBuffer = function() {\r\n    var offset = 0, i = 0, k = this.length;\r\n    while (i < k) offset += this[i++].length;\r\n    var buffer = allocBuffer(offset);\r\n    offset = i = 0;\r\n    while (i < k) {\r\n      buffer.set(this[i], offset);\r\n      offset += this[i].length;\r\n      ++i;\r\n    }\r\n    return buffer;\r\n  };\r\n  stream.toString = function() {\r\n    var buffer = this.toBuffer();\r\n    return utf8.read(buffer, 0, buffer.length);\r\n  };\r\n  return stream;\r\n}\r\n\r\nexports.createMemoryStream = createMemoryStream;\r\n\r\n/** Compatible TypeScript compiler options for syntax highlighting etc. */\r\nexports.tscOptions = {\r\n  alwaysStrict: true,\r\n  noImplicitAny: true,\r\n  noImplicitReturns: true,\r\n  noImplicitThis: true,\r\n  noEmitOnError: true,\r\n  strictNullChecks: true,\r\n  experimentalDecorators: true,\r\n  target: \"esnext\",\r\n  module: \"commonjs\",\r\n  noLib: true,\r\n  types: [],\r\n  allowJs: false\r\n};\r\n"],"sourceRoot":""}